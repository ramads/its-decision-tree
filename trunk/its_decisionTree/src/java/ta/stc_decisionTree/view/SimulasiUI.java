package ta.stc_decisionTree.view;

import java.awt.Cursor;
import java.util.LinkedList;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import ta.stc_decisionTree.controller.PelatihanTask;
import ta.stc_decisionTree.data.NamaMateri;
import ta.stc_decisionTree.data.RuleNilai;
import ta.stc_decisionTree.model.DecisionTree;
import ta.stc_decisionTree.model.TabelTree;

public class SimulasiUI extends javax.swing.JFrame {
    
    public SimulasiUI() {
        initComponents();
        lCheck.setName("pilihSemuaMateri");
        tCheck.setName("pilihSemuaTarget");
        checkRulePetama.setSelected(true);
        setEnabledToolHasil(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lCheckDasarJava = new javax.swing.JCheckBox();
        lCheckKelasMethod = new javax.swing.JCheckBox();
        lCheckVariabel = new javax.swing.JCheckBox();
        lCheckTipeDataPrimitif = new javax.swing.JCheckBox();
        lCheckTipeDataObjek = new javax.swing.JCheckBox();
        lCheckArray = new javax.swing.JCheckBox();
        lCheckLogika = new javax.swing.JCheckBox();
        lCheckOpAritmatika = new javax.swing.JCheckBox();
        lCheckOpIncDec = new javax.swing.JCheckBox();
        lCheckOpRelasi = new javax.swing.JCheckBox();
        lCheckOpLogika = new javax.swing.JCheckBox();
        lCheckOpPredence = new javax.swing.JCheckBox();
        lCheckPerulangan = new javax.swing.JCheckBox();
        lCheckIf_Else = new javax.swing.JCheckBox();
        lCheckSwitchCase = new javax.swing.JCheckBox();
        lCheckFlowchart = new javax.swing.JCheckBox();
        lCheck = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        tCheckDasarJava = new javax.swing.JCheckBox();
        tCheckKelasMethod = new javax.swing.JCheckBox();
        tCheckVariabel = new javax.swing.JCheckBox();
        tCheckTipeDataPrimitif = new javax.swing.JCheckBox();
        tCheckTipeDataObjek = new javax.swing.JCheckBox();
        tCheckArray = new javax.swing.JCheckBox();
        tCheckLogika = new javax.swing.JCheckBox();
        tCheckOpAritmatika = new javax.swing.JCheckBox();
        tCheckOpIncDec = new javax.swing.JCheckBox();
        tCheckOpRelasi = new javax.swing.JCheckBox();
        tCheckOpLogika = new javax.swing.JCheckBox();
        tCheckOpPredence = new javax.swing.JCheckBox();
        tCheckPerulangan = new javax.swing.JCheckBox();
        tCheckIf_Else = new javax.swing.JCheckBox();
        tCheckSwitchCase = new javax.swing.JCheckBox();
        tCheckFlowchart = new javax.swing.JCheckBox();
        tCheck = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        bBentukTree = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        comboTabelTree = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        bLihatTabel = new javax.swing.JButton();
        bPrintTree = new javax.swing.JButton();
        bKlasifikasi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        checkRulePetama = new javax.swing.JCheckBox();
        checkRuleKedua = new javax.swing.JCheckBox();
        checkRuleKetiga = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMULASI STC DECISION TREE");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Materi Latih"));

        lCheckDasarJava.setText("Dasar Java");

        lCheckKelasMethod.setText("Kelas & Method");

        lCheckVariabel.setText("Variabel");

        lCheckTipeDataPrimitif.setText("TD Primitif");

        lCheckTipeDataObjek.setText("TD Objek");

        lCheckArray.setText("Array");

        lCheckLogika.setText("Logika");

        lCheckOpAritmatika.setText("Op. Aritmatika");

        lCheckOpIncDec.setText("Op. Inc Dec");

        lCheckOpRelasi.setText("Op. Relasi");

        lCheckOpLogika.setText("Op. Logika");

        lCheckOpPredence.setText("Op. Predence");

        lCheckPerulangan.setText("Perulangan");

        lCheckIf_Else.setText("If Else");

        lCheckSwitchCase.setText("Switch Case");

        lCheckFlowchart.setText("Flowchart");

        lCheck.setForeground(new java.awt.Color(255, 0, 0));
        lCheck.setText("Pilih Semua");
        lCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lCheckMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lCheckDasarJava)
                    .addComponent(lCheckKelasMethod)
                    .addComponent(lCheckVariabel)
                    .addComponent(lCheckTipeDataPrimitif)
                    .addComponent(lCheckTipeDataObjek)
                    .addComponent(lCheckArray)
                    .addComponent(lCheckLogika)
                    .addComponent(lCheckOpAritmatika)
                    .addComponent(lCheckOpIncDec)
                    .addComponent(lCheckOpRelasi)
                    .addComponent(lCheckOpLogika)
                    .addComponent(lCheckOpPredence)
                    .addComponent(lCheckPerulangan)
                    .addComponent(lCheckIf_Else)
                    .addComponent(lCheckSwitchCase)
                    .addComponent(lCheckFlowchart)
                    .addComponent(lCheck))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lCheckDasarJava)
                .addGap(3, 3, 3)
                .addComponent(lCheckKelasMethod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckVariabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckTipeDataPrimitif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckTipeDataObjek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckArray)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckLogika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckOpAritmatika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckOpIncDec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckOpRelasi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckOpLogika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckOpPredence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckPerulangan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckIf_Else)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckSwitchCase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCheckFlowchart))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Target Materi"));

        tCheckDasarJava.setText("Dasar Java");

        tCheckKelasMethod.setText("Kelas & Method");

        tCheckVariabel.setText("Variabel");

        tCheckTipeDataPrimitif.setText("TD Primitif");

        tCheckTipeDataObjek.setText("TD Objek");

        tCheckArray.setText("Array");

        tCheckLogika.setText("Logika");

        tCheckOpAritmatika.setText("Op. Aritmatika");

        tCheckOpIncDec.setText("Op. Inc Dec");

        tCheckOpRelasi.setText("Op. Relasi");

        tCheckOpLogika.setText("Op. Logika");

        tCheckOpPredence.setText("Op. Predence");

        tCheckPerulangan.setText("Perulangan");

        tCheckIf_Else.setText("If Else");

        tCheckSwitchCase.setText("Switch Case");

        tCheckFlowchart.setText("Flowchart");

        tCheck.setForeground(new java.awt.Color(255, 0, 0));
        tCheck.setText("Pilih Semua");
        tCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tCheckMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tCheckDasarJava)
                    .addComponent(tCheckKelasMethod)
                    .addComponent(tCheckVariabel)
                    .addComponent(tCheckTipeDataPrimitif)
                    .addComponent(tCheckTipeDataObjek)
                    .addComponent(tCheckArray)
                    .addComponent(tCheckLogika)
                    .addComponent(tCheckOpAritmatika)
                    .addComponent(tCheckOpIncDec)
                    .addComponent(tCheckOpRelasi)
                    .addComponent(tCheckOpLogika)
                    .addComponent(tCheckOpPredence)
                    .addComponent(tCheckPerulangan)
                    .addComponent(tCheckIf_Else)
                    .addComponent(tCheckSwitchCase)
                    .addComponent(tCheckFlowchart)
                    .addComponent(tCheck))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(tCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tCheckDasarJava)
                .addGap(3, 3, 3)
                .addComponent(tCheckKelasMethod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckVariabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckTipeDataPrimitif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckTipeDataObjek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckArray)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckLogika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckOpAritmatika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckOpIncDec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckOpRelasi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckOpLogika)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckOpPredence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckPerulangan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckIf_Else)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckSwitchCase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tCheckFlowchart))
        );

        bBentukTree.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bBentukTree.setText("Bentuk Tree");
        bBentukTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBentukTreeActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasil Pembentukan Tabel Tree"));

        comboTabelTree.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--PILIH--" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Daftar Tabel Tree");

        bLihatTabel.setText("Lihat Tabel");
        bLihatTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLihatTabelActionPerformed(evt);
            }
        });

        bPrintTree.setText("Print Tree");
        bPrintTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintTreeActionPerformed(evt);
            }
        });

        bKlasifikasi.setText("Demo Klasifikasi");

        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 204, Short.MAX_VALUE))
            .addComponent(comboTabelTree, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(bPrintTree, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bLihatTabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(bKlasifikasi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboTabelTree, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLihatTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPrintTree, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bKlasifikasi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bBentukTree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(bBentukTree, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Variasi Atribut Non Target"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 0));
        jLabel2.setText("Pilih Jumlah Variasi: ");

        checkRulePetama.setText("2 Variasi");
        checkRulePetama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkRulePetamaMouseClicked(evt);
            }
        });

        checkRuleKedua.setText("3 Variasi");
        checkRuleKedua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkRuleKeduaMouseClicked(evt);
            }
        });

        checkRuleKetiga.setText("5 Variasi");
        checkRuleKetiga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkRuleKetigaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkRulePetama)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkRuleKedua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkRuleKetiga)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(checkRulePetama)
                    .addComponent(checkRuleKedua)
                    .addComponent(checkRuleKetiga))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(780, 637));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCheckMouseClicked
        centangSemua(lCheck);
    }//GEN-LAST:event_lCheckMouseClicked

    private void tCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tCheckMouseClicked
        centangSemua(tCheck);
    }//GEN-LAST:event_tCheckMouseClicked

    private void bBentukTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBentukTreeActionPerformed
        bentukTree();
    }//GEN-LAST:event_bBentukTreeActionPerformed

    private void bLihatTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLihatTabelActionPerformed
        lihatTabelTree();
    }//GEN-LAST:event_bLihatTabelActionPerformed

    private void bPrintTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintTreeActionPerformed
        printTree();
    }//GEN-LAST:event_bPrintTreeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void checkRulePetamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkRulePetamaMouseClicked
        checkRuleKedua.setSelected(false);
        checkRuleKetiga.setSelected(false);
    }//GEN-LAST:event_checkRulePetamaMouseClicked

    private void checkRuleKeduaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkRuleKeduaMouseClicked
        checkRulePetama.setSelected(false);
        checkRuleKetiga.setSelected(false);
    }//GEN-LAST:event_checkRuleKeduaMouseClicked

    private void checkRuleKetigaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkRuleKetigaMouseClicked
        checkRulePetama.setSelected(false);
        checkRuleKedua.setSelected(false);
    }//GEN-LAST:event_checkRuleKetigaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulasiUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulasiUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulasiUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulasiUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimulasiUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBentukTree;
    private javax.swing.JButton bKlasifikasi;
    private javax.swing.JButton bLihatTabel;
    private javax.swing.JButton bPrintTree;
    private javax.swing.JCheckBox checkRuleKedua;
    private javax.swing.JCheckBox checkRuleKetiga;
    private javax.swing.JCheckBox checkRulePetama;
    private javax.swing.JComboBox comboTabelTree;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox lCheck;
    private javax.swing.JCheckBox lCheckArray;
    private javax.swing.JCheckBox lCheckDasarJava;
    private javax.swing.JCheckBox lCheckFlowchart;
    private javax.swing.JCheckBox lCheckIf_Else;
    private javax.swing.JCheckBox lCheckKelasMethod;
    private javax.swing.JCheckBox lCheckLogika;
    private javax.swing.JCheckBox lCheckOpAritmatika;
    private javax.swing.JCheckBox lCheckOpIncDec;
    private javax.swing.JCheckBox lCheckOpLogika;
    private javax.swing.JCheckBox lCheckOpPredence;
    private javax.swing.JCheckBox lCheckOpRelasi;
    private javax.swing.JCheckBox lCheckPerulangan;
    private javax.swing.JCheckBox lCheckSwitchCase;
    private javax.swing.JCheckBox lCheckTipeDataObjek;
    private javax.swing.JCheckBox lCheckTipeDataPrimitif;
    private javax.swing.JCheckBox lCheckVariabel;
    private javax.swing.JCheckBox tCheck;
    private javax.swing.JCheckBox tCheckArray;
    private javax.swing.JCheckBox tCheckDasarJava;
    private javax.swing.JCheckBox tCheckFlowchart;
    private javax.swing.JCheckBox tCheckIf_Else;
    private javax.swing.JCheckBox tCheckKelasMethod;
    private javax.swing.JCheckBox tCheckLogika;
    private javax.swing.JCheckBox tCheckOpAritmatika;
    private javax.swing.JCheckBox tCheckOpIncDec;
    private javax.swing.JCheckBox tCheckOpLogika;
    private javax.swing.JCheckBox tCheckOpPredence;
    private javax.swing.JCheckBox tCheckOpRelasi;
    private javax.swing.JCheckBox tCheckPerulangan;
    private javax.swing.JCheckBox tCheckSwitchCase;
    private javax.swing.JCheckBox tCheckTipeDataObjek;
    private javax.swing.JCheckBox tCheckTipeDataPrimitif;
    private javax.swing.JCheckBox tCheckVariabel;
    // End of variables declaration//GEN-END:variables
    
    private LinkedList<DecisionTree> dTreeList;
    
    private void setEnabledToolHasil(boolean b){
        comboTabelTree.setEnabled(b);
        bLihatTabel.setEnabled(b);
        bPrintTree.setEnabled(b);
        bKlasifikasi.setEnabled(b);
        bBentukTree.setEnabled(!b);
    }
    
    private void centangSemua(JCheckBox checkBox){
        boolean selected = checkBox.isSelected();
        if(checkBox.getName().equalsIgnoreCase("pilihSemuaMateri")){
            lCheckArray.setSelected(selected);
            lCheckDasarJava.setSelected(selected);
            lCheckFlowchart.setSelected(selected);
            lCheckIf_Else.setSelected(selected);
            lCheckKelasMethod.setSelected(selected);
            lCheckLogika.setSelected(selected);
            lCheckOpAritmatika.setSelected(selected);
            lCheckOpIncDec.setSelected(selected);
            lCheckOpLogika.setSelected(selected);
            lCheckOpPredence.setSelected(selected);
            lCheckOpRelasi.setSelected(selected);
            lCheckPerulangan.setSelected(selected);
            lCheckSwitchCase.setSelected(selected);
            lCheckTipeDataObjek.setSelected(selected);
            lCheckTipeDataPrimitif.setSelected(selected);
            lCheckVariabel.setSelected(selected);
        }else if(checkBox.getName().equalsIgnoreCase("pilihSemuaTarget")){
            tCheckArray.setSelected(selected);
            tCheckDasarJava.setSelected(selected);
            tCheckFlowchart.setSelected(selected);
            tCheckIf_Else.setSelected(selected);
            tCheckKelasMethod.setSelected(selected);
            tCheckLogika.setSelected(selected);
            tCheckOpAritmatika.setSelected(selected);
            tCheckOpIncDec.setSelected(selected);
            tCheckOpLogika.setSelected(selected);
            tCheckOpPredence.setSelected(selected);
            tCheckOpRelasi.setSelected(selected);
            tCheckPerulangan.setSelected(selected);
            tCheckSwitchCase.setSelected(selected);
            tCheckTipeDataObjek.setSelected(selected);
            tCheckTipeDataPrimitif.setSelected(selected);
            tCheckVariabel.setSelected(selected);
        }
    }
    
    private LinkedList<String> getDaftarMateri(){
        LinkedList<String> daftarMateri = new LinkedList<>();
        if(lCheckArray.isSelected()) daftarMateri.add(NamaMateri.ARRAY);
        if(lCheckDasarJava.isSelected()) daftarMateri.add(NamaMateri.DASAR_JAVA);
        if(lCheckFlowchart.isSelected()) daftarMateri.add(NamaMateri.FLOWCHART);
        if(lCheckIf_Else.isSelected()) daftarMateri.add(NamaMateri.IF_ELSE);
        if(lCheckKelasMethod.isSelected()) daftarMateri.add(NamaMateri.KELAS_METHOD);
        if(lCheckLogika.isSelected()) daftarMateri.add(NamaMateri.LOGIKA);
        if(lCheckOpAritmatika.isSelected()) daftarMateri.add(NamaMateri.OP_ARITMATIKA);
        if(lCheckOpIncDec.isSelected()) daftarMateri.add(NamaMateri.OP_INCREMENT_DECREMENT);
        if(lCheckOpLogika.isSelected()) daftarMateri.add(NamaMateri.OP_LOGIKA);
        if(lCheckOpPredence.isSelected()) daftarMateri.add(NamaMateri.OP_PREDENCE);
        if(lCheckOpRelasi.isSelected()) daftarMateri.add(NamaMateri.OP_RELASI);
        if(lCheckPerulangan.isSelected()) daftarMateri.add(NamaMateri.PERULANGAN);
        if(lCheckSwitchCase.isSelected()) daftarMateri.add(NamaMateri.SWITCH_CASE);
        if(lCheckTipeDataObjek.isSelected()) daftarMateri.add(NamaMateri.TIPE_DATA_OBJEK);
        if(lCheckTipeDataPrimitif.isSelected()) daftarMateri.add(NamaMateri.TIPE_DATA_PRIMITIF);
        if(lCheckVariabel.isSelected()) daftarMateri.add(NamaMateri.VARIABEL);
        return daftarMateri;
    }
    
    private LinkedList<String> getDaftarTarget(){
        LinkedList<String> daftarTarget = new LinkedList<>();
        if(tCheckArray.isSelected()) daftarTarget.add(NamaMateri.ARRAY);
        if(tCheckDasarJava.isSelected()) daftarTarget.add(NamaMateri.DASAR_JAVA);
        if(tCheckFlowchart.isSelected()) daftarTarget.add(NamaMateri.FLOWCHART);
        if(tCheckIf_Else.isSelected()) daftarTarget.add(NamaMateri.IF_ELSE);
        if(tCheckKelasMethod.isSelected()) daftarTarget.add(NamaMateri.KELAS_METHOD);
        if(tCheckLogika.isSelected()) daftarTarget.add(NamaMateri.LOGIKA);
        if(tCheckOpAritmatika.isSelected()) daftarTarget.add(NamaMateri.OP_ARITMATIKA);
        if(tCheckOpIncDec.isSelected()) daftarTarget.add(NamaMateri.OP_INCREMENT_DECREMENT);
        if(tCheckOpLogika.isSelected()) daftarTarget.add(NamaMateri.OP_LOGIKA);
        if(tCheckOpPredence.isSelected()) daftarTarget.add(NamaMateri.OP_PREDENCE);
        if(tCheckOpRelasi.isSelected()) daftarTarget.add(NamaMateri.OP_RELASI);
        if(tCheckPerulangan.isSelected()) daftarTarget.add(NamaMateri.PERULANGAN);
        if(tCheckSwitchCase.isSelected()) daftarTarget.add(NamaMateri.SWITCH_CASE);
        if(tCheckTipeDataObjek.isSelected()) daftarTarget.add(NamaMateri.TIPE_DATA_OBJEK);
        if(tCheckTipeDataPrimitif.isSelected()) daftarTarget.add(NamaMateri.TIPE_DATA_PRIMITIF);
        if(tCheckVariabel.isSelected()) daftarTarget.add(NamaMateri.VARIABEL);
        return daftarTarget;
    }
    
    public void setHasilTabel(LinkedList<DecisionTree> dTreeList){
        this.dTreeList = dTreeList;
        for(DecisionTree dTree : dTreeList){
            comboTabelTree.addItem(dTree.tabelTree.getTarget());
        }
        setEnabledToolHasil(true);
    }
    
    private void bentukTree(){
        if(setRule()){
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            PelatihanTask pelatihan = new PelatihanTask();
            pelatihan.setView(this);
            pelatihan.setData(getDaftarMateri(), getDaftarTarget());
            pelatihan.execute();
        }
    }
    
    private void lihatTabelTree(){
        if(alert()){
            String selected = (String) comboTabelTree.getSelectedItem();
            TabelTree tTree = null;
            for(DecisionTree t : dTreeList){
                if(t.tabelTree.getTarget().equals(selected)){
                    tTree = t.tabelTree;
                    break;
                }
            }
            TabelTreeUI tView = new TabelTreeUI();
            tView.setObjek(tTree);
            tView.setVisible(true);
        }
    }
    
    private void printTree(){
        if(alert()){
            String selected = (String) comboTabelTree.getSelectedItem();
            DecisionTree tree = null;
            for(DecisionTree t : dTreeList){
                if(t.tabelTree.getTarget().equals(selected)){
                    tree = t;
                    break;
                }
            }
            if(tree!=null){
                System.out.println("Target: "+tree.tabelTree.getTarget());
                System.out.println("Atribut lainnya: "+tree.tabelTree.atributLainnya());
                tree.print();
            }
        }
    }
    
    private boolean setRule(){
        if(checkRulePetama.isSelected()){
            RuleNilai.setVariasi(RuleNilai.VARIASI_PERTAMA);
            return true;
        }else if(checkRuleKedua.isSelected()){
            RuleNilai.setVariasi(RuleNilai.VARIASI_KEDUA);
            return true;
        }else if(checkRuleKetiga.isSelected()){
            RuleNilai.setVariasi(RuleNilai.VARIASI_KETIGA);
            return true;
        }else{
            JOptionPane.showMessageDialog(rootPane, "Pilih rule terlebih dahulu!");
            return false;
        }
    }
    
    private boolean alert(){
        String selected = (String) comboTabelTree.getSelectedItem();
        if(!selected.equalsIgnoreCase("--PILIH--")){
            return true;
        }else{
            JOptionPane.showMessageDialog(rootPane, "Pilih Tabel Tree terlebih dahulu!");
            return false;
        }
    }
    
    private void reset(){
        this.dTreeList = null;
        comboTabelTree.removeAllItems();
        comboTabelTree.addItem("--PILIH--");
        setEnabledToolHasil(false);
    }
}
