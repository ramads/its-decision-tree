-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Nov 02, 2014 at 11:15 AM
-- Server version: 5.6.17
-- PHP Version: 5.5.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `pengujian`
--

-- --------------------------------------------------------

--
-- Table structure for table `course_material`
--

CREATE TABLE IF NOT EXISTS `course_material` (
  `idcoursemat` varchar(25) NOT NULL,
  `post_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `iduser` varchar(15) NOT NULL,
  `idlesson` varchar(5) NOT NULL,
  `post_result` tinyint(1) NOT NULL,
  PRIMARY KEY (`idcoursemat`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `course_material`
--

INSERT INTO `course_material` (`idcoursemat`, `post_date`, `iduser`, `idlesson`, `post_result`) VALUES
('m075', '2013-10-30 07:45:44', '', 'm07', 1),
('m075ramads', '2013-10-30 07:51:20', 'ramads', 'm07', 1),
('m081asd', '2013-11-03 13:40:02', 'asd', 'm08', 0),
('m082asd', '2013-11-03 13:40:19', 'asd', 'm08', 0),
('m083asd', '2013-11-03 13:49:23', 'asd', 'm08', 0),
('m084asd', '2013-11-03 13:55:14', 'asd', 'm08', 0),
('m085asd', '2013-11-03 13:57:37', 'asd', 'm08', 0),
('m071henca', '2013-11-04 03:09:27', 'henca', 'm07', 0),
('m150henca', '2013-11-04 03:09:52', 'henca', 'm15', 0),
('m125angel', '2013-11-04 04:27:33', 'angel', 'm12', 1),
('m054angel', '2013-11-04 04:26:54', 'angel', 'm05', 1),
('m155angel', '2013-11-04 04:26:17', 'angel', 'm15', 1),
('m075angel', '2013-11-04 04:25:35', 'angel', 'm07', 1),
('m094angel', '2013-11-04 04:25:06', 'angel', 'm09', 1),
('m084angel', '2013-11-04 04:24:07', 'angel', 'm08', 1),
('m015angel', '2013-11-04 04:28:03', 'angel', 'm01', 1),
('m084snsd', '2013-11-04 08:04:17', 'snsd', 'm08', 1),
('m084ramaditia', '2013-11-04 08:04:18', 'ramaditia', 'm08', 1),
('m091ramaditia', '2013-11-04 08:06:02', 'ramaditia', 'm09', 0),
('m092ramaditia', '2013-11-04 08:07:08', 'ramaditia', 'm09', 0),
('m093ramaditia', '2013-11-04 08:07:49', 'ramaditia', 'm09', 1),
('m071ramaditia', '2013-11-04 08:08:19', 'ramaditia', 'm07', 0),
('m075snsd', '2013-11-04 08:09:01', 'snsd', 'm07', 1),
('m155ramaditia', '2013-11-04 08:10:35', 'ramaditia', 'm15', 1),
('m054ramaditia', '2013-11-04 08:11:30', 'ramaditia', 'm05', 1),
('m091snsd', '2013-11-04 08:11:59', 'snsd', 'm09', 0),
('m104ramaditia', '2013-11-04 08:12:34', 'ramaditia', 'm10', 1),
('m094snsd', '2013-11-04 08:31:52', 'snsd', 'm09', 1),
('m151snsd', '2013-11-04 08:32:23', 'snsd', 'm15', 0),
('m155snsd', '2013-11-04 08:49:05', 'snsd', 'm15', 1),
('m053snsd', '2013-11-04 08:49:48', 'snsd', 'm05', 1),
('m103snsd', '2013-11-04 08:50:48', 'snsd', 'm10', 1),
('m081yellow', '2013-11-04 08:58:20', 'yellow', 'm08', 0),
('m091henca', '2013-11-09 11:38:49', 'henca', 'm09', 0),
('m030henca', '2013-11-13 04:57:30', 'henca', 'm03', 0),
('m031henca', '2013-11-16 05:21:58', 'henca', 'm03', 0),
('m035henca', '2013-11-16 05:23:11', 'henca', 'm03', 1),
('m085henca', '2013-11-16 05:24:14', 'henca', 'm08', 1),
('m152henca', '2013-11-16 05:24:38', 'henca', 'm15', 0),
('m155henca', '2013-11-16 05:25:47', 'henca', 'm15', 1),
('m103F1B008083', '2013-11-18 07:25:13', 'F1B008083', 'm10', 1),
('m072F1B008083', '2013-11-18 07:24:29', 'F1B008083', 'm07', 0),
('m082F1B008083', '2013-11-18 07:23:34', 'F1B008083', 'm08', 0),
('m091F1B009037', '2013-11-17 12:27:25', 'F1B009037', 'm09', 0),
('m081F1B009037', '2013-11-17 12:24:17', 'F1B009037', 'm08', 0),
('m073F1B008083', '2013-11-18 07:26:01', 'F1B008083', 'm07', 1),
('m012F1B008083', '2013-11-18 07:26:25', 'F1B008083', 'm01', 0),
('m151F1B006028', '2013-11-18 07:33:57', 'F1B006028', 'm15', 0),
('m033F1B006028', '2013-11-18 07:34:44', 'F1B006028', 'm03', 1),
('m082f1b009069', '2013-11-18 07:36:34', 'f1b009069', 'm08', 0),
('m094f1b008085', '2013-11-18 07:38:02', 'f1b008085', 'm09', 1),
('m075F1D012052', '2013-11-18 07:38:41', 'F1D012052', 'm07', 1),
('m152F1B006028', '2013-11-18 07:41:40', 'F1B006028', 'm15', 0),
('m084f1b009069', '2013-11-18 07:41:54', 'f1b009069', 'm08', 1),
('m153F1B006028', '2013-11-18 07:42:41', 'F1B006028', 'm15', 0),
('m153f1b008085', '2013-11-18 07:43:30', 'f1b008085', 'm15', 1),
('m154F1B006028', '2013-11-18 07:43:54', 'F1B006028', 'm15', 0),
('m155F1B006028', '2013-11-18 07:45:25', 'F1B006028', 'm15', 0),
('m103f1b009069', '2013-11-18 07:47:44', 'f1b009069', 'm10', 1),
('m062f1b008085', '2013-11-18 07:48:31', 'f1b008085', 'm06', 0),
('m091f1b009069', '2013-11-18 07:50:49', 'f1b009069', 'm09', 1),
('m156F1B006028', '2013-11-18 07:51:55', 'F1B006028', 'm15', 1),
('m071F1B006028', '2013-11-18 07:52:47', 'F1B006028', 'm07', 1),
('m031f1b008085', '2013-11-18 07:53:18', 'f1b008085', 'm03', 0),
('m032f1b008085', '2013-11-18 07:55:03', 'f1b008085', 'm03', 0),
('m033f1b008085', '2013-11-18 07:56:30', 'f1b008085', 'm03', 0),
('m034f1b008085', '2013-11-18 07:57:11', 'f1b008085', 'm03', 0),
('m035f1b008085', '2013-11-18 07:58:20', 'f1b008085', 'm03', 1),
('m091F1B008083', '2013-11-18 08:00:52', 'F1B008083', 'm09', 1),
('m081f1b008085', '2013-11-18 08:01:43', 'f1b008085', 'm08', 0),
('m082f1b008085', '2013-11-18 08:05:15', 'f1b008085', 'm08', 0),
('m083f1b008085', '2013-11-18 08:08:05', 'f1b008085', 'm08', 0),
('m151F1B008083', '2013-11-18 08:08:18', 'F1B008083', 'm15', 0),
('m084f1b008085', '2013-11-18 08:10:37', 'f1b008085', 'm08', 0),
('m085f1b008085', '2013-11-18 08:11:04', 'f1b008085', 'm08', 0),
('m086f1b008085', '2013-11-18 08:12:50', 'f1b008085', 'm08', 1),
('m071sariIsmi', '2013-11-18 08:14:08', 'sariIsmi', 'm07', 0),
('m051f1b008085', '2013-11-18 08:17:37', 'f1b008085', 'm05', 0),
('m151sariIsmi', '2013-11-18 08:19:39', 'sariIsmi', 'm15', 1),
('m081F1B009027', '2013-11-18 08:55:23', 'F1B009027', 'm08', 0),
('m091F1B009027', '2013-11-18 08:56:00', 'F1B009027', 'm09', 0),
('m092F1B009027', '2013-11-18 08:56:24', 'F1B009027', 'm09', 0),
('m091F1D012066', '2013-11-18 09:03:50', 'F1D012066', 'm09', 0),
('m092F1D012066', '2013-11-18 09:07:41', 'F1D012066', 'm09', 1),
('m081f1b009021', '2013-11-18 09:14:55', 'f1b009021', 'm08', 1),
('m082f1b009021', '2013-11-18 09:18:15', 'f1b009021', 'm08', 1),
('m083f1b009021', '2013-11-18 09:18:59', 'f1b009021', 'm08', 1),
('m084f1b009021', '2013-11-18 09:19:19', 'f1b009021', 'm08', 1),
('m093F1B009027', '2013-11-18 09:38:49', 'F1B009027', 'm09', 1),
('m111f1b009021', '2013-11-18 09:37:55', 'f1b009021', 'm11', 1),
('m081daniel', '2013-12-05 05:45:45', 'daniel', 'm08', 0),
('m081dbudy', '2013-11-18 09:30:58', 'dbudy', 'm08', 0),
('m011f1b009021', '2013-11-18 09:31:12', 'f1b009021', 'm01', 1),
('m091f1b009021', '2013-11-18 09:33:41', 'f1b009021', 'm09', 1),
('m141f1b009021', '2013-11-18 09:41:22', 'f1b009021', 'm14', 0),
('m101f1b009021', '2013-11-18 09:35:31', 'f1b009021', 'm10', 1),
('m071daniel', '2013-12-05 05:45:52', 'daniel', 'm07', 0),
('m101daniel', '2013-12-05 05:45:58', 'daniel', 'm10', 0),
('m151daniel', '2013-12-05 05:46:06', 'daniel', 'm15', 0),
('m072henca', '2013-12-07 04:42:14', 'henca', 'm07', 0),
('m031daniel', '2013-12-07 04:50:32', 'daniel', 'm03', 1),
('m152daniel', '2013-12-07 04:57:21', 'daniel', 'm15', 1),
('m081F1B008011', '2013-12-07 04:57:30', 'F1B008011', 'm08', 0),
('m081F1D013073', '2013-12-07 08:03:59', 'F1D013073', 'm08', 1),
('m091F1D013073', '2013-12-07 08:11:56', 'F1D013073', 'm09', 1),
('m081F1D013097', '2013-12-07 08:14:12', 'F1D013097', 'm08', 0),
('m151F1D013073', '2013-12-07 08:19:27', 'F1D013073', 'm15', 1),
('m101F1D013047', '2013-12-10 06:54:34', 'F1D013047', 'm10', 0),
('m101F1D013003', '2013-12-10 06:55:30', 'F1D013003', 'm10', 0),
('m031F1D013003', '2013-12-10 06:57:40', 'F1D013003', 'm03', 0),
('m101F1D013049', '2013-12-10 07:00:03', 'F1D013049', 'm10', 0),
('m081f1d013061', '2013-12-10 07:01:18', 'f1d013061', 'm08', 0),
('m151F1D013047', '2013-12-10 07:02:27', 'F1D013047', 'm15', 1),
('m031F1D013015', '2013-12-10 07:02:46', 'F1D013015', 'm03', 0),
('m081F1D013057', '2013-12-10 07:03:53', 'F1D013057', 'm08', 0),
('m081f1d013091', '2013-12-10 00:05:13', 'f1d013091', 'm08', 0),
('m081F1D013059', '2013-12-10 07:05:28', 'F1D013059', 'm08', 0),
('m071F1D013057', '2013-12-10 07:06:28', 'F1D013057', 'm07', 1),
('m071F1D013049', '2013-12-10 07:06:29', 'F1D013049', 'm07', 1),
('m051F1D013047', '2013-12-10 07:06:29', 'F1D013047', 'm05', 0),
('m031f1d013061', '2013-12-10 07:06:39', 'f1d013061', 'm03', 1),
('m151F1D013059', '2013-12-10 07:07:04', 'F1D013059', 'm15', 0),
('m031F1D013049', '2013-12-10 07:08:57', 'F1D013049', 'm03', 1),
('m031F1D013059', '2013-12-10 07:08:59', 'F1D013059', 'm03', 0),
('m151F1D013057', '2013-12-10 07:09:48', 'F1D013057', 'm15', 0),
('m032F1D013059', '2013-12-10 07:10:48', 'F1D013059', 'm03', 1),
('m081f1d013099', '2013-12-10 07:11:06', 'f1d013099', 'm08', 0),
('m081F1D013049', '2013-12-10 07:11:24', 'F1D013049', 'm08', 0),
('m082F1D013049', '2013-12-10 07:11:35', 'F1D013049', 'm08', 0),
('m083F1D013049', '2013-12-10 07:11:42', 'F1D013049', 'm08', 1),
('m101F1D013041', '2013-12-10 00:04:09', 'F1D013041', 'm10', 1),
('m152F1D013059', '2013-12-10 07:12:10', 'F1D013059', 'm15', 0),
('m151f1d013099', '2013-12-10 07:12:50', 'f1d013099', 'm15', 0),
('m031F1D013075', '2013-12-10 07:12:53', 'F1D013075', 'm03', 0),
('m031F1D013057', '2013-12-10 07:13:24', 'F1D013057', 'm03', 0),
('m091f1d013061', '2013-12-10 07:13:29', 'f1d013061', 'm09', 1),
('m081F1D013067', '2013-12-10 07:13:40', 'F1D013067', 'm08', 0),
('m081F1D013087', '2013-12-10 07:13:44', 'F1D013087', 'm08', 0),
('m153F1D013059', '2013-12-10 07:14:22', 'F1D013059', 'm15', 0),
('m091F1D013049', '2013-12-10 07:15:16', 'F1D013049', 'm09', 1),
('m091F1D013041', '2013-12-09 23:56:36', 'F1D013041', 'm09', 0),
('m154F1D013059', '2013-12-10 07:16:27', 'F1D013059', 'm15', 0),
('m071F1D013041', '2013-12-09 23:52:47', 'F1D013041', 'm07', 1),
('m155F1D013059', '2013-12-10 07:17:36', 'F1D013059', 'm15', 0),
('m091F1D013087', '2013-12-10 07:18:04', 'F1D013087', 'm09', 0),
('m151F1D013049', '2013-12-10 07:18:10', 'F1D013049', 'm15', 1),
('m082f1d013061', '2013-12-10 07:18:48', 'f1d013061', 'm08', 0),
('m101F1D013067', '2013-12-10 07:19:16', 'F1D013067', 'm10', 1),
('m083f1d013061', '2013-12-10 07:19:22', 'f1d013061', 'm08', 0),
('m032F1D013057', '2013-12-10 07:19:50', 'F1D013057', 'm03', 0),
('m156F1D013059', '2013-12-10 07:20:11', 'F1D013059', 'm15', 1),
('m051F1D013049', '2013-12-10 07:20:28', 'F1D013049', 'm05', 1),
('m084f1d013061', '2013-12-10 07:20:30', 'f1d013061', 'm08', 0),
('m092F1D013087', '2013-12-10 07:20:38', 'F1D013087', 'm09', 0),
('m031f1d013099', '2013-12-10 07:21:39', 'f1d013099', 'm03', 0),
('m032f1d013099', '2013-12-10 07:22:07', 'f1d013099', 'm03', 1),
('m071F1D013059', '2013-12-10 07:22:08', 'F1D013059', 'm07', 0),
('m101jeki378', '2013-12-10 07:22:48', 'jeki378', 'm10', 0),
('m154f1d013099', '2013-12-10 07:22:49', 'f1d013099', 'm15', 0),
('m151f1d013043', '2013-12-10 07:23:12', 'f1d013043', 'm15', 1),
('m072F1D013059', '2013-12-10 07:23:20', 'F1D013059', 'm07', 1),
('m032F1D013075', '2013-12-10 07:23:23', 'F1D013075', 'm03', 1),
('m103F1D013049', '2013-12-10 07:25:00', 'F1D013049', 'm10', 1),
('m091F1D013059', '2013-12-10 07:25:19', 'F1D013059', 'm09', 0),
('m071F1D013075', '2013-12-10 07:25:43', 'F1D013075', 'm07', 1),
('m031jeki378', '2013-12-10 07:25:58', 'jeki378', 'm03', 1),
('m092F1D013059', '2013-12-10 07:26:19', 'F1D013059', 'm09', 0),
('m085f1d013061', '2013-12-10 07:26:30', 'f1d013061', 'm08', 1),
('m033F1D013057', '2013-12-10 07:26:52', 'F1D013057', 'm03', 1),
('m155f1d013099', '2013-12-10 07:27:32', 'f1d013099', 'm15', 0),
('m111F1D013049', '2013-12-10 07:27:50', 'F1D013049', 'm11', 1),
('m093F1D013087', '2013-12-10 07:28:01', 'F1D013087', 'm09', 1),
('m071jeki378', '2013-12-10 07:28:18', 'jeki378', 'm07', 1),
('m081f1d013069', '2013-12-10 07:28:54', 'f1d013069', 'm08', 0),
('m031F1D013067', '2013-12-10 07:29:26', 'F1D013067', 'm03', 1),
('m093F1D013059', '2013-12-10 07:29:29', 'F1D013059', 'm09', 0),
('m156f1d013099', '2013-12-10 07:30:20', 'f1d013099', 'm15', 0),
('m094F1D013059', '2013-12-10 07:30:58', 'F1D013059', 'm09', 0),
('m082F1D013087', '2013-12-10 07:31:34', 'F1D013087', 'm08', 0),
('m081jeki378', '2013-12-10 07:31:38', 'jeki378', 'm08', 1),
('m121F1D013049', '2013-12-10 07:32:00', 'F1D013049', 'm12', 1),
('m151f1d013061', '2013-12-10 07:32:06', 'f1d013061', 'm15', 0),
('m095F1D013059', '2013-12-10 07:33:09', 'F1D013059', 'm09', 0),
('m152f1d013061', '2013-12-10 07:33:48', 'f1d013061', 'm15', 1),
('m157f1d013099', '2013-12-10 07:35:27', 'f1d013099', 'm15', 1),
('m151F1D013067', '2013-12-10 07:35:31', 'F1D013067', 'm15', 1),
('m051f1d013043', '2013-12-10 07:36:24', 'f1d013043', 'm05', 0),
('m091jeki378', '2013-12-10 07:36:56', 'jeki378', 'm09', 1),
('m081F1D013075', '2013-12-10 07:37:42', 'F1D013075', 'm08', 0),
('m051f1d013061', '2013-12-10 07:38:37', 'f1d013061', 'm05', 0),
('m083F1D013087', '2013-12-10 07:39:12', 'F1D013087', 'm08', 0),
('m052f1d013061', '2013-12-10 07:40:04', 'f1d013061', 'm05', 1),
('m084F1D013087', '2013-12-10 07:40:18', 'F1D013087', 'm08', 0),
('m102jeki378', '2013-12-10 07:41:04', 'jeki378', 'm10', 0),
('m091F1D013067', '2013-12-10 07:41:28', 'F1D013067', 'm09', 1),
('m121f1d013061', '2013-12-10 07:41:40', 'f1d013061', 'm12', 0),
('m122f1d013061', '2013-12-10 07:42:07', 'f1d013061', 'm12', 1),
('m082F1D013075', '2013-12-10 07:42:26', 'F1D013075', 'm08', 0),
('m103jeki378', '2013-12-10 07:42:41', 'jeki378', 'm10', 0),
('m083F1D013075', '2013-12-10 07:43:48', 'F1D013075', 'm08', 0),
('m085F1D013087', '2013-12-10 07:43:55', 'F1D013087', 'm08', 0),
('m104jeki378', '2013-12-10 07:44:04', 'jeki378', 'm10', 1),
('m152F1D013057', '2013-12-10 07:44:24', 'F1D013057', 'm15', 0),
('m082F1D013067', '2013-12-10 07:46:05', 'F1D013067', 'm08', 0),
('m153F1D013057', '2013-12-10 07:47:01', 'F1D013057', 'm15', 1),
('m083F1D013067', '2013-12-10 07:47:14', 'F1D013067', 'm08', 0),
('m086F1D013087', '2013-12-10 07:47:59', 'F1D013087', 'm08', 0),
('m084F1D013075', '2013-12-10 07:48:51', 'F1D013075', 'm08', 0),
('m011F1D013057', '2013-12-10 07:49:59', 'F1D013057', 'm01', 0),
('m087F1D013087', '2013-12-10 07:50:02', 'F1D013087', 'm08', 0),
('m084F1D013067', '2013-12-10 07:50:31', 'F1D013067', 'm08', 0),
('m088F1D013087', '2013-12-10 07:51:15', 'F1D013087', 'm08', 0),
('m031F1D013041', '2013-12-10 00:06:32', 'F1D013041', 'm03', 0),
('m032F1D013041', '2013-12-10 00:08:02', 'F1D013041', 'm03', 0),
('m031f1d013091', '2013-12-10 00:09:00', 'f1d013091', 'm03', 0),
('m033F1D013041', '2013-12-10 00:10:18', 'F1D013041', 'm03', 1),
('m032f1d013091', '2013-12-10 00:12:36', 'f1d013091', 'm03', 0),
('m151F1D013041', '2013-12-10 00:12:37', 'F1D013041', 'm15', 1),
('m033f1d013091', '2013-12-10 00:15:20', 'f1d013091', 'm03', 1),
('m011F1D013041', '2013-12-10 00:15:59', 'F1D013041', 'm01', 0),
('m012F1D013041', '2013-12-10 00:18:25', 'F1D013041', 'm01', 0),
('m071f1d013091', '2013-12-10 00:18:26', 'f1d013091', 'm07', 1),
('m013F1D013041', '2013-12-10 00:19:58', 'F1D013041', 'm01', 1),
('m091f1d013091', '2013-12-10 00:21:39', 'f1d013091', 'm09', 0),
('m092f1d013091', '2013-12-10 00:23:28', 'f1d013091', 'm09', 0),
('m081F1D013041', '2013-12-10 00:23:38', 'F1D013041', 'm08', 0),
('m071f1d013045', '2013-12-10 00:23:52', 'f1d013045', 'm07', 0),
('m093f1d013091', '2013-12-10 00:24:29', 'f1d013091', 'm09', 0),
('m091f1d013085', '2013-12-10 00:24:33', 'f1d013085', 'm09', 0),
('m082F1D013041', '2013-12-10 00:24:53', 'F1D013041', 'm08', 0),
('m094f1d013091', '2013-12-10 00:26:19', 'f1d013091', 'm09', 0),
('m083F1D013041', '2013-12-10 00:27:41', 'F1D013041', 'm08', 1),
('m095f1d013091', '2013-12-10 00:28:31', 'f1d013091', 'm09', 0),
('m096f1d013091', '2013-12-10 00:29:24', 'f1d013091', 'm09', 0),
('m092F1D013041', '2013-12-10 00:29:55', 'F1D013041', 'm09', 1),
('m031f1d013085', '2013-12-10 00:30:55', 'f1d013085', 'm03', 0),
('m097f1d013091', '2013-12-10 00:31:51', 'f1d013091', 'm09', 0),
('m051F1D013041', '2013-12-10 00:32:19', 'F1D013041', 'm05', 0),
('m098f1d013091', '2013-12-10 00:34:07', 'f1d013091', 'm09', 0),
('m111F1D013041', '2013-12-10 00:35:15', 'F1D013041', 'm11', 1),
('m099f1d013091', '2013-12-10 00:36:10', 'f1d013091', 'm09', 1),
('m052F1D013041', '2013-12-10 00:36:28', 'F1D013041', 'm05', 0),
('m053F1D013041', '2013-12-10 00:38:42', 'F1D013041', 'm05', 0),
('m054F1D013041', '2013-12-10 00:39:41', 'F1D013041', 'm05', 1),
('m101f1d013091', '2013-12-10 00:41:16', 'f1d013091', 'm10', 0),
('m121F1D013041', '2013-12-10 00:41:50', 'F1D013041', 'm12', 1),
('m141F1D013041', '2013-12-10 00:44:00', 'F1D013041', 'm14', 0),
('m102f1d013091', '2013-12-10 00:44:20', 'f1d013091', 'm10', 0),
('m142F1D013041', '2013-12-10 00:44:56', 'F1D013041', 'm14', 0),
('m103f1d013091', '2013-12-10 00:45:27', 'f1d013091', 'm10', 0),
('m143F1D013041', '2013-12-10 00:45:52', 'F1D013041', 'm14', 1),
('m104f1d013091', '2013-12-10 00:46:47', 'f1d013091', 'm10', 0),
('m081F1D013089', '2013-12-09 23:58:52', 'F1D013089', 'm08', 0),
('m082F1D013089', '2013-12-09 23:59:03', 'F1D013089', 'm08', 0),
('m081f1d013035', '2013-12-10 00:00:08', 'f1d013035', 'm08', 0),
('m031f1d013035', '2013-12-10 00:02:28', 'f1d013035', 'm03', 0),
('m032f1d013035', '2013-12-10 00:03:35', 'f1d013035', 'm03', 0),
('m033f1d013035', '2013-12-10 00:04:18', 'f1d013035', 'm03', 0),
('m101F1D013029', '2013-12-10 00:04:43', 'F1D013029', 'm10', 0),
('m081F1D013023', '2013-12-10 00:06:52', 'F1D013023', 'm08', 1),
('m034f1d013035', '2013-12-10 00:08:32', 'f1d013035', 'm03', 1),
('m031F1D013029', '2013-12-10 00:13:21', 'F1D013029', 'm03', 1),
('m071F1D013029', '2013-12-10 00:15:39', 'F1D013029', 'm07', 1),
('m081F1D0130300', '2013-12-10 00:17:44', 'F1D0130300', 'm08', 0),
('m101F1D0130300', '2013-12-10 00:18:32', 'F1D0130300', 'm10', 0),
('m031F1D0130300', '2013-12-10 00:19:22', 'F1D0130300', 'm03', 0),
('m091F1D013017', '2013-12-10 00:20:04', 'F1D013017', 'm09', 0),
('m032F1D0130300', '2013-12-10 00:20:17', 'F1D0130300', 'm03', 0),
('m071f1d013035', '2013-12-10 00:21:19', 'f1d013035', 'm07', 0),
('m081F1D013029', '2013-12-10 00:23:27', 'F1D013029', 'm08', 0),
('m082F1D013029', '2013-12-10 00:25:24', 'F1D013029', 'm08', 0),
('m101f1d013007', '2013-12-10 00:28:49', 'f1d013007', 'm10', 0),
('m071F1D013012', '2013-12-10 00:32:20', 'F1D013012', 'm07', 1),
('m031F1D013012', '2013-12-10 00:37:41', 'F1D013012', 'm03', 1),
('m011F1D013012', '2013-12-10 00:40:19', 'F1D013012', 'm01', 0),
('m012F1D013012', '2013-12-10 00:44:09', 'F1D013012', 'm01', 0);

-- --------------------------------------------------------

--
-- Table structure for table `dailytest`
--

CREATE TABLE IF NOT EXISTS `dailytest` (
  `id` varchar(15) NOT NULL,
  `nama` varchar(50) NOT NULL,
  `baseJava` int(11) NOT NULL,
  `classNmethod` int(11) NOT NULL,
  `variable` int(11) NOT NULL,
  `pdt` int(11) NOT NULL,
  `odt` int(11) NOT NULL,
  `array` int(11) NOT NULL,
  `logic` int(11) NOT NULL,
  `opArithmetic` int(11) NOT NULL,
  `opIncNdec` int(11) NOT NULL,
  `opRelation` int(11) NOT NULL,
  `opLogic` int(11) NOT NULL,
  `opPredence` int(11) NOT NULL,
  `looping` int(11) NOT NULL,
  `ifElse` int(11) NOT NULL,
  `switchCase` int(11) NOT NULL,
  `flowchart` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `odt` (`odt`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `dailytest`
--

INSERT INTO `dailytest` (`id`, `nama`, `baseJava`, `classNmethod`, `variable`, `pdt`, `odt`, `array`, `logic`, `opArithmetic`, `opIncNdec`, `opRelation`, `opLogic`, `opPredence`, `looping`, `ifElse`, `switchCase`, `flowchart`) VALUES
('F1D012003', 'Aranta ditoaji H ', 10, 4, 4, 8, 1, 3, 2, 2, 5, 2, 5, 7, 4, 5, 2, 1),
('F1D012005', 'Anggi Fitriani', 10, 5, 4, 4, 5, 3, 1, 2, 2, 1, 2, 4, 1, 1, 3, 1),
('F1D012007', 'Artikayumi Mardjun', 8, 3, 4, 6, 4, 4, 2, 1, 1, 1, 2, 3, 0, 4, 2, 2),
('F1D012010', 'Baiq Nia Rahmawati', 8, 4, 4, 9, 5, 3, 3, 3, 1, 2, 1, 6, 2, 5, 4, 1),
('F1D012011', 'BQ. Evavinola', 11, 4, 5, 6, 3, 6, 0, 1, 1, 0, 5, 3, 1, 3, 3, 1),
('F1D012012', 'Cahyani Intan Pratiwi', 5, 6, 7, 9, 6, 3, 3, 2, 2, 1, 4, 6, 1, 5, 5, 1),
('F1D012013', 'Catur Wulandari', 11, 6, 7, 11, 6, 7, 3, 3, 3, 1, 7, 7, 2, 5, 5, 1),
('F1D012014', 'Desenia Mulyani H.', 9, 6, 3, 7, 3, 6, 3, 3, 2, 1, 2, 5, 1, 5, 4, 1),
('F1D012015', 'Dewa Ayu Sriwidari', 7, 3, 5, 5, 4, 6, 0, 0, 0, 0, 2, 4, 1, 3, 3, 0),
('F1D012016', 'Didi Hadi Saputra', 7, 3, 4, 9, 5, 5, 1, 5, 0, 2, 1, 5, 0, 3, 4, 1),
('F1D012017', 'Dony Rifaldi', 9, 6, 5, 9, 4, 4, 1, 2, 1, 0, 0, 4, 0, 3, 1, 0),
('F1D012019', 'Dyah Ayu Susanti', 9, 7, 4, 7, 4, 3, 1, 2, 0, 0, 3, 9, 1, 2, 1, 2),
('F1D012020', 'Eet Widarini', 11, 4, 6, 11, 5, 5, 3, 5, 3, 3, 5, 5, 3, 6, 3, 1),
('F1D012021', 'Evi Ana Kusuma', 11, 5, 5, 11, 3, 6, 3, 5, 2, 4, 4, 6, 3, 6, 4, 3),
('F1D012022', 'Fadilah', 8, 3, 2, 6, 4, 6, 2, 1, 2, 2, 0, 5, 2, 2, 2, 1),
('F1D012023', 'Firmanda Rizky Arinanta ', 11, 6, 5, 10, 5, 6, 3, 4, 1, 2, 7, 6, 0, 3, 3, 1),
('F1D012024', 'Gandi Rifansyah', 11, 6, 7, 8, 4, 7, 3, 3, 2, 2, 5, 2, 2, 4, 3, 2),
('F1D012025', 'Gigih Mathori Basil', 7, 3, 3, 6, 3, 4, 2, 2, 4, 3, 1, 5, 3, 5, 2, 3),
('F1D012027', 'Hendra Arie Budianto', 11, 5, 5, 7, 3, 5, 1, 1, 3, 3, 2, 5, 3, 4, 3, 0),
('F1D012028', 'Herman Muliadi', 13, 4, 5, 8, 3, 2, 2, 2, 4, 3, 4, 5, 5, 5, 1, 1),
('F1D012029', 'I Dewa Putu Dhira P', 8, 6, 5, 7, 2, 5, 1, 2, 1, 1, 2, 3, 2, 3, 2, 2),
('F1D012030', 'I Gede Adi S', 6, 5, 1, 5, 2, 4, 2, 1, 3, 2, 3, 6, 5, 4, 3, 0),
('F1D012034', 'Ilmiatul Hafazah', 9, 3, 4, 7, 3, 3, 1, 0, 4, 3, 4, 4, 2, 6, 2, 1),
('F1D012035', 'Imam Tantowi', 9, 3, 6, 8, 5, 5, 3, 2, 2, 1, 4, 4, 1, 4, 4, 3),
('F1D012036', 'Irwan Hadi', 9, 5, 5, 10, 6, 5, 0, 5, 3, 3, 4, 3, 4, 1, 3, 2),
('F1D012037', 'Julianto Eko P.', 11, 7, 7, 11, 5, 8, 1, 4, 3, 1, 3, 4, 3, 4, 2, 3),
('F1D012038', 'Karinda Irianti', 9, 5, 2, 4, 2, 5, 1, 2, 2, 1, 2, 5, 4, 4, 4, 2),
('F1D012039', 'Kautsar Vidi aprilians', 9, 2, 3, 3, 4, 3, 3, 1, 0, 0, 4, 4, 0, 1, 2, 1),
('F1D012040', 'Kurnia Ramadhan', 9, 4, 4, 6, 1, 6, 0, 1, 1, 1, 3, 6, 2, 3, 3, 0),
('F1D012041', 'L. M. Agung Hidayatullah', 10, 6, 7, 13, 5, 5, 2, 4, 3, 2, 7, 7, 3, 6, 4, 2),
('F1D012043', 'L.Rayzam Purwadi', 7, 5, 4, 9, 4, 4, 2, 2, 4, 2, 3, 6, 3, 4, 2, 2),
('F1D012045', 'L.Yusran Said', 9, 5, 5, 9, 5, 6, 2, 3, 2, 1, 4, 7, 1, 6, 5, 1),
('F1D012046', 'L. Zulfikar M.', 7, 3, 4, 4, 5, 5, 2, 0, 1, 1, 3, 4, 1, 4, 4, 2),
('F1D012047', 'Listya Ayuningsih SP', 11, 4, 7, 6, 6, 5, 1, 0, 0, 2, 1, 3, 5, 3, 1, 3),
('F1D012049', 'M. Romi Saefudin', 9, 4, 2, 4, 4, 5, 1, 1, 1, 1, 3, 3, 2, 4, 2, 2),
('F1D012052', 'Marlintika', 8, 6, 5, 8, 6, 3, 2, 1, 0, 3, 2, 5, 1, 5, 2, 2),
('F1D012053', 'Mohammad Zaenuddin H', 8, 6, 6, 10, 5, 7, 3, 2, 3, 2, 6, 6, 5, 6, 5, 0),
('F1D012056', 'Arif Budiman', 12, 6, 5, 7, 7, 6, 1, 3, 2, 2, 6, 6, 2, 5, 3, 1),
('F1D012057', 'Muhammad Haris', 6, 3, 3, 4, 3, 3, 1, 2, 0, 0, 0, 3, 0, 0, 2, 0),
('F1D012058', 'M. Heri Safwan', 4, 5, 4, 6, 2, 2, 0, 1, 1, 1, 2, 5, 1, 5, 2, 2),
('F1D012059', 'M.Irwan Rosadi', 11, 3, 5, 6, 6, 5, 2, 3, 3, 2, 5, 7, 4, 4, 3, 1),
('F1D012061', 'Muzayyad Hasani', 8, 4, 5, 7, 5, 7, 2, 1, 3, 2, 3, 5, 2, 5, 4, 1),
('F1D012062', 'Nella Rosa', 10, 5, 7, 7, 4, 5, 3, 2, 2, 1, 2, 6, 2, 3, 3, 1),
('F1D012063', 'Nur Sabrina Meutia', 12, 4, 7, 11, 4, 2, 3, 4, 4, 2, 5, 5, 3, 6, 3, 1),
('F1D012064', 'Nurhayati(B)', 9, 2, 4, 4, 3, 4, 3, 1, 1, 0, 2, 5, 3, 3, 4, 2),
('F1D012065', 'Nurhayati (A)', 9, 7, 0, 4, 5, 0, 0, 0, 2, 3, 3, 5, 2, 5, 4, 2),
('F1D012067', 'Nurul Hidayah', 6, 3, 6, 7, 5, 1, 3, 0, 0, 0, 2, 5, 0, 5, 1, 1),
('F1D012068', 'Nyoman Yoga Kristiawan', 11, 0, 6, 5, 1, 2, 0, 0, 3, 3, 2, 0, 4, 2, 1, 0),
('F1D012069', 'Putrianingsih', 8, 7, 2, 7, 3, 2, 1, 3, 2, 3, 2, 5, 1, 7, 2, 1),
('F1D012071', 'Rahma Dayani', 6, 4, 6, 10, 5, 4, 1, 3, 1, 2, 1, 1, 1, 0, 0, 1),
('F1D012073', 'Rifky Hariesugama', 8, 2, 4, 6, 0, 4, 1, 3, 2, 1, 0, 5, 3, 6, 1, 1),
('F1D012074', 'Riris Parahita', 10, 3, 6, 6, 5, 5, 2, 3, 3, 1, 2, 7, 3, 5, 4, 3),
('F1D012076', 'Rojiman Hadi Saputra', 11, 8, 6, 10, 4, 4, 2, 3, 2, 2, 2, 5, 2, 4, 3, 2),
('F1D012077', 'Suharwan', 7, 6, 4, 6, 5, 4, 0, 2, 2, 1, 1, 4, 2, 3, 3, 2),
('F1D012078', 'Sukandar Yudiastira', 11, 6, 5, 9, 3, 5, 2, 1, 4, 3, 3, 4, 4, 4, 4, 3),
('F1D012079', 'Sumiati', 8, 7, 4, 9, 5, 4, 0, 3, 2, 2, 1, 6, 1, 2, 2, 2),
('F1D012080', 'Suri Darmiantini', 11, 4, 5, 8, 3, 3, 3, 5, 1, 1, 2, 7, 1, 3, 4, 2),
('F1D012081', 'Syahrani Fitria L.', 8, 3, 2, 5, 5, 5, 1, 1, 3, 3, 4, 6, 4, 2, 3, 2),
('F1D012082', 'Syahroni Hidayat', 8, 5, 5, 5, 4, 4, 2, 2, 2, 3, 2, 5, 3, 5, 2, 3),
('F1D012083', 'Syaifullah', 7, 5, 5, 10, 4, 0, 3, 4, 3, 3, 4, 6, 5, 5, 4, 1),
('F1D012084', 'Syarlaili Humairah', 11, 4, 5, 9, 6, 8, 2, 4, 1, 3, 2, 7, 2, 4, 5, 1),
('F1D012085', 'Tri Erna S', 5, 6, 5, 11, 3, 4, 0, 5, 1, 2, 6, 5, 1, 7, 4, 1),
('F1D012086', 'Tri Yulianto', 7, 3, 6, 6, 4, 4, 0, 2, 2, 4, 4, 2, 2, 5, 7, 0),
('F1D012087', 'Trimukti Wibowo', 11, 4, 5, 8, 4, 6, 1, 1, 2, 2, 4, 6, 3, 4, 7, 2),
('F1D012088', 'Ulil Amri', 10, 6, 7, 13, 4, 7, 3, 4, 4, 4, 5, 7, 5, 5, 6, 2),
('F1D012090', 'Yogi Permana', 7, 3, 5, 7, 5, 7, 1, 2, 5, 4, 1, 5, 6, 6, 2, 2),
('F1D012091', 'Yunita Lestari', 11, 2, 7, 11, 6, 4, 3, 3, 4, 2, 5, 5, 3, 7, 3, 2);

-- --------------------------------------------------------

--
-- Table structure for table `datauser`
--

CREATE TABLE IF NOT EXISTS `datauser` (
  `iduser` varchar(15) NOT NULL,
  `name` varchar(50) NOT NULL,
  `password` varchar(15) NOT NULL,
  PRIMARY KEY (`iduser`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `datauser`
--

INSERT INTO `datauser` (`iduser`, `name`, `password`) VALUES
('ranin', 'ranin', 'ranin'),
('F1B009037', 'Nurmutmainnah', 'opened'),
('F1B008083', 'arifzorro', 'tidaktau'),
('f1b009069', 'adzin7', 'andi7'),
('F1D012052', 'RONIHIDAYAT', 'F1D012052'),
('F1B008085', 'devacyber08', 'devacyber'),
('F1B006028', 'Haerul', 'arifgagah'),
('F1B009027', 'septa', 'septa'),
('sariIsmi', 'sariIsmi', 'sariIsmi'),
('F1D012066', 'MARLIN', 'F1D012066'),
('dbudy', 'Budi Pratama Putra', 'sithajegeg'),
('f1b009021', 'sikoko', 'sikoko'),
('daniel', 'daniel', 'daniel'),
('F1B008011', 'Ramaditia DS', 'ramads'),
('F1D013023', 'Diaz Guntur Febrian', 'cobacoba'),
('F1D013009', 'annisa', '123456789'),
('F1D013095', 'Tini Maharani', 'ranias27'),
('F1D013057', 'Liza Yuliana Khairani', 'l1z4yul1'),
('f1d013043', 'ikhwan arif', 'elina123'),
('F1D013029', 'FIENA EFLIANA', 'Black123'),
('F1D013097', 'WAHDA FARAH BATARI', 'F1D013097'),
('F1D013079', 'NITA ISRA'' S', 'JAVAJAVA'),
('f1d013047', 'indah', '34567'),
('F1D013073', 'NAZIBULLAH', 'keparat'),
('F1D013077', 'Ni Wayan Eka Widiyani', 'ayanaeka'),
('F1D013093', 'ROSITA ANDREANI', 'ita95'),
('F1D013033', 'hankam', 'HANKAM'),
('F1D013001', 'Abdul Chalel Rahman', 'madrid'),
('f1d013085', 'Panji', 'papoy'),
('F1D013075', 'ni komang karliani', 'komang'),
('F1D013061', 'MUAMAR IKHSAN', '19realmadrid'),
('F1D013015', 'Nurul', '19c32'),
('F1D013049', 'isni fachri rizal', '12345'),
('F1D013003', 'Affandy Akbar', 'bismillah'),
('f1d013099', 'yudha', 'takamina'),
('F1D013059', 'Rizwan', 'h2love'),
('jeki378', 'muhammad soadkin', '140796'),
('F1D013067', 'MUSTIANTI', 'informatika'),
('F1D013087', 'PUSPITA ASRI NURMALASARI', 'informatika'),
('f1d013091', 'riska', 'kafaris'),
('f1d013069', 'nadia noviyanti bakary', 'koalisitotal'),
('F1D013031', 'FITRAH AMALIA', '12345'),
('f1d013045', 'ilham', 'hamnya'),
('F1D013041', 'sarwe', '54rw35'),
('F1D013005', 'Ahmad Patoni', 'jklasd'),
('f1d013025', 'dinda bahari putri', '12345'),
('F1D013089', 'Ramlah Nurlaeli', 'F1D013089'),
('F1D013027', 'Evandry Syaputra', 'malang'),
('F1D0130300', 'FITRAH AMALIA', '12345'),
('F1D013017', 'Bq.suci septiati', 'suci123'),
('F1D013055', 'LIA RAMDHANI', 'b3acd'),
('f1d013021', 'daning', '12345'),
('F1D013071', 'naningsih', '08081995'),
('f1d013007', 'anang', 'benar'),
('F1D013042', 'azmi yunda chairani', '01031993'),
('F1D013012', 'AZMI YUNDA CHAIRANI', '12345');

-- --------------------------------------------------------

--
-- Table structure for table `kd_probabilities`
--

CREATE TABLE IF NOT EXISTS `kd_probabilities` (
  `node_name` varchar(100) NOT NULL,
  `probabilities` text NOT NULL,
  PRIMARY KEY (`node_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `kd_probabilities`
--

INSERT INTO `kd_probabilities` (`node_name`, `probabilities`) VALUES
('baseJava', '0.5821#0.4179'),
('classNmethod', '0.6316#0.4#0.5#0.45#0.3684#0.6#0.5#0.55'),
('variable', '0.99#0.99#0.6667#0.6667#0.99#0.7143#0.5#0.6667#0.01#0.01#0.3333#0.3333#0.01#0.2857#0.5#0.3333'),
('pdt', '0.6269#0.3731'),
('odt', '0.6866#0.3134'),
('array', '0.5806#0.5333#0.4545#0.3#0.4194#0.4667#0.5455#0.7'),
('logic', '0.5522#0.4478'),
('opArithmetic', '0.4464#0.1818#0.5536#0.8182'),
('opIncNdec', '0.4286#0.24#0.5714#0.76'),
('opRelation', '0.2812#0.2#0.25#0.5#0.7188#0.8#0.75#0.5'),
('opLogic', '0.5312#0.2#0.2917#0.1667#0.4688#0.8#0.7083#0.8333'),
('opPredence', '0.5#0.0011#0.6#0.5#0.3333#0.0011#0.99#0.6667#0.99#0.5#0.6#0.375#0.0011#0.0011#0.4#0.1667#0.5#0.9989#0.4#0.5#0.6667#0.9989#0.01#0.3333#0.01#0.5#0.4#0.625#0.9989#0.9989#0.6#0.8333'),
('looping', '0.99#0.0011#0.0011#0.25#0.0011#0.0011#0.0011#0.0011#0.0011#0.5#0.0011#0.0011#0.75#0.6667#0.0011#0.0011#0.01#0.9989#0.9989#0.75#0.9989#0.9989#0.9989#0.9989#0.9989#0.5#0.9989#0.9989#0.25#0.3333#0.9989#0.9989'),
('ifElse', '0.5#0.8333#0.4#0.125#0.99#0.25#0.6667#0.3333#0.5#0.1667#0.6#0.875#0.01#0.75#0.3333#0.6667'),
('switchCase', '0.625#0.2#0.4615#0.4545#0.0011#0.4167#0.25#0.0011#0.375#0.8#0.5385#0.5455#0.9989#0.5833#0.75#0.9989'),
('flowchart', '0.4627#0.5373');

-- --------------------------------------------------------

--
-- Table structure for table `lesson`
--

CREATE TABLE IF NOT EXISTS `lesson` (
  `idlesson` varchar(5) NOT NULL,
  `lessonname` varchar(20) NOT NULL,
  `topic` text NOT NULL,
  PRIMARY KEY (`idlesson`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `lesson`
--

INSERT INTO `lesson` (`idlesson`, `lessonname`, `topic`) VALUES
('m00', 'baseJava', 'Overview Java Programming'),
('m01', 'classNmethod', 'Kelas dan Main Method'),
('m02', 'variable', 'Variabel'),
('m03', 'pdt', 'Tipe Data Primitif'),
('m04', 'odt', 'Tipe Data Object'),
('m05', 'array', 'Array'),
('m06', 'logic', 'Logika'),
('m07', 'opArithmetic', 'Operator Aritmatika'),
('m08', 'opIncNdec', 'Operator Increament dan Decreament'),
('m09', 'opRelation', 'Operator Relasional'),
('m10', 'opLogic', 'Operator Logika'),
('m11', 'opPredence', 'Operator Predence'),
('m12', 'looping', 'Perulangan'),
('m13', 'ifElse', 'Pemilihan dengan Statement IF dan Else'),
('m14', 'switchCase', 'Pemilihan dengan Statement Switch Case'),
('m15', 'flowchart', 'Algoritma Pemograman dan flowchart');

-- --------------------------------------------------------

--
-- Table structure for table `lesson_sub`
--

CREATE TABLE IF NOT EXISTS `lesson_sub` (
  `idlesson` varchar(5) NOT NULL,
  `idsublesson` varchar(100) NOT NULL,
  `sublesson` text NOT NULL,
  `lesson` text NOT NULL,
  PRIMARY KEY (`idsublesson`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `lesson_sub`
--

INSERT INTO `lesson_sub` (`idlesson`, `idsublesson`, `sublesson`, `lesson`) VALUES
('m00', 'm00s001', 'Sejarah Singkat Java ', '<h2 style="text-align: center ">Sejarah Singkat Java </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Pada  1991,  sekelompok  insinyur  Sun  dipimpin  oleh  Patrick  Naughton  dan  James Gosling  ingin merancang bahasa komputer untuk perangkat konsumer seperti <i>cable TV  Box</i>.  \r\n                        Dikarenakan  perangkat  tersebut  tidak  memiliki  banyak  memori,  bahasa  harus  berukuran  kecil  dan mengandung  kode  yang  liat.  Juga  karena manufaktur-manufaktur  berbeda  memilih  <i>processor</i>  yang  berbeda  pula,  maka  bahasa  harus bebas dari manufaktur manapun. Proyek diberi nama kode ”Green”. </p>  \r\n                    \r\n                    <p class="p"  id="p2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Sebagai contoh, Kebutuhan  untuk  fleksibilitas,  kecil,  liat  dan  kode  yang  netral  terhadap  <i>platform</i> mengantar tim mempelajari implementasi Pascal yang pernah dicoba. Niklaus Wirth, pencipta  bahasa  Pascal  telah  merancang  bahasa  portabel  yang  menghasilkan <i>intermediate</i>  code  untuk  mesin  hipotesis.  \r\n                        Mesin  ini  sering  disebut  dengan  mesin maya  (<i>virtual machine</i>).  Kode  ini  kemudian  dapat  digunakan  di  sembarang mesin yang memiliki <i>interpreter</i>. Proyek Green menggunakan mesin maya untuk mengatasi isu utama tentang netral terhadap arsitektur mesin.</p>\r\n\r\n                                            \r\n                     <p class="p" id="p3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                         Karena  orang–orang  di  proyek  Green  berbasis  C++  dan  bukan  Pascal  maka kebanyakan sintaks diambil dari C++, serta mengadopsi orientasi objek dan bukan prosedural. \r\n                         Mulanya bahasa yang diciptakan diberi nama  ”Oak” oleh James Gosling yang mendapat inspirasi dari sebuah pohon yang berada pada seberang kantornya, namun dikarenakan nama Oak sendiri merupakan nama bahasa pemrograman yang telah  ada  sebelumnya, \r\n                         kemudian  SUN  menggantinya  dengan  JAVA.  Nama  JAVA sendiri  terinspirasi  pada  saat mereka  sedang menikmati  secangkir  kopi  di  sebuah kedai  kopi  yang  kemudian  dengan  tidak  sengaja  salah  satu  dari  mereka menyebutkan  kata  JAVA  yang mengandung  arti  asal  bijih  kopi.  Akhirnya mereka sepakat untuk memberikan nama bahasa pemrograman tersebut dengan nama Java.    </p>\r\n                           \r\n                     \r\n                     <p class="p" id="p4"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                       Produk pertama proyek Green adalah Star 7  (*7),  sebuah  kendali  jarak  jauh  yang sangat  cerdas.  Dikarenakan  pasar masih  belum  tertarik  dengan  produk  konsumer cerdas  maka  proyek  Green  harus  menemukan  pasar  lain  dari  teknologi  yang diciptakan.  Pada  saat  yang  sama,  implementasi  WWW  dan  Internet  sedang mengalami  perkembangan  pesat.  \r\n                       Di  lain  pihak,  anggota  dari  proyek  Green  juga menyadari  bahwa  Java  dapat  digunakan  pada  pemrograman  internet,  sehingga penerapan selanjutnya mengarah menjadi teknologi yang berperan di web.\r\n                     </p>\r\n                     \r\n                     <image src="images/lesson/OJP_m0s001.jpg">'),
('m00', 'm00s002', 'Teknologi Java', '<h2 style="text-align: center">Teknologi Java</h2>\r\n                    <strong>Sebuah Bahasa Pemrograman </strong>\r\n                    <p id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Sebagai sebuah bahasa pemrograman, Java dapat membuat seluruh bentuk aplikasi,<i> desktop, web</i> dan  lainnya,  \r\n                        sebagaimana  dibuat  dengan  menggunakan  bahasa pemrograman konvensional yang lain.</p>   \r\n                    \r\n                    <p id="p2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Java adalah bahasa pemrograman yang berorientasi objek (OOP)  dan  dapat dijalankan pada berbagai <i>platform</i> sistem operasi. Perkembangan  Java  tidak hanya terfokus  pada  satu  sistem  operasi, \r\n                        tetapi  dikembangkan  untuk  berbagai  sistem operasi dan bersifat <i>open source.</i> </p>\r\n\r\n                    <strong>Sebuah <i>Development Environment</i></strong>\r\n               \r\n                    <p id="p3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Sebagai sebuah peralatan pembangun, teknologi Java menyediakan banyak <i>tools  : compiler, interpreter, </i>penyusun dokumentasi, paket kelas dan sebagainya. </p>\r\n                   \r\n                    <strong>Sebuah Aplikasi</strong>\r\n                     <p id="p3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                         Aplikasi dengan teknologi Java secara umum adalah aplikasi serba guna yang dapat dijalankan pada seluruh mesin yang memiliki <i>Java Runtime Environment (JRE) </i>.</p>\r\n                     \r\n                     <strong>Sebuah <i>Deployment Environment</i></strong> \r\n                     <p id="p4">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                         Terdapat dua komponen utama dari <i>Deployment Environment</i>. Yang pertama adalah JRE, yang terdapat pada paket J2SDK, mengandung kelas–kelas untuk semua paket teknologi Java yang meliputi kelas dasar dari Java, komponen GUI dan sebagainya. Komponen  yang  lain  terdapat  pada  Web  Browser. \r\n                         Hampir  seluruh  <i>Web  Browser</i> komersial menyediakan <i>interpreter </i> dan <i>runtime environment</i> dari teknologi Java. \r\n                     </p>\r\n                     '),
('m00', 'm00s003', 'Fitur Java', ' <h2 style="text-align: center ">Sebagian Fitur dari JAVA </h2>\r\n                    <strong>Java Virtual Machine (JVM) </strong>\r\n                    <p id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        JVM adalah sebuah mesin imajiner (maya) yang bekerja dengan menyerupai aplikasi pada  sebuah  mesin  nyata.  JVM  menyediakan  spesifikasi  <i>hardware</i>  dan  <i>platform</i> dimana  kompilasi  kode  Java  terjadi. \r\n                    Spesifikasi  inilah  yang  membuat  aplikasi berbasis  Java  menjadi  bebas  dari  <i>platform</i>  manapun  karena  proses  kompilasi diselesaikan oleh JVM. \r\n                    </p>\r\n                    \r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Aplikasi  program  Java  diciptakan  dengan <i> file teks</i>  berekstensi  <i>.java.</i>  Program  ini dikompilasi  menghasilkan  satu  berkas <i>bytecode</i> berekstensi <i>.class</i>  atau  lebih. <i>Bytecode</i> adalah  serangkaian  instruksi  serupa  instruksi  kode mesin. \r\n                    Perbedaannya  adalah  kode  mesin  harus dijalankan  pada  sistem  komputer  dimana  kompilasi  ditujukan, sementara <i>bytecode</i>  berjalan  pada <i>java  interpreter</i> yang  tersedia  di semua <i>platform</i> sistem komputer dan sistem operasi. \r\n                    </p>   \r\n                    \r\n                   <strong><i>Garbage Collection</i></strong> \r\n               \r\n                    <p id="p3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n                        Banyak  bahasa  pemrogaman  lain  yang  mengijinkan  seorang  <i>programmer</i> mengalokasikan memori pada saat dijalankan. Namun, setelah menggunakan alokasi memori  tersebut,  harus  terdapat  cara  untuk menempatkan  kembali blok memori tersebut  supaya  program  lain  dapat menggunakannya. Dalam C, C++  dan  bahasa lainnya,  adalah <i>programmer</i> yang mutlak  bertanggung  jawab  akan  hal  ini.\r\n                        Hal  ini dapat menyulitkan bilamana <i>programmer</i> tersebut alpa untuk mengembalikan blok memori sehingga menyebabkan situasi yang dikenal dengan nama <i>memory leaks</i>. \r\n                    </p>\r\n                    <p>\r\n                        Program  Java  melakukan  <i>garbage  collection</i> yang  berarti  program  tidak  perlu menghapus sendiri objek–objek yang  tidak digunakan  lagi. Fasilitas  ini mengurangi  beban  pengelolaan memori  oleh  programmer  dan mengurangi  atau mengeliminasi sumber kesalahan terbesar yang terdapat pada bahasa yang memungkinkan alokasi dinamis. \r\n                    </p>\r\n                   \r\n                    <strong><i>Code Security</i></strong>\r\n                     <p id="p3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                         <i>Code  Security</i> terimplementasi  pada  Java  melalui  penggunaan  <i>Java  Runtime Environment (JRE)</i>. Java menggunakan model pengamanan 3 lapis untuk melindungi sistem dari <i>untrusted Java Code</i>.</p>\r\n                     <ol>\r\n                         <li>\r\n                             Pertama, <i>class-loader</i> menangani  pemuatan  kelas  Java  ke <i>runtime interpreter</i>. Proses ini menyediakan pengamanan dengan memisahkan kelas–kelas  yang  berasal  dari <i>local disk</i> dengan  kelas–kelas  yang  diambil  dari jaringan. Hal  ini membatasi aplikasi Trojan karena kelas–kelas yang berasal dari <i>local disk</i> yang dimuat terlebih dahulu.   \r\n                         </li>\r\n                         <li>\r\n                             Kedua, <i>bytecode verifier</i> membaca <i>bytecode</i> sebelum  dijalankan  dan menjamin <i>bytecode</i> memenuhi aturan–aturan dasar bahasa Java. \r\n                         </li>\r\n                         <li>\r\n                             Ketiga, manajemen keamanan menangani keamanan tingkat aplikasi dengan mengendalikan  apakah  program  berhak  mengakses  sumber  daya  seperti  sistem file, <i>port</i> jaringan, proses eksternal dan <i>sistem windowing</i>. \r\n                         </li>\r\n                     </ol>\r\n                     Setelah  seluruh  proses  tersebut  selesai  dijalankan,  barulah  kode  program  di eksekusi. '),
('m00', 'm00s004', 'Fase - Fase Pemograman Java', ' <h2 style="text-align: center ">Fase - fase pemograman Java </h2>\r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                       Gambar  dibawah  ini  menjelaskan  aliran  proses  kompilasi  dan  eksekusi  sebuah program Java :  \r\n                    </p>\r\n                    \r\n                    <image style="margin-left: 30px" src="images/lesson/OJP_m0s004_01_02.jpg" >\r\n                    \r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Langkah  pertama  dalam  pembuatan  sebuah  program  berbasis  Java  adalah menuliskan kode program pada <i>text editor</i>. \r\n                        Contoh <i>text editor</i> yang dapat digunakan antara  lain  :  notepad,  vi,  emacs  dan  lain  sebagainya.  Kode  program  yang  dibuat kemudian tersimpan dalam sebuah berkas berekstensi <i>.java.</i> \r\n                    </p>   \r\n                    \r\n               \r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Setelah membuat  dan menyimpan  kode  program,  kompilasi  file  yang  berisi  kode program  tersebut dengan menggunakan <i>Java Compiler</i>. Hasil dari kompilasi berupa berkas <i>bytecode</i> dengan ekstensi <i>.class</i>. \r\n                    </p>\r\n                    \r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Berkas yang mengandung <i>bytecode</i> tersebut kemudian akan dikonversikan oleh <i>Java Interpreter</i> menjadi bahasa mesin sesuai dengan jenis dan <i>platform</i> yang digunakan.\r\n                    </p>\r\n                   <image style="margin-left: 50px" src="images/lesson/OJP_m0s004_02.jpg">'),
('m04', 'm04s002', 'Kelas-Kelas Wrapper', '<h2 style="text-align: center ">Class-class Wrapper</h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; \r\n                        Sesungguhnya,  tipe  data  primitive  seperti  <i>int</i>, <i>char</i> and <i>long</i> bukanlah  sebuah  objek\r\n                        Sehingga,  variabel-variabel  tipe  data  ini  tidak  dapat  mengakses  method-method  dar\r\n                        class <i>Object</i>. Hanya objek-objek nyata, yang dideklarasikan menjadi referensi tipe data\r\n                        dapat mengakses method-method dari class <i>Object</i>. Ada suatu keadaan, bagaimanapun\r\n                        ketika  Anda  membutuhkan  sebuah  representasi  objek  untuk  variabel-variabel  tip\r\n                        primitive  dalam  rangka  menggunakan  method-method  Java  built-in.  Sebagai  contoh\r\n                        Anda  boleh menambahkan  variabel  tipe  primitif  pada  objek  <i>Collection</i>.  Disinilah  class\r\n                        wrapper  masuk.  Class  wrapper  adalah  representasi  objek  sederhana  dari  variabel\r\n                        variabel non-objek yang sederhana. Demikian daftar dari class wrapper. \r\n                    </p>\r\n                     <image src="images/lesson/tdo_1.jpg">\r\n                    <p>\r\n                        \r\n                    <p>\r\n                       Nama-nama  class  wrapper  cukup  mudah  untuk  diingat  selama  nama-nama  itu  sama \r\n                        dengan tipe data primitive. Dan juga sebagai catatan, bahwa class-class wrapper diawali \r\n                        dengan huruf besar dan versi yang ditunjukkan dari tipe data primitive. \r\n \r\n                    </p>\r\n             \r\n                     <p>\r\n                         Di bawah ini contoh penggunaan class wrapper untuk <i>boolean</i>. \r\n                     </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;class BooleanWrapper { <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  boolean booleanVar = 1>2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  Boolean booleanObj = new Boolean("TRue"); <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  /* primitif ke objek; dapat juga menggunakan <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  method valueOf */ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  Boolean booleanObj2 = new Boolean(booleanVar); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("booleanVar = " + booleanVar); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("booleanObj = " + booleanObj);  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("booleanObj2 = " + booleanObj2); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("compare 2 wrapper objects: " ;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  + booleanObj.equals(booleanObj2));<br>  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  /* objek ke primitif */ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  booleanVar = booleanObj.booleanValue();  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("booleanVar = " + booleanVar); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  }<br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>'),
('m01', 'm01s001', 'Kelas dalam Java', '<h2 style="text-align: center "> Definisi Kelas dalam Java </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Sebelum  menulis <i>class</i>  Anda,  pertama  pertimbangkan  dimana  Anda  akan menggunakan <i>class</i> dan bagaimana <i>class</i> tersebut akan digunakan. \r\n                        Pertimbangkan pula nama yang tepat dan tuliskan seluruh informasi atau properti yang ingin Anda isi pada <i>class</i>. Jangan sampai terlupa untuk menuliskan secara urut <i>method</i> yang akan Anda gunakan dalam <i>class</i>. \r\n                    </p>\r\n                    \r\n                    <p >Dalam pendefinisian class, dituliskan :   </p> \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;(modifier) class (name) { <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(attributeDeclaration)* <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(constructorDeclaration)* <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(methodDeclaration)* <br>\r\n                        &nbsp; &nbsp; &nbsp} \r\n                    </div>\r\n                                        \r\n                    <p> dimana : <br><font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px"> (modifier) </font>adalah sebuah <i>access modifier</i>, yang dapat dikombinasikan dengan tipe <i>modifier</i> lain.</p>\r\n                     \r\n                    <image src="images/lesson/classNmethod_3.jpg">\r\n       \r\n                     <p> &nbsp; &nbsp; &nbsp; \r\n                         Pada bagian  ini,  kita akan membuat  sebuah  <i>class</i>  yang berisi <i>record</i> dari  siswa.  Jika  kita telah mengidentifikasikan  tujuan  dari  pembuatan <i>class</i>, maka  dapat  dilakukan  pemberian nama yang sesuai. Nama yang tepat pada <i>class</i> ini adalah <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">StudentRecord</font>. \r\n                         <br>  <br>\r\n                         Untuk mendefinisikan class, kita tuliskan : \r\n                     </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; public class <b>StudentRecord</b>  { <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//area penulisan kode selanjutnya * <br>\r\n                        &nbsp; &nbsp; &nbsp; } \r\n                    </div>\r\n                     \r\n                     <p>dimana, <br> \r\n                         <i>Public</i>  -  <i>Class</i> ini dapat diakses dari luar <i>package</i><br> \r\n                         <i>Class</i>  -  <i>Keyword</i> yang digunakan untuk pembuatan <i>class</i> dalam Java<br> \r\n                         <i>StudentRecord</i>  -  <i>Identifier</i> yang menjelaskan <i>class</i><br>\r\n                     </p>\r\n                     <image src="images/lesson/classNmethod_2.jpg">'),
('m01', 'm01s002', 'Contoh Pembuatan Kelas dan Main Method ', '<h2 style="text-align: center "> Contoh Pembuatan Kelas dan Main Method </h2>\r\n                    <p class="p" id ="p1">\r\n                        Sekarang, kita akan mencoba membuat program Java pertama : \r\n                    </p>\r\n                      <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; public class Hello   { <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   /**  <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   * My first java program   <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   */  <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   public static void main(String[] args) {  <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  //menampilkan string ”Hello world” pada layar  <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  System.out.println("Hello world!");    <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   }  <br>\r\n                        &nbsp; &nbsp; &nbsp;} \r\n                    </div>\r\n                    \r\n                    <p>Baris pertama kode : </p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                         &nbsp; &nbsp; &nbsp; public class Hello  \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        menandakan nama <i>class</i> yaitu Hello. Dalam  Java, semua kode seharusnya ditempatkan di dalam deklarasi <i>class</i>. kita melakukannya dengan menggunakan kata kunci <i>class</i>. \r\n                        Sebagai tambahan, <i>class</i> menggunakan <i>access specifier</i> <b>public</b>, yang mengindikasikan bahwa <i>class</i> tambahan, <i>class</i> menggunakan <i>class specifier public</i>, yang mengindikasikan bahwa <i>class</i> kita  mempunyai  akses  bebas  ke  <i>class</i>  yang  lain  dari  <i>package</i>  yang  lain  pula  (<i>package</i> merupakan kumpulan <i>class-class</i>). \r\n                        Kita akan membahas lebih dalam mengenai <i>package</i> dan <i>access specifier</i> pada pembahasan selanjutnya.   \r\n                    </p>\r\n                    \r\n                    <p>\r\n                        Baris berikutnya yaitu yang terdiri atas kurung kurawal { menandakan awal blok. Pada kode ini,  kita  menempatkan  kurung  kurawal  pada  baris  selanjutnya  setelah  deklarasi <i>class</i>, bagaimanapun, kita dapat  juga meletakkan kurung kurawal  ini setelah baris pertama dari kode yang kita tulis. Jadi, kita dapat menulis kode kita sebagai berikut :  \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                          &nbsp; &nbsp; &nbsp;public class Hello    <br>\r\n                          &nbsp; &nbsp; &nbsp;{  /**  <br>\r\n                         atau   <br>\r\n                        &nbsp; &nbsp; &nbsp;     public class Hello { \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        Tiga baris selanjutnya menandakan adanya komentar Java. Komentar adalah sesuatu yang digunakan untuk mendokumentasikan setiap bagian dari kode yang ditulis. Komentar bukan merupakan  bagian  dari  program  itu  sendiri,  \r\n                        tetapi  digunakan  untuk  tujuan  dokumentasi. Komentar itu sendiri dapat ditambahkan pada kode yang Anda tulis sebagai petunjuk yang dapat membantu proses pembelajaran pemrograman yang baik.   \r\n                    </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                            &nbsp; &nbsp; &nbsp;/**  <br>\r\n                            &nbsp; &nbsp; &nbsp;* My first java program   <br>\r\n                            &nbsp; &nbsp; &nbsp;*/  <br>\r\n                    </div>\r\n                    \r\n                    <p>\r\n                        Komentar dinyatakan dengan tanda “/*” dan “*/”. Segala sesuatu yang ada diantara tanda tersebut diabaikan oleh compiler Java, dan mereka hanya dianggap sebagai komentar. Baris selanjutnya,  \r\n                    </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;    public static void main(String[] args) {  <br>\r\n                         &nbsp; &nbsp; &nbsp;} \r\n                    </div>\r\n                    \r\n                    <p> mengindikasikan nama  suatu method  dalam  class <b>Hello</b>  yang bertindak  sebagai <b>method utama</b>. Method utama adalah  titik awal dari suatu program Java. Semua program kecuali applet  yang  ditulis  dalam  bahasa  Java  dimulai  dengan  method  utama.  \r\n                        Yakinkan  untuk mengikuti kaidah penulisan tanda yang benar. <br>Baris selanjutnya juga merupakan komentar, \r\n                   </p>\r\n\r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                             &nbsp; &nbsp; &nbsp; //Menampilkan string "Hello world" pada layar \r\n                    </div>\r\n                   \r\n                   <p>\r\n                    Sekarang kita mempelajari 2 cara untuk membuat komentar. Cara pertama adalah dengan menempatkan  komentar  dalam  /*  dan  */,  dan  cara  yang  lain  adalah  dengan menuliskan tanda // pada awal komentar \r\n                    <br>Baris selanjutnya, \r\n                   </p>\r\n                   \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                            &nbsp; &nbsp; &nbsp;  System.out.println("Hello world!");  \r\n                    </div>\r\n                   \r\n                   <p>menampilkan  teks  “Hello World!”  pada  layar.  Perintah  System.out.println(), menampilkan teks yang diapit oleh tanda <i>double pute</i> (“ ”) pada layar.  </p>\r\n                   <p>Dua baris terakhir yang terdiri atas dua kurung kurawal digunakan untuk menutup method utama dan masing-masing class secara berurutan.  </p>\r\n                   <image src="images/lesson/classNmethod_1.jpg">'),
('m02', 'm02s001', 'Definisi, deklarasi dan inisialisasi Variabel', '<h2 style="text-align: center "> Definisi, Deklarasi, dan Inisialisasi Variabel </h2>\r\n                    <p class="p" id ="p1">\r\n                        <b>Variabel</b> adalah item yang digunakan data untuk menyimpan pernyataan objek.\r\n                    </p>\r\n                    \r\n                    <p class="p" id ="p1">\r\n                        Variabel  memiliki  <b>tipe  data</b>  dan  <b>nama</b>.  Tipe  data  menandakan  tipe  nilai  yang  dapat dibentuk oleh variabel itu sendiri. <b>Nama variabel</b> harus mengikuti aturan untuk identifier.\r\n                    </p>\r\n                    \r\n                    <p>Untuk deklarasi variabel adalah sebagai berikut,</p> \r\n                    \r\n                    <p>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<b>(data tipe) (name) [=initial value]; </b> </p>     \r\n                     \r\n                     <p>\r\n                         <b>Catatan:</b> Nilainya berada diantara () adalah nilai yang disyaratkan, sementara nilai dalam tanda [] bersifat optional. \r\n                     </p>\r\n                     \r\n                     <p>\r\n                         Berikut  ini  adalah  contoh  program  yang mendeklarasikan  dan  menginisialisasi  beberapa variabel,\r\n                     </p>\r\n                         \r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; public class VariableSamples {  <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; public static void main( String[] args ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; //deklarasi tipe data dengan nama variable   <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; // <b>result dan</b> tipe data <b>boolean</b>     <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; boolean  result;     <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; //deklarasi tipe data dengan nama variabel <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; // <b>option</b> dan tipe data <b>char</b><br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; char  option; <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; option = ''C'';  //menandai ''C'' sebagai option <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; //deklarasi tipe data dengan nama variabel <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;  //<b>grade, double</b> tipe data dan telah  di inisialisasi  <br>    \r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; //to 0.0 <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; double  grade = 0.0;  <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; } <br>\r\n                        &nbsp; &nbsp; &nbsp; } \r\n                    </div>\r\n                     <image style="margin-top: 20px" src="images/lesson/variabel_1_2.jpg"> \r\n                     \r\n                     <p>Batasan Penentuan nama sebuah variabel</p>\r\n                     <p style="margin-left: 20px;"><b>Nama variabel tidak boleh mengandung spasi.</b><br>\r\n                        Contoh : <br>\r\n                        int bilangan bulat;      //SALAH<br>\r\n                        int bilanganBulat;       //BENAR<br>\r\n                        int bilangan_bulat;      //BENAR<br><br>\r\n\r\n                        <b>Nama variabel tidak boleh berupa angka atau diawali oleh karakter numerik (angka).</b>\r\n                        Contoh :<br>\r\n                        Boolean 1;             //SALAH<br>\r\n                        double 2Dimensi;       //SALAH<br>\r\n                        double T1;             //BENAR<br><br>\r\n                         \r\n                        <b>Nama variabel tidak boleh mengandung karakter symbol, kecuali tanda $.</b><br>\r\n                        Contoh :<br>\r\n                        char Simbol#;           //SALAH<br>\r\n                        char $a;                //BENAR<br><br>\r\n                        \r\n                        <b>Nama variabel tidak boleh menggunakan kata kunci yang sudah didefinisikan dalam java.</b><br>\r\n                        Contoh :<br>\r\n                        byte while;           //SALAH<br>\r\n                        boolean break;        //SALAH<br><br>\r\n                         \r\n                        <b>Dalam satu blok program, nma variabel harus berbesifat unik atau berbeda satu sama lain.</b><br>\r\n                        Contoh :<br>\r\n                        int a=0;<br>\r\n                        if(a==0){<br>\r\n                        int a=3;           //BENAR<br>\r\n                        int b=3;           //BENAR<br>\r\n                        int b=3            //SALAH<br>\r\n                        }<br><br>\r\n                         \r\n                        <b>Usahakan nama sedeskriptif mungkin sehingga kode program dapat lebih mudah dipahami oleh orang lain (terutama bila ekerja dengan tim).</b>\r\n\r\n                     </p> \r\n'),
('m02', 'm02s002', 'Menampilkan data sebuah variabel', '  <h2 style="text-align: center "> Menampilkan Data Variabel </h2>\r\n                    <p class="p" id ="p1">\r\n                       Untuk mengeluarkan nilai dari variabel yang diinginkan, kita dapat menggunakan perintah sebagai berikut, \r\n                    </p>\r\n                    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; System.out.println()  \r\n                    </div>\r\n                    <p>atau</p>\r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; System.out.print()  \r\n                    </div>\r\n                     \r\n                    <p>\r\n                        Berikut ini adalah contoh program, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  public class OutputVariable  {  <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; public static void main( String[] args ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; int value = 10;     <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; char x;      <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; x = ‘A’;       <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; System.out.println( value );   <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; System.out.println( “The value of x=” + x ); <br>\r\n                        &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; } <br>\r\n                        &nbsp; &nbsp; &nbsp;  } \r\n                    </div> <br>\r\n                    <h3 style="text-align: center ">System.out.println()  vs. System.out.print()  </h3>\r\n                    <p class="p" id ="p1">\r\n                        Apa  yang  membedakan  diantara  perintah  System.out.println()  and  System.out.print()? \r\n                        Yang  pertama  menambahkan  baris  baru  pada  akhir  data  untuk  dikeluarkan,  sementara \r\n                        selanjutnya tidak. \r\n                    </p>\r\n                    \r\n                    <p>\r\n                        Perhatikan pernyataan tersebut, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">  \r\n                        &nbsp; &nbsp; &nbsp;  System.out.print("Hello ");  <br>\r\n                        &nbsp; &nbsp; &nbsp;  System.out.print("world!");   \r\n                    </div>\r\n                    \r\n                    <p>                         \r\n                        Pernyataan tersebut akan menghasilkan output berikut ini pada layar,  \r\n                    </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">  \r\n                        &nbsp; &nbsp; &nbsp;  Hello world!  <br> \r\n                    </div>\r\n                    <p>\r\n                         Sekarang perthatikan pernyataan berikut, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">  \r\n                        &nbsp; &nbsp; &nbsp;  System.out.println("Hello ");  <br>\r\n                        &nbsp; &nbsp; &nbsp;  System.out.println("world!");   \r\n                    </div>\r\n                    \r\n                    <p>                         \r\n                        Pernyataan ini akan menghasilkan output sebagai berikut pada layar, \r\n                    </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">  \r\n                        &nbsp; &nbsp; &nbsp;  Hello world!  <br> \r\n                        &nbsp; &nbsp; &nbsp;  world!  <br> \r\n                    </div>               '),
('m03', 'm03s001', 'Tipe data Integer', '                   <h2 style="text-align: center "> Tipe data Integer (Bilangan Bulat) </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; \r\n                        Tipe data integer dibagi menjadi  : <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px"> byte, short, int,</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font>, Semua tipe data ini bersifat <i>signed</i> (bertanda), \r\n                        yaitu tipe data yang dapat merepresentasikan bilangan negative maupun positif. Tidak seperti kebanyakan bahasa pemograman lain (c,c++,pascal, dan lainnya) java tidak mendukung nilai <i>unsigned</i> (tipe tanpa tanda).\r\n                        <br><br> Ukuran dan rentang dari tipe integer didalam Java dapat anda lihat pada tabel dibawah ini.\r\n                    </p>   \r\n                     <image src="images/lesson/tdp_1.jpg"> \r\n                    \r\n                     <p><strong>Tipe  Byte</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                         Tipe ini adalah tipe terkecil dari tipe integer. tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">byte</font> pada umumnya digunakan pada saat kita bekerja dengan sebuah data <i>stream</i> dari suatu <i>file</i> maupun jaringan, yaitu untuk keperluan proses membaca/menulis. \r\n                         Selain itu tipe ini juga digunakan pada saat bekerja dengan data biner yang tidak kompatibel dengan tipe-tipe lain yang di definisikan di dalam Java.\r\n                     </p>\r\n                     \r\n                     <p>\r\n                         Untuk mendeklarasikan variabel bertipe <i>byte</i>, kita perlu menggunakan kata kunci <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">byte</font>. Berikut ini contoh pendeklarasian tiga buah variabel bertipe <i>byte</i>.\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  byte a;<br>\r\n                        &nbsp; &nbsp; &nbsp;  byte b,c;<br>\r\n                    </div>\r\n                    \r\n                     <P><strong>Tipe Short</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                         Tipe ini merupakan tipe 16-bit yang berada pada rentang nilai -32.768 sampai 32.767. pada umumnya diaplikasikan pada computer-komputer 16-bit, yang saat ini semakin jarang keberadaannya. \r\n                        <br>Berikut ini contoh pendeklarasian variablel bertipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">short</font>.\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  short s;<br>\r\n                    </div>\r\n                     \r\n                     <p><strong>Tipe int</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                         Tipe ini adalah tipe yang paling banyak digunakan untuk merepresentasikan nilai <i>integer</i> karena dianggap paling efisien dibandingkan tipe-tipe <i>integer</i> lainnya. \r\n                         Tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font> banyak digunakan untuk indeks dalam struktur perulangan maupun dalam kontruksi sebuah <i>array</i>. Selain itu secara teori, setiap ekspresi yang melibatkan tipe <i>integer</i> \r\n                        (<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">byte, short, int</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font>) semuanya akan dipromosikan ke tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font> terlebih dahulu sebelum proses perhitungan dilakukan. Sebagai contoh, perhatikan kode program berikut.\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;class ContohPerhitungan { <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  public static void main (String[]args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte a = 1;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  short b = 2;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  int c = 3, d;<br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  d = a+b+c;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  System.out.println(“Hasil = “ + d);<br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>\r\n                     \r\n                     <P>Hasil yang ditampilkan dilayar adalah sebagai berikut: </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; Hasil = 6\r\n                    </div>\r\n                     \r\n                    <p>&nbsp; &nbsp; &nbsp; \r\n                        Tipe ini digunakan untuk kasus-kasus tertentu yang nilainya berada di luar rentang tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font>. dengan kata lain tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font> biasanya terpaksa digunakan pada saat tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font> sudah tidak cukup lagi untuk menampungnya. \r\n                        Berikut ini contoh penggunaan tipe data <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font> untuk mendeklarasikan sebuah variabel.\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  long jumlahDetik;<br>\r\n                        &nbsp; &nbsp; &nbsp;  long jarak;<br>\r\n                    </div> <p>\r\n                         Disini secara internal variabel <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">a (byte)</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">b (short)</font> akan dipromosikan ke tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font> terlebih dahulu sebelum akhirnya operasi perhitungan diatas dilakukan.\r\n                     </p>\r\n                     \r\n                     <p><strong>Tipe Long</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                        Tipe ini digunakan untuk kasus-kasus tertentu yang nilainya berada di luar rentang tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font>. dengan kata lain tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font> biasanya terpaksa digunakan pada saat tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font> sudah tidak cukup lagi untuk menampungnya. \r\n                        Berikut ini contoh penggunaan tipe data <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">long</font> untuk mendeklarasikan sebuah variabel.\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  long jumlahDetik;<br>\r\n                        &nbsp; &nbsp; &nbsp;  long jarak;<br>\r\n                    </div>'),
('m03', 'm03s002', 'Floating Point', '<h2 style="text-align: center "> TIPE <i>FLOATING-POINT</i> (Bilangan Riil) </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; \r\n                        Tipe <i>floating point</i> digunakan untuk mereprentasikan nilai-nilai yang mengandung pecahan atau angka decimal dibelakang koma, seperti: 3.1416, 5.25, dan sebagainya. Bilangan-bilangan semacam ini sering disebut dengan bilangan riil.\r\n                        Dalam java, tipe <i>floating-point</i> dibedakan menjadi dua jenis, yaitu: <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">float</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font>. Contoh kasus sederhana yang membutuhkan tipe data ini adalah menghitung luas dan keliling lingkaran serta perhitungan-perhitungan yang melibatkan trigonometri (misalnya: <i>sinus</i> dan <i>cosinus</i>).\r\n                        Adapun ukuran dan rentang nilai dari kedua buah tipe tersebut ditunjukkan oleh tabel dibawah ini.\r\n                        <br><br>Tabel Ukuran dan rentang dari tipe <i>floating-point</i>.\r\n                    </p>   \r\n                     <image src="images/lesson/tdp_2.jpg"> \r\n                    \r\n                     <p><strong>Tipe  Float</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                         Tipe ini digunakan untuk menandakan nilai-nilai yang mengandung presisi atau ketelitian tunggal (<i>single-precision</i>) yang menggunakan ruang penyimpanan 32-bit. Presisi tunggal biasanya lebih cepat untuk prosesor-prosesor tertentu dan memakan ruang penyimpanan setengah kali lebih sedikit dengan presisi ganda (<i>double-precision</i>). \r\n                        Permasalah yang akan timbul adalah apabila kita menggunakan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">float</font> untuk nilai-nilai yang terlalu kecil, atau justru terlalu besar, karena nilai yang dihasilkan akan menjadi tidak akurat.\r\n                        Contoh pendeklarasian variabel dengan menggunakan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">float</font> dapat anda lihat pada kode dibawah ini :\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  float x,y;<br>\r\n                        &nbsp; &nbsp; &nbsp;  float suhu;<br>\r\n                    </div>\r\n                    \r\n                     <P><strong>Tipe Double</strong></p>\r\n                     <p>&nbsp; &nbsp; &nbsp; \r\n                         Tipe ini mengandung ketelitian angka ganda atau presisi ganda dan menggunakan ruang penyimpanan 64-bit untuk menyimpan nilai. Pada prosesor-prosesor modern seperti saat ini yang telah dioptimasi untuk melakukan perhitungan-perhitungan matematis dengan kecepatan tinggi, tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font> sebenarnya justru akan lebih cepat dari tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">float</font>. \r\n                         Semua fungsi matematis di dalam Java, seperti <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">sin()</font>, <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">cos()</font>, dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">sqrt()</font> akan mengembalikan nilai yang bertipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font>. Apabila anda ingin melakukan perhitungan-perhitungan yang melibatkan bilangan riil dan membutuhkan hasil dengan tingkat ketelitian yang tinggi di dalam program anda, maka tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font> akan menjadi pilihan terbaik.\r\n                         Berikut contoh kode yang menunjukkan penggunaan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font> di dalam program\r\n                     </p>\r\n                     \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; class kelilingLingkaran { <br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   double pi = 3.1416;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  double r = 2.12;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  double keliling;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  keliling = 2*pi*r;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  System.out.println (“Keliling Lingkaran = “ + keliling);<br>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   }<br>\r\n                        &nbsp; &nbsp; &nbsp; }\r\n                    </div>\r\n  \r\n                     <P>Hasil yang akan ditampilkan dilayar sebagai keluaran sebagai berikut :</p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; Keliling Lingkaran = 13.320384\r\n                    </div>');
INSERT INTO `lesson_sub` (`idlesson`, `idsublesson`, `sublesson`, `lesson`) VALUES
('m03', 'm03s003', 'Karakter', '  <h2 style="text-align: center "> Karakter </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; \r\n                       Sama seperti layaknya bahasa pemrograman lain, dalam Java, tipe data yang digunakan untuk menyimpan nilai berupa karakter adalah <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font>. Namun, perlu anda perhatikan (khususnya bagi anda yang berangkat dari pemrograman C/C++) bahwa tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> dalam Java sangan berbeda dengan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> yang terdapat pada C/C++. Apa alasannya? Dalam C/C++, \r\n                       <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> merupakan sebuah tipe <i>integer</i> dengan ukuran 8-bit. Adapun Java menggunakan karakter <i>Unicode</i> untuk mereprentasikan semua karakter yang ada. <i>Unicode</i> mendefinisikan sekumpulan karakter yang terdapat pada semua bahasa (dalam lingkup internasional), seperti bahasa Latin, Arab, Yunani, dan banyak lagi lainnya. Untuk kebutuhan seperti ini, \r\n                       Java membutuhkan ukuran 16-bit untuk tipe karakter, dan berada pada rentang nilai 0 sampai 65.536. kumpulan karakter standar (yang biasa disebut dengan karakter ASCII) berada pada rentang 0 sampai 127, dan perluasan sekumpulan karakter 8-bit (ISO-Latin-1) rentang nilainya 0 sampai 255. Karena bahasa Java dirancang untuk dapat diterapkan diberbagai <i>platform</i>, \r\n                       maka Java menggunakan karakter <i>Unicode</i> yang membutuhkan ukuran 16-bit. Ukuran sebesar ini sebenarnya tidak cocok diterapkan pada bahasa-bahasa seperti Indonesia, Inggris, Jerman, maupun Prancis; yang sebenarnya cukup dengan menggunakan karakter 8-bit. Namun, harus bagaimana lagi? Mungkin inilah harga yang harus dibayar untuk arti sebuah ‘portabilitas’.\r\n                       <br><br>Berikut ini contoh kode yang menunjukkan penggunan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font>dalam sebuah program.     \r\n    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; class DemoKarakter1 {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   char ch1 = 65;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   char ch2 =’B’;<br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   double keliling;<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   System.out.println(“ch1 = “ + ch1);<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   System.out.println(“ch2 = “ + ch2);<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   }<br>\r\n                        &nbsp; &nbsp; &nbsp; }\r\n                    </div>\r\n  \r\n                     <P>Program diatas akan memberikan hasil seperti berikut :</p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; ch1 = A <br>\r\n                       &nbsp; &nbsp; &nbsp; ch2 = B\r\n                    </div>\r\n                     \r\n                     <p>\r\n                         Seperti yang anda lihat diatas, nilai 65 dari tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> akan sama dengan karakter ‘A’. Hal ini disebabkan karena dalam karakte ASCII maupun <i>Unicode</i>, karakter ‘A’ diberi kode 65.\r\n                         Perlu anda perhatikan juga, meskipun dalam Java tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> bukan termasuk tipe integer, namun kita masih dapat melakukan operasi terhadapnya seakan-akan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char</font> tersebut adalah tipe <i>integer</i>. Dengan kata lain, kita dapat melakukan konversi dari tipe karakter ke tipe <i>integer</i>. \r\n                     </p>'),
('m04', 'm04s001', 'Tipe String', '  <h2 style="text-align: center "> Tipe <i>String</i> dalam Java </h2>\r\n                    <p>&nbsp; &nbsp; &nbsp; \r\n                        Dalan Java, <i>String</i> didefinisikan sebagai sebuah objek. Java telah mendefinisikan Objek <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String</font>\r\n                        untuk merepresentasikan tipe <i>String</i>. Berikut contoh pendeklarasian variabel bertie <i>String</i> dalam Java.\r\n                    </p>      \r\n    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; String str<br>\r\n                        &nbsp; &nbsp; &nbsp; String str="Contoh string dalam Java"<br>\r\n                    </div>\r\n                    \r\n                    <P>Disini <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">str</font> adalah objek dari tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String</font>,\r\n                       bukan merupakan variabel dari tipe sederhana. Maka dari itu, <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">srt</font> memiliki <i>method</i> khusus untuk memanipulasi nilai didalamnya.\r\n                       Dengan demikian, kita dapat memanggil <i>method-method</i> dari tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String</font> melalui objek <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">str</font>, \r\n                       seperti yang tampak pada contoh kode berikut :\r\n                    </p>\r\n                    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; int posisiJ=str.charAt(''J'');<br>\r\n                        &nbsp; &nbsp; &nbsp; System.out.println(str.toUppercase());\r\n                    </div>\r\n                    \r\n                    <p>Program tersebut akan membuat karakter pada <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String str</font> berubah menjadi huruf <i>Uppercase</i> (huruf kecil) semua. </p>\r\n      \r\n                    <p>Berikut <i>Method-method</i> bawaan dari objek <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String</font></p>\r\n                    <image src="images/lesson/tdo_2.jpg">'),
('m05', 'm05s001', 'Definisi Array', ' <h2 style="text-align: center "> Definisi Array </h2>\r\n                    <p>Pada  Bab  sebelumnya,  kita  telah  mendiskusikan  bagaimana  cara  pendeklarasian berbagai macam variabel dengan menggunakan tipe data primitif. Dalam pendeklarasian variabel, kita sering menggunakan sebuah tipe data beserta nama variabel atau <i>identifier</i> yang unik.  \r\n                        Apabila  kita  ingin  menggunakan  variabel  tersebut, kita akan memanggil dengan nama <i>identifier</i>-nya.</p>  \r\n                    \r\n                    <p>Sebagai contoh, kita memiliki tiga variabel dengan tipe data int yang memiliki <i>identifier</i> berbeda untuk tiap variabel.                  \r\n                      <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       int  number1;<br>\r\n                       int  number2; <br>\r\n                       int  number3; <br><br> \r\n                       number1 = 1; <br> \r\n                       number2 = 2; <br>\r\n                       number3 = 3;  <br>\r\n                      </div>\r\n                     <p>Seperti yang dapat Anda perhatikan pada contoh diatas, kode tersebut akan sia-sia karena harus menginisialisasi dan menggunakan setiap variabel padahal sebenarnya variabel-variabel tersebut digunakan untuk tujuan yang sama.  \r\n                         Pada  bahasa pemrograman Java maupun dibahasa pemrograman yang  lain, terdapat sebuah kemampuan  untuk menggunakan satu variabel yang dapat menyimpan beberapa data dan memanipulasinya dengan lebih efektif. Tipe variabel inilah yang disebut sebagai <b>array</b>.</p>\r\n                     \r\n                     <image src="images/lesson/array_m5t004p001.jpg">\r\n                     \r\n                     <p>\r\n                         Sebuah array akan menyimpan beberapa item data yang memiliki tipe data sama didalam sebuah blok memori yang berdekatan yang kemudian dibagai menjadi beberapa ruang. \r\n                         Array adalah sebuah variabel/sebuah lokasi tertentu yang memiliki satu nama sebagai <i>identifier</i>, namun identifier ini dapat menyimpan lebih dari sebuah nilai. \r\n                     </p>'),
('m03', 'm03s004', 'Boolean', '<h2 style="text-align: center "> Tipe <i>Boolean</i> </h2>\r\n                    <p>&nbsp; &nbsp; &nbsp; \r\n                        Tipe <i>boolean</i> adalah tipe yang digunakan untuk menampung nilai logika, yaitu nilai yang hanya memiliki dua buah kemungkinan: benar atau salah. \r\n                        Tipe ini ditandai dengan kata kunci <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">boolean</font>. Dalam bahasa C, nilai <i>boolean</i> direpresentasikan dengan nilai 0 (untuk nilai salah) dan bilangan selain 0 (biasanya bernilai 1- untuk nilai benar). Sedangkan dalam bahasa Java,\r\n                        nilai benar direprentasikan dengan kata kunci <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">true</font> dan nilai salah dengan kata kunci <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">false.</font>\r\n                        Dalam Java, nilai <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">true</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">false</font> tidak dapat dikonversi ke tipe numeric. Nilai <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">true</font> di Java tidak sama dengan 1, dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">false</font> juga tidak sama dengan 0. Hal ini, tentu berbeda dengan konsep tipe Boolean yang terdapat dalam bahasa C\\C++. \r\n                        Ini berarti bahwa kita tidak dapat memasukkan nilai integer kedalam tipe <i>boolean</i>.\r\n                    </p>\r\n                    \r\n                    <p>Perhatikan contoh berikut</p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; boolean b; <br>\r\n                       &nbsp; &nbsp; &nbsp; b = 1; &nbsp; &nbsp; &nbsp;//SALAH <br>\r\n                       &nbsp; &nbsp; &nbsp; b = true; &nbsp; &nbsp; &nbsp;//BENAR <br>\r\n                       &nbsp; &nbsp; &nbsp; b = 0; &nbsp; &nbsp; &nbsp;//SALAH <br>\r\n                       &nbsp; &nbsp; &nbsp; b = false; &nbsp; &nbsp; &nbsp;//BENAR <br>\r\n \r\n                    </div>\r\n                    \r\n                    <P>Tipe <i>boolean</i> adalah tipe yang dikembalikan oleh semua operator relasional (akan kita bahas pada bagian lain), yang selalu dibutuhkan pada saat kita menuliskan ekspresi/kondisi dalam struktur pemilihan dan pengulangan, seperti: <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">if, for</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">while.</font>\r\n                     <br>Berikut ini contoh kode yang akan mendemonstrasikan penggunaan tipe data <i>boolean</i> di dalam sebuah program sederhana.\r\n\r\n                    </p>\r\n    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        class DemoBoolean1 {<br>\r\n                        &nbsp; &nbsp;  public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  boolean b;<br><br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  b = true;<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println(“Nilai b= “+b);<br><br>\r\n                        \r\n                        &nbsp; &nbsp&nbsp; &nbsp; &nbsp;  if (b) {<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println (“Statement ke-1 dieksekusi”);<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  }<br><br>\r\n                        \r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  b = false;<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println(“Nilai b= “+b);<br><br>\r\n                        \r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  if (b) {<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; System.out.println(“Statement ke-2 tidak akan dieksekusi”);<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  }<br><br>\r\n                        \r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  if (!b) {<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; System.out.println(“Statement ke-3 tidak akan dieksekusi”);<br>\r\n                        &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  }<br><br>\r\n                        \r\n                        &nbsp;&nbsp; &nbsp; &nbsp; System.out.println(“5 <= 10 mengembalikan nilai “ + (5 <= 10));<br>\r\n                        &nbsp;&nbsp; &nbsp; &nbsp; System.out.println(“4 > 6 mengembalikan nilai “ + (4 > 6) );<br>\r\n                        &nbsp; &nbsp; &nbsp;  }<br>\r\n                        }\r\n                    </div>\r\n  \r\n                     <P>Program diatas akan memberikan hasil seperti berikut :</p>\r\n                     \r\n                      <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; Nilai b = true <br>\r\n                       &nbsp; &nbsp; &nbsp; Statement ke-1 dieksekusi <br>\r\n                       &nbsp; &nbsp; &nbsp; Nilai b = false <br>\r\n                       &nbsp; &nbsp; &nbsp; Statement ke-3 dieksekusi <br>\r\n                       &nbsp; &nbsp; &nbsp; 5 <= 10 mengembalikan nilai true<br>\r\n                       &nbsp; &nbsp; &nbsp; 4 > 6 mengembalikan nilai false<br>\r\n                    </div>\r\n                     \r\n                     <p>\r\n                         Apabila diperhatikan, tedapat tiga hal menarik dari program diatas. Pertama, dalam Java nilai variabel <i>boolean</i>  yang dipanggil dari <i>method</i> <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">println()</font> akan ditampilkan dengan teks “true” dan “false”. \r\n                         Kedua apabila kita menggunakan tipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">boolean</font> dalam ekspresi pada struktur <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">if</font>, kita hanya perlu menuliskan kode berikut.\r\n                     </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; if (b) { <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; ...      <br>\r\n                       &nbsp; &nbsp; &nbsp; }       <br>\r\n                    </div>\r\n                     \r\n                     <p>\r\n                         Tidak perlu menuliskannya sebagai berikut:\r\n                     </p>\r\n                        \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp;if (b = = true) {    <br>\r\n                       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;...  <br>\r\n                       &nbsp; &nbsp; &nbsp; }  <br>\r\n                    </div>\r\n                     \r\n                     <p>\r\n                         Yang ketiga, ekspresi Boolean yang dipanggil langsung dari<i>method</i> <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">println()</font> juga akan ditampilkan dalam bentuk teks “true” dan “false” sesuai dengan nilai yang dihasilkan dari ekspresi tersebut.\r\n                          Dalam contoh ini, ekspresi <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">(5 <= 10)</font> menghasilkan keluaran “true” dan ekspresi <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">(4 > 6)</font> menghasilkan keluaran “false”.\r\n                     </p>'),
('m03', 'm03s005', 'Casting tipe data primitif ', '       <h2 style="text-align: center ">Casting Tipe data Primitif </h2>\r\n                    <p>\r\n                        <i>Casting</i> antara tipe primitif dapat mengijinkan Anda untuk mengkonversikan sebuah nilai dari  sebuah  tipe  data  tertentu  kepada  tipe  primitif  yang  lain.  Hal  ini  biasanya  terjadi diantara tipe data angka. \r\n                    </p>\r\n                    <p>\r\n                        Ada sebuah tipe data primitif yang tidak dapat kita casting, yaitu tipe data boolean. \r\n                    </p>\r\n                    \r\n                    <p>\r\n                        Sebagai contoh dari <i>typecasting</i> adalah pada saat Anda menyimpan sebuah variabel dengan \r\n                        tipe data integer kepada sebuah variabel dengan tipe data double. Sebagai contoh: \r\n\r\n                    </p>\r\n    \r\n                   <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        int  numInt = 10; <br>\r\n                        double  numDouble = numInt; //implicit cast <br>\r\n                    </div>\r\n  \r\n                     <P>\r\n                        Pada  contoh  ini  dapat kita  lihat  bahwa, walaupun  variabel  yang  dituju  (double) memiliki \r\n                        ukuran  yang  lebih  besar  daripada  nilai  yang  akan  kita  tempatkan  didalamnya,  data tersebut secara implisit dapat kita casting ke tipe data double. \r\n                     </p>\r\n                     \r\n                     <p>\r\n                        Contoh yang  lain adalah apabila kita  ingin untuk melakukan <i>typecasting</i> sebuah  int ke char \r\n                        atau sebaliknya. Sebuah karakter akan dapat digunakan sebagai nilai  integer karena setiap \r\n                        karakter memiliki  sebuah  nilai  numerik  yang merepresentasikan  posisinya  dalam  satu  set \r\n                        karakter. Jika sebuah variable memiliki nilai 65, maka cast (char) i akan menghasilkan nilai \r\n                        ''A''.  Kode  numerik  yang  merepresentasikan  huruf  kapital  A  adalah  65,  berdasarkan  set \r\n                        karakter ASCII, dan Java telah mengadopsi bagian ini untuk mendukung karakter. \r\n                     </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; char valChar = ''A'';  <br>\r\n                       &nbsp; &nbsp; &nbsp; int  valInt = valChar;   <br>\r\n                       &nbsp; &nbsp; &nbsp; System.out.print(<b>valInt</b>); //casting explisit: keluaran 65 \r\n                    </div>\r\n                     \r\n                     <p>\r\n                        Ketika kita mengkonversi data yang bertipe besar ke tipe data yang lebih kecil, kita harus \r\n                        menggunakan <b>explicit cast</b>. Explicit casts mengikuti bentuk sebagai berikut : \r\n                        <br>&nbsp; &nbsp; &nbsp; <b>(dataType)value</b> \r\n                     </p>\r\n                     \r\n                     <p>\r\n                         dimana,\r\n                         <br>&nbsp; &nbsp; &nbsp; <i>dataType</i>, adalah nama dari tipe data yang anda konversi \r\n                         <br>&nbsp; &nbsp; &nbsp; <i>value</i>, adalah pernyataan yang dihasilkan pada nilai dari the source type. \r\n                     </p>\r\n                     \r\n                     <p>\r\n                         Sebagai contoh, \r\n                     </p>\r\n                     \r\n                      <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; double  valDouble = 10.12; <br>\r\n                       &nbsp; &nbsp; &nbsp; int  valInt = <b>(int)valDouble;</b> //men-convert valDouble ke tipe int   <br><br>\r\n                       &nbsp; &nbsp; &nbsp; double x = 10.2; <br>\r\n                       &nbsp; &nbsp; &nbsp; int  y = 2;  <br><br>\r\n                       &nbsp; &nbsp; &nbsp; int  result = <b>(int)(x/y)</b>; //hasil typecast operasi ke int   <br>                  \r\n                    </div>'),
('m05', 'm05s002', 'Deklarasi Array', '  <h2 style="text-align: center "> Deklarasi Array </h2>\r\n                    <p id ="p1">\r\n                        Array  harus  dideklarasikan  seperti  layaknya  sebuah  variabel.  Pada  saat mendeklarasikan array,  anda harus membuat  sebuah daftar dari  tipe data,  yang diikuti oleh sepasang tanda kurung [], lalu diikuti oleh nama <i>identifier</i>-nya. Sebagai contoh,  \r\n                    </p>\r\n                   \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; int []ages; \r\n                    </div>\r\n                    \r\n                    <p>atau  Anda  dapat  menempatkan  sepasang  tanda kurung [] sesudah nama <i>identifier</i>. Sebagai contoh, </p>\r\n                     \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp;  int ages[]; \r\n                    </div>\r\n                    \r\n                     <p id="p3">\r\n                         Setelah pendeklarasian array, kita harus membuat array dan menentukan berapa panjangnya dengan sebuah konstruktor. Proses ini di Java disebut sebagai <i>instantiation</i> (istilah dalam Java yang berarti membuat). Untuk meng-<i>instantiate</i> sebuah obyek, kita membutuhkan sebuah  konstruktor.    \r\n                        Sebagai catatan  bahwa  ukuran  dari  array  tidak  dapat  diubah  setelah  anda menginisialisasinya. Sebagai contoh, \r\n                     </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; //deklarasi <br>\r\n                      &nbsp; &nbsp; &nbsp; int ages[];  <br><br>\r\n                      &nbsp; &nbsp; &nbsp; //instantiate obyek <br>\r\n                      &nbsp; &nbsp; &nbsp; ages = new int[100];\r\n                    </div>\r\n                     \r\n                     <p>\r\n                         atau bisa juga ditulis dengan, \r\n                     </p>\r\n                     \r\n                      <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; //deklarasi dan instantiate obyek  <br>\r\n                      &nbsp; &nbsp; &nbsp; int ages[] = new int[100];  <br><br>\r\n                    </div>\r\n                     <table>\r\n                        <td>Pada  contoh  diatas,  pendeklarasian tersebut  akan  memberitahukan  kepada compiler Java, bahwa identifier ages  akan digunakan  sebagai    nama    array    yang  berisi  data  bertipe  integer,  \r\n                            dan  dilanjutkan dengan  membuat  atau meng-<i>instantiate</i> sebuah array baru  yang terdiri dari 100 elemen. \r\n                            <br><br>Selain    menggunakan    sebuah  pernyataan <i>new</i> untuk  meng-instantiate array, Anda juga dapat  mendeklarasikan, membangun, kemudian  memberikan  sebuah  nilai  pada array sekaligus dalam sebuah pernyataan.\r\n                        </td>\r\n                        <td><image src="images/lesson/array_2.jpg">\r\n                        </td>\r\n                     </table>\r\n\r\n                     <p>\r\n                         Sebagai contoh, \r\n                     </p>\r\n                     \r\n                       <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;  //membuat sebuah array yang berisi variabel-variabel <br>\r\n                        &nbsp; &nbsp; &nbsp;  //boolean pada sebuah identifier. <br>\r\n                        &nbsp; &nbsp; &nbsp;  //Array ini terdiri dari 4 elemen yang diinisilisasikan   <br>\r\n                        &nbsp; &nbsp; &nbsp;  //sebagai value {true,false,true,false}    <br>\r\n                        &nbsp; &nbsp; &nbsp;  boolean results[] ={ true, false, true, false };   <br><br>\r\n                        &nbsp; &nbsp; &nbsp; //Membuat sebuah array yang terdiri dari penginisialisasian      <br>\r\n                        &nbsp; &nbsp; &nbsp;  //4variabel double bagi value {100,90,80,75}   <br>\r\n                        &nbsp; &nbsp; &nbsp;  double []grades = {100, 90, 80, 75};    <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  //Membuat sebuah array String dengan identifier days. <br>\r\n                        &nbsp; &nbsp; &nbsp;  //Array ini terdiri dari 7 elemen.<br>\r\n                        &nbsp; &nbsp; &nbsp;  String days[] = { “Mon”,“Tue”,“Wed”,“Thu”,“Fri”,“Sat”,“Sun”};           \r\n                    </div>'),
('m05', 'm05s003', 'Pengaksesan sebuah element array', '<h2 style="text-align: center "> Pengaksesan Sebuah Element Array</h2>\r\n                    <p> \r\n                        Untuk mengakses sebuah elemen dalam array, atau mengakses sebagian dari array, Anda harus menggunakan sebuah angka atau yang disebut sebagai  <b>indeks</b> atau subscript.  \r\n                    </p>\r\n                    <p> \r\n                      Pada  saat memasukkan nilai ke dalam array, <b>sebuah  nomor  indeks  atau  subscript</b> telah diberikan kepada tiap anggota array, sehingga program dan programmer dapat  mengakses  setiap  nilai  pada  array  apabila  dibutuhkan.  \r\n                      Nilai  indeks  <b>selalu dalam  tipe integer, dimulai  dari angka nol dan dilanjutkan ke angka berikutnya sampai  akhir array</b>.  Sebagai  catatan  bahwa  indeks  didalam  array  dimulai  dari <b>0 sampai dengan (ukuranArray-1)</b>. \r\n                    </p>\r\n                    \r\n                    <p>Sebagai contoh, pada array yang kita deklarasikan tadi, kita mempunyai,  \r\n                    </p>\r\n                   \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; //memberikan nilai 10 kepada elemen pertama array <br>\r\n                       &nbsp; &nbsp; &nbsp; ages[0] = 10;  <br><br>\r\n                       &nbsp; &nbsp; &nbsp; //mencetak elemen array yang terakhir  <br>\r\n                       &nbsp; &nbsp; &nbsp; System.out.print(ages[99]);  <br>\r\n                       \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        Perlu diperhatikan bahwa sekali  array dideklarasikan dan dikonstruksi, nilai yang disimpan dalam setiap anggota array akan diinisialisasi sebagai nol.   \r\n                        Oleh karena itu, apabila anda menggunakan tipe data seperti String, array tidak akan diinisalisasi menjadi string kosong “”. Untuk itu Anda tetap harus membuat String array secara eksplisit. \r\n                    </p>\r\n                    <p>\r\n                        Berikut ini adalah contoh kode untuk  mencetak seluruh elemen didalam array. Dalam contoh ini digunakanlah pernyataan <i>for loop</i>, sehingga kode kita menjadi lebih pendek. \r\n                    </p>\r\n                     \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;public class ArraySample{  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;for( int i=0; i<100; i++ ){ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.print( ages[i] ); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;}<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; }<br>\r\n                        &nbsp; &nbsp; &nbsp;}<br><br>\r\n                    </div>\r\n                    \r\n                     <image src="images/lesson/array_3.jpg">'),
('m05', 'm05s004', 'Panjang array', '  <h2 style="text-align: center "> Panjang Array</h2>\r\n                    <p id ="p1"> \r\n                        Untuk  mengetahui  berapa  banyak  elemen  didalam  sebuah  array,  Anda  dapat menggunakan  atribut <b>length</b> dari array. Atribut  ini  akan mengembalikan  ukuran  dari array itu sendiri. \r\n                        Sebagai contoh, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; arrayName.length \r\n                    </div>\r\n                    \r\n                    <p>Pada contoh sebelumnya, kita dapat menuliskannya kembali seperti berikut ini, </p>\r\n                      \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp;public class ArraySample {  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;public static void main (String [] args) {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; int[] ages = new int[100];  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; for( int i=0; i<<b>ages.length;</b> i++ ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.print( ages[i] ); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;}<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;}<br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>\r\n                    \r\n                     <image src="images/lesson/array_4a.jpg">'),
('m05', 'm05s005', 'Array Multidimensi', '   <h2 style="text-align: center ">Array Multidimensi</h2>\r\n                    <p id ="p1"> \r\n                     Array  multidimensi  diimplementasikan  sebagai  array  yang  terletak  di dalam  array.\r\n                     Array  multidimensi dideklarasikan  dengan menambahkan  jumlah  tanda  kurung  setelah nama array. Sebagai contoh, \r\n                    </p>\r\n                      \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; // Elemen 512 x 128 dari integer array <br>\r\n                        &nbsp; &nbsp; &nbsp; int[][] twoD = new int[512][128]; <br><br>\r\n                        &nbsp; &nbsp; &nbsp;// karakter array 8 x 16 x 24   <br>\r\n                        &nbsp; &nbsp; &nbsp;char[][][] threeD = new char[8][16][24]; <br> <br>\r\n                        &nbsp; &nbsp; &nbsp;// String array 4 baris x 2 kolom <br>\r\n                        &nbsp; &nbsp; &nbsp; String[][] dogs = {{ "terry", "brown" },{ "Kristin", "white" }, <br>\r\n                        &nbsp; &nbsp; &nbsp; { "toby", "gray"},{ "fido", "black"} }; <br>\r\n                    </div>\r\n                    \r\n                    <p>    \r\n                        Untuk mengakses sebuah elemen didalam array multidimensi, sama saja  \r\n                        dengan mengakses array satu dimensi. Misalnya saja, untuk mengakses elemen \r\n                        pertama dari baris pertama didalam array dogs, kita akan menulis, \r\n                    </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                         &nbsp; &nbsp; &nbsp; System.out.print( dogs[0][0] ); \r\n                    </div>\r\n                    \r\n                    <p>                         \r\n                        Kode diatas akan mencetak String “terry” di layar. \r\n                    </p>'),
('m06', 'm06s001', 'Logika dan Aljabar Bool', ' <h2 style="text-align: center">Logika dan Aljabar Boole</h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                       Dikenal banyak aljabar seperti aljabar biasa, alajabar himpunan, aljabar vektor, aljabar group, aljabar boole, dan lain-lain.\r\n                       Dalam setiap aljabar memiliki postulat, teorema, dan operasi sendiri - sendiri. Aljbar Boole diciptakan pada abad 19 oleh George Boole \r\n                       sebagai suatu sistem untuk menganalisis secara sistematis mengenai logika. Aljabar boole didasarkan pada pernyatan benar atau salah. \r\n                    </p>   \r\n                    \r\n                    <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Aljabar boole digunakan untuk menyatakan pengaruh berbagai rangkaian digital pada masukan-masukan logika, dan untuk memanipulasi\r\n                        variabel logika dalam menentukn cara terbaik pada pelaksanaan (kinerja) fungsi rangkaian tertentu. Oleh kaena hanya ada dua nilai yang mungkin,\r\n                        aljabar boole lebih cocok digunakan untuk rangkaian digital dibandingkan dengan aljabar lain.                      \r\n                    </p>\r\n                    <p>Dalam aljabar boole hanya mengenal 3(tiga) operasi dasar, yaitu: </p>\r\n                    <ol>\r\n                        <li>Penjumlahan logika atau OR dengan simbol operasi ''+'' (tanda plus)</li>\r\n                        <li>Perkalian logika atau AND dengan simbol operasi ''.'' (tanda titik) atau tidak ada tanda sama sekali</li>\r\n                        <li>Komplementasi atau NOT (atau inversi) dengan simbol operasi ''-'' (garis diatas variabel)</li>\r\n                    </ol>\r\n                    \r\n                    <p>\r\n                        Aturan operasi OR, AND dan NOT pada dua tingkat logika 0 dan 1 dapat dirangkumkan sebagai berikut:\r\n                    </p>\r\n                    \r\n                    <table border="0">\r\n                        <tr>\r\n                            <td width="200"> OR</td>\r\n                            <td width="200">AND</td>\r\n                            <td width="200">NOT</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>0 + 0 = 0</td>\r\n                            <td>0 . 0 = 0</td>\r\n                            <td><image src="images/lesson/logika_1.jpg"></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>0 + 1 = 1</td>\r\n                            <td>0 . 1 = 0</td>\r\n                            <td><image src="images/lesson/logika_1.jpg"></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>1 + 0 = 1</td>\r\n                            <td>1 . 0 = 0</td>\r\n                            <td>&nbsp;</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>1 + 1 = 1</td>\r\n                            <td>1 . 1 = 1</td>\r\n                            <td>&nbsp;</td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <br><br>\r\n                    <b>Teorema dalam Aljabar Bool</b>\r\n                    <p>Teorema dalam aljabar boole meliputi</p>\r\n                    <image src="images/lesson/logika_3.jpg">\r\n                    \r\n                    <p>Pada teorema 1-8, variabel A sebernarnya dapat menyajikan pernyataan yang berisi lebih dari satu variabel.\r\n                        Sebagai contoh bentuk yang lebih sederhana dari pernyataan XY̅  + XY̅ dapat ditentukan dengan memisalkan\r\n                        XY̅=A Kemudian diperoleh A + A = A. Dengan demikian XY̅ + XY̅ = XY̅. Teorema berikutnya mencakup\r\n                        lebih dari satu variabel, yaitu :\r\n                    </p>\r\n                    <image src="images/lesson/logika_4.jpg">\r\n                    \r\n                    <p>Masih ada dua teorema dalam aljabar boole yang sangat penting yang disumbangkan oleh matematikawan De Morgan .\r\n                    Kedua teorema de Morgan tersebut adalah :\r\n                    </p>\r\n                    <image src="images/lesson/logika_5.jpg">'),
('m07', 'm07s001', 'Penggunaan Operator Aritmatika', '<h2 style="text-align: center ">Operator Aritmatika</h2>\r\n                    <p id ="p1"> \r\n                        Berikut  ini adalah dasar operator aritmatika yang dapat digunakan untuk membuat suatu program  Java, \r\n                    </p>\r\n                      \r\n                    <image style="margin-left: 30px" src="images/lesson/OPArit_1.jpg" >\r\n                    \r\n                    <p>\r\n                        Berikut ini adalah contoh program dalam penggunaan operator-operator ini : \r\n                    </p>\r\n                    \r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class aritmatikaDemo  { <br>\r\n                        &nbsp; &nbsp; &nbsp;public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;//sedikit angka <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;int i = 37;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;int j = 42;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;double x = 27.475;         <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;double y = 7.22;        <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Variable values...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    i = " + i);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    j = " + j);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    x = " + x);        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    y = " + y);<br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Adding...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    x + y = " + (x + y)); //penjumlahan angka<br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Subtracting...");  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    i - j = " + (i - j)); //Pengurangan angka<br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Multiplying...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    x * y = " + (x * y));    //perkalian angka  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Dividing..."); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    i / j = " + (i / j));    //pembagian angka  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("Computing the remainder..."); <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.println("    i % j = " + (i % j)); //menghitung hasil <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;//modulus dari pembagian <br>\r\n                        &nbsp; &nbsp; &nbsp;} <br>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <p>    \r\n                      Berikut ini adalah output program, \r\n                    </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                         &nbsp; &nbsp; &nbsp; Variable values...  <br>\r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i = 37 <br>  \r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; j = 42 <br>\r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; x = 27.475 <br>\r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; y = 7.22  <br>\r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i + j = 79 <br>\r\n                         &nbsp; &nbsp; &nbsp; Adding... <br>\r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  x + y = 34.695<br>   \r\n                         &nbsp; &nbsp; &nbsp; Subtracting...   <br> \r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  i - j = -5   <br> \r\n                         &nbsp; &nbsp; &nbsp; Multiplying...   <br> \r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;    x * y = 198.37  <br> \r\n                         &nbsp; &nbsp; &nbsp; Dividing...  <br> \r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;     i / j = 0    <br> \r\n                         &nbsp; &nbsp; &nbsp; Computing the remainder...  <br> \r\n                         &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;        i % j = 37    \r\n                    </div>\r\n                    \r\n                    <p>                         \r\n                        <b>Catatan:</b>  Ketika  integer  dan  floating-point  number  digunakan  sebagai  operand  untuk \r\n                        operasi aritmatika  tunggal, hasilnya berupa  floating point. Integer adalah converter secara \r\n                        implisit ke bentuk angka floating-point sebelum operasi berperan mengambil tempat. \r\n                    </p>'),
('m08', 'm08s001', 'Penggunaan Operator Increament dan Decreament', '<h2 style="text-align: center ">Operator <i>Increament</i> dan <i>Decreament</i></h2>\r\n                    <p> \r\n                        Dari sisi operator dasar aritmatika, Java juga terdiri atas operator <i>unary increment </i>(++) \r\n                        dan operator <i>unary decrement</i> (--). operator <i>increment</i> dan <i>decrement</i> menambah dan \r\n                        mengurangi nilai yang tersimpan dalam bentuk variabel angka terhadap nilai 1. \r\n \r\n                    </p>\r\n                   \r\n                    <p> \r\n                        Sebagai contoh, pernyataan,  \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; count = count + 1;  //increment nilai count dengan nilai 1\r\n                    </div>\r\n                      \r\n                    <p> \r\n                       pernyataan tersebut sama dengan, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; count++; <br><br>\r\n                    </div>\r\n                      \r\n                    <image style="margin-left: 30px" src="images/lesson/OPincNdec_1.jpg" >\r\n                    \r\n                    <p>\r\n                        Operator increment dan decrement dapat ditempatkan sebelum atau sesudah operand. \r\n                    </p>\r\n                    <p>\r\n                       Ketika  digunakan  sebelum  operand,  akan  menyebabkan  variabel  diincrement  atau \r\n                        didecrement dengan nilai 1, dan kemudian nilai baru digunakan dalam pernyataan dimana \r\n                        dia ditambahkan. Sebagai contoh, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                         &nbsp; &nbsp; &nbsp; int i = 10,  <br>\r\n                         &nbsp; &nbsp; &nbsp; int j = 3;  <br>  \r\n                         &nbsp; &nbsp; &nbsp; int k = 0; <br><br>\r\n                         &nbsp; &nbsp; &nbsp; k = ++j + i; //akan menghasilkan k = 4+10 = 14 \r\n            \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        Ketika operator increment dan decrement ditempatkan setelah operand, nilai variabel yang \r\n                        lama akan   digunakan  lebih dulu dioperasikan  lebih dulu  terhadap pernyataan dimana dia \r\n                        ditambahkan. Sebagai contoh, \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                         &nbsp; &nbsp; &nbsp; int i = 10,  <br>\r\n                         &nbsp; &nbsp; &nbsp; int j = 3;  <br>  \r\n                         &nbsp; &nbsp; &nbsp; int k = 0; <br><br>\r\n                         &nbsp; &nbsp; &nbsp; k = j++ + i; //akan menghasilkan k = 3+10 = 13 <br><br>           \r\n                    </div>\r\n                    \r\n                    <image  src="images/lesson/OPincNdec_2.jpg" > ');
INSERT INTO `lesson_sub` (`idlesson`, `idsublesson`, `sublesson`, `lesson`) VALUES
('m09', 'm09s001', 'Penggunaan Operator Relasional', '<h2 style="text-align: center ">Operator Relasional</h2>\r\n                    <p> \r\n                        Operator Relasi membandingkan dua nilai dan menentukan keterhubungan diantara nilai-\r\n                        nilai tersebut. Hasil keluarannya berupa <b>nilai boolean</b> yaitu true atau false. \r\n \r\n                    </p>\r\n                   \r\n                    <image style="margin-left: 20px" src="images/lesson/OPrelasional_1.jpg" >\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class RelasiDemo  {<br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     //beberapa nilai   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int i = 37;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int j = 42;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int k = 42;         <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Variable values...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    i = " + i);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    j = " + j);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k = " + k);        <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Lebih besar dari...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    j > i = " + (j > i)); //true  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k > j = " + (k > j)); //false  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Lebih besar dari atau sama dengan...");    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    i >= j = " + (i >= j)); //false     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k >= j = " + (k >= j)); //true   <br><br>   \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Lebih kecil dari...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    i < j = " + (i < j)); //true   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k < j = " + (k < j)); //false    <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Lebih kecil dari atau sama dengan...");    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    j <= i = " + (j <= i)); //false    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k <= j = " + (k <= j)); //true   <br><br>\r\n                        \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Sama dengan...");  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    i == j = " + (i == j)); //false <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k == j = " + (k == j)); //true  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("Tidak sama dengan...");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    i != j = " + (i != j)); //true   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println("    k != j = " + (k != j)); //false  <br> \r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                \r\n                    <p> \r\n                        Berikut adalah hasil keluaran dari program ini :  \r\n                    </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; Nilai variabel...   <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  i = 37 <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  j = 42  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k = 42 <br>\r\n                       &nbsp; &nbsp; &nbsp; Lebih besar dari...    <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  j > i = true <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k > j = false  <br>\r\n                       &nbsp; &nbsp; &nbsp; Lebih besar dari atau sama dengan...    <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  i >= j = false  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k >= j = true  <br>\r\n                       &nbsp; &nbsp; &nbsp; Lebih kecil dari...      <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  i < j = true  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k < j = false  <br>\r\n                       &nbsp; &nbsp; &nbsp; Lebih kecil dari atau sama dengan...  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  j <= i = false   <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k <= j = true <br>\r\n                       &nbsp; &nbsp; &nbsp; Sama dengan...  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  i == j = false <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k == j = true <br>\r\n                       &nbsp; &nbsp; &nbsp; Tidak sama dengan...  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  i != j = true  <br>\r\n                       &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  k != j = false \r\n                    </div>'),
('m10', 'm10s001', '&& (logika AND) dan & (boolean logika AND) ', '<h2 style="text-align: center ">&& (logika AND) dan & (boolean logika AND) </h2>\r\n                    <p> \r\n                       Berikut ini adalah tabel kebenaran untuk && dan &, \r\n                    </p>\r\n                   \r\n                    <image style="margin-left: 50px" src="images/lesson/OPLogika_1.jpg" >\r\n                   \r\n                    <p>\r\n                        Perbedaan dasar antara operator && dan & adalah bahwa && mensupports  <b>short-circuit \r\n                        evaluations</b>  (atau  evaluasi  perbagian), sementara operator & tidak. Apa arti dari \r\n                        pernyataan tersebut? \r\n                    </p>\r\n                    \r\n                    <p>Diberikan suatu pernyataan, </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; exp1 && exp2 \r\n                    </div>\r\n                \r\n                    <p> \r\n                        && akan mengevaluasi pernyataan exp1, dan segera mengembalikan nilai false dan \r\n                        menyatakan bahwa exp1 bernilai false. Jika exp1 bernilai false, operator tidak akan pernah \r\n                        mengevaluasi exp2 karena hasil operasi operator akan menjadi false tanpa memperhatikan \r\n                        nilai dari exp2. Sebaliknya, operator & selalu mengevaluasi kedua nilai dari exp1 dan exp2 \r\n                        sebelum mengembalikan suatu nilai jawaban. \r\n                    </p>\r\n                    \r\n                    <p>Berikut ini adalah suatu contoh source code yang menggunakan logika dan boolean AND, </p>\r\n                    \r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class TestAND   {<br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int i = 0;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int j = 10;       <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     boolean test= false;         <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     //demonstrasi &&    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     test = (i > 10) && (j++ > 9);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(i);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(j);        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(test);    <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     //demonstrasi &   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     test = (i > 10) & (j++ > 9);     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(i);<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(j);    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(test);   <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                        \r\n                    <p>Output dari contoh program diatas adalah : </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; 0  <br>\r\n                       &nbsp; &nbsp; &nbsp; 10 <br>\r\n                       &nbsp; &nbsp; &nbsp; false <br>\r\n                       &nbsp; &nbsp; &nbsp; 0 <br>\r\n                       &nbsp; &nbsp; &nbsp; 11  <br>\r\n                       &nbsp; &nbsp; &nbsp; false <br> \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        <b>Catatan,</b>  bahwa  j++  pada  baris  yang  mengandung  operator && tidak dievaluasi sejak \r\n                        pernyataan pertama (i>10) yaitu telah bernilai sama dengan false.\r\n                    </p>'),
('m10', 'm10s002', ' || (logika OR) dan | (boolean logika inclusive OR) ', '<h2 style="text-align: center "> || (logika OR) dan | (boolean logika inclusive OR) </h2>\r\n                    <p> \r\n                       Berikut ini adalah tabel kebenaran untuk || dan |, \r\n                    </p>\r\n                   \r\n                    <image style="margin-left: 30px" src="images/lesson/OPLogika_2.jpg" >\r\n                   \r\n                    <p>\r\n                        Perbedaan  dasar  antara  operator  ||  dan  |  adalah  bahwa  ||  mendukung  short-circuit \r\n                        evaluations  (atau  proses  evaluasi  sebagian),  sementara  |  tidak.  Apa  maksud  dari \r\n                        pernyataan tersebut? \r\n                    </p>\r\n                    \r\n                    <p>diberikan suatu pernyataan, </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; exp1 || exp2 \r\n                    </div>\r\n                \r\n                    <p> \r\n                        ||  akan  mengevaluasi  pernyataan  exp1,  dan  segera  mengembalikan  nilai  true  dan \r\n                        menyatakan bahwa exp1 bernilai  true. Jika exp1 bernilai  true, operator  tidak akan pernah \r\n                        mengevaluasi  exp2  karena  hasil  dari  operasi  operator  akan  bernilai  true  tanpa \r\n                        memperhatikan nilai dari exp2. Sebaliknya,operator  | selalu mengevaluasi kedua nilai dari \r\n                        exp1 and exp2 sebelum mengembalikan suatu jawaban suatu nilai. \r\n                    </p>\r\n                    \r\n                    <p>Berikut ini sebuah contoh source code  yang menggunakan operator logika dan boolean OR, </p>\r\n                    \r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class TestOR   {<br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int i = 0;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     int j = 10;       <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     boolean test= false;         <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     //demonstrasi ||    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     test = (i > 10) || (j++ > 9);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(i);      <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(j);        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(test);    <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     //demonstrasi |  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     test = (i > 10) || (j++ > 9);     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(i);<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(j);    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;     System.out.println(test);   <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                        \r\n                    <p>Output dari contoh program diatas adalah : </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; 0  <br>\r\n                       &nbsp; &nbsp; &nbsp; 10 <br>\r\n                       &nbsp; &nbsp; &nbsp; true <br>\r\n                       &nbsp; &nbsp; &nbsp; 0 <br>\r\n                       &nbsp; &nbsp; &nbsp; 11  <br>\r\n                       &nbsp; &nbsp; &nbsp; true <br> \r\n                    </div>\r\n                    \r\n                    <p>\r\n                        <b>Catatan,</b>  bahwa j++ pada baris yang terdiri atas operator || tidak dievaluasi sejak \r\n                        pernyataan pertama  (i<10) yaitu telah bernilai sama dengan true. \r\n                    </p>'),
('m10', 'm10s003', ' ^ (boolean logika ExclusiveOR )', '<h2 style="text-align: center ">  ^ (boolean logika ExclusiveOR )  </h2>\r\n                    <p> \r\n                       Berikut ini adalah tabel kebenaran untuk ^, \r\n                    </p>\r\n                   \r\n                    <image style="margin-left: 50px" src="images/lesson/OPLogika_3.jpg" >\r\n                   \r\n                    <p>\r\n                        Hasil operasi operator exclusive OR adalah TRUE, jika dan hanya jika satu operand bernilai \r\n                        TRUE dan yang lain bernilai False. Catatan jika kedua operand harus selalu dievaluasi untuk \r\n                        menjumlahkan hasil dari suatu exclusive OR. \r\n                    </p>\r\n                    \r\n                    <p>Berikut ini adalah contoh source code yang menggunakan operator logika exclusive OR,</p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class TestXOR { <br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    boolean val1 = true;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    boolean val2 = true;  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(val1 ^ val2);      <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val1 = false;  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val2 = true;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(val1 ^ val2);   <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val1 = false;         <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val2 = false;    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(val1 ^ val2);  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val1 = true;        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    val2 = false;   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(val1 ^ val2);  <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                        \r\n                    <p>Output dari contoh program diatas adalah : </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; false <br>\r\n                       &nbsp; &nbsp; &nbsp; true <br>\r\n                       &nbsp; &nbsp; &nbsp; false <br>\r\n                       &nbsp; &nbsp; &nbsp; true <br> \r\n                    </div>'),
('m10', 'm10s004', '! (logika NOT) ', '      <h2 style="text-align: center ">  ! (logika NOT)   </h2>\r\n                    <p> \r\n                       Logika NOT digunakan dalam satu argumen, dimana argumen tersebut dapat menjadi suatu \r\n                        pernyataan, variabel atau konstanta. Berikut ini adalah tabel kebenaran untuk operator not!, \r\n                    </p>\r\n                   \r\n                    <image style="margin-left: 50px" src="images/lesson/OPLogika_4.jpg" >\r\n                   \r\n                    \r\n                    <p>Berikut ini adalah contoh source code yang menggunakan operator logika NOT, </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class  TestNOT  { <br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    boolean val1 = true;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    boolean val2 = false;   <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(!val1);      <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.println(!val2);  <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                        \r\n                    <p>Hasil keluaran program adalah sebagai berikut,  </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; true <br>\r\n                       &nbsp; &nbsp; &nbsp; false <br>\r\n                    </div>'),
('m10', 'm10s005', 'Operator Kondisi(?:) ', ' <h2 style="text-align: center ">  Operator Kondisi(?:)    </h2>\r\n                    <p> \r\n                        Operator    kondisi <b>?:</b>  adalah  operator  ternary.  Berarti  bahwa  operator  ini membawa  tiga \r\n                        argumen  yang  membentuk  suatu  ekspresi  bersyarat.  Struktur  pernyataan  yang \r\n                        menggunakan  operator kondisi adalah, \r\n                    </p>\r\n                   \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                      &nbsp; &nbsp; &nbsp; exp1?exp2:exp3 \r\n                    </div>\r\n                    <p>\r\n                        Dimana nilai exp1 adalah suatu pernyataan boolean yang memiliki hasil yang salah satunya \r\n                        harus berupa nilai true atau false.  \r\n                    </p>\r\n                    <p>\r\n                        Jika exp1 bernilai  true, exp2 merupakan hasil operasi.  Jika bernilai  false,  kemudian exp3 \r\n                        merupakan hasil operasinya. \r\n                    </p>\r\n                    <p>\r\n                        JSebagai contoh, diberikan code sebagai berikut, \r\n                    </p>\r\n                             \r\n                    <p>Berikut ini adalah contoh source code yang menggunakan operator logika NOT, </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class ConditionalOperator   { <br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   String   status = "";        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   int  grade = 80;    <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   //mendapatkan status pelajar       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   status = (grade >= 60)?"Passed":"Fail"; <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   //print status        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   System.out.println( status ); <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                        \r\n                    <p>Hasil keluaran dari program ini akan menjadi,  </p>\r\n                    \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; Passed  <br>\r\n                    </div>\r\n                    \r\n                    <p>Berikut ini adalah flowchart yang menggambarkan bagaimana  operator ?: bekerja,</p>\r\n                    <image style="margin-left: 30px" src="images/lesson/OPLogika_5.jpg" >\r\n                    \r\n                    <p>Berikut ini adalah program lain yang menggunakan operator ?: , </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        public class ConditionalOperator   { <br>\r\n                        &nbsp; &nbsp; &nbsp;   public static void main(String[] args)  {<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   int   score = 0;     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   char  answer = ''a'';  <br><br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   score = (answer == ''a'') ? 10 : 0;        <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   System.out.println("Score = " + score );<br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <p>Hasil keluaran program adalah, </p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                       &nbsp; &nbsp; &nbsp; Score = 10  <br>\r\n                    </div>'),
('m11', 'm11s001', 'Penggunaan Operator Predence', ' <h2 style="text-align: center ">  Operator Precedence  </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                       Operator  precedence  didefinisikan  sebagai  perintah  yang  dilakukan  compiler  ketika \r\n                        melakukan evaluasi terhadap operator, untuk mengajukan perintah dengan hasil yang tidak \r\n                        ambigu/ hasil yag jelas. \r\n                    </p>\r\n                    \r\n                    <image style="margin-left: 50px;" src="images/lesson/OPpredence_1.jpg">\r\n                    \r\n                    <p >Diberikan pernyataan yang membingungkan,    </p> \r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; 6%2*5+4/2+88-10\r\n                    </div>\r\n                    \r\n                    <p>Kita dapat menuliskan kembali pernyataan diatas dan menambahkan beberapa tanda kurung terhadap operator precedence, </p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp; ((6%2)*5)+(4/2)+88-10;\r\n                    </div>\r\n                    \r\n                    <image src="images/lesson/OPpredence_2.jpg">'),
('m12', 'm12s001', 'While Loop', '<h2 style="text-align: center ">Pernyataan while loop</h2>\r\n                    <p> \r\n                      Pernyataan <i>while loop</i> adalah pernyataan atau blok pernyataan yang diulang-ulang \r\n                        sampai mencapai kondisi yang cocok. \r\n                    </p>                  \r\n                    <p>Bentuk pernyataan while, </p>                   \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;   while( boolean_expression ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement1;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                    </div>\r\n                    <p>Pernyataan di dalam <i>while loop</i> akan dieksekusi berulang-ulang selama kondisi \r\n                        <i>boolean_expression</i> bernilai benar (<i>true</i>). </p>\r\n                    \r\n                    <p>Contoh, pada kode dibawah ini, </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;int i = 4;  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   while ( i > 0 ){ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    System.out.print(i);  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   i--; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   }<br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>\r\n                        \r\n                    <p>\r\n                        Contoh  diatas akan mencetak angka 4321 pada layar. Perlu dicatat jika  bagian  <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i--;</font>\r\n                        dihilangkan, akan menghasilkan  pengulangan  yang  terus menerus <b>(infinite loop)</b>. \r\n                        Sehingga, ketika menggunakan <i>while loop</i> atau bentuk pengulangan yang lain,  \r\n                        pastikan Anda memberikan pernyataan yang membuat pengulangan berhenti pada suatu kondisi. \r\n                    </p>'),
('m12', 'm12s002', 'Do - While Loop', ' <h2 style="text-align: center ">do-while loop</h2>\r\n                    <p> \r\n                        <i>Do-while loop</i> mirip dengan <i>while-loop</i>. Pernyataan di dalam <i>do-while loop</i>  \r\n                        akan dieksekusi beberapa kali selama kondisi bernilai benar (<i>true</i>). \r\n                    </p>    \r\n                    <p> \r\n                        Perbedaan antara <i>while</i> dan <i>do-while loop</i> adalah dimana pernyataan di dalam <i>do-while \r\n                        loop</i> akan dieksekusi sedikitnya <b>satu kali</b>. \r\n                    </p>    \r\n                    <p>Bentuk pernyataan do-while, </p>\r\n                  \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;   do{   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement1;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }while( boolean_expression ); <br>\r\n                    </div>\r\n                    \r\n                    <p>Pernyataan di dalam <i>do-while loop</i> akan dieksekusi pertama kali, dan akan dievaluasi \r\n                        kondisi dari <i>boolean_expression</i>. Jika nilai pada <i>boolean_expression</i> tersebut bernilai \r\n                        <i>true</i>, pernyataan di dalam <i>do-while loop</i> akan dieksekusi lagi. </p>\r\n                    \r\n                    <p>Berikut ini contoh do-while loop: </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        &nbsp; &nbsp; &nbsp;int x = 0;   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;do { <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;System.out.print(x);  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;x++; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;} while (x<10); <br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>\r\n                    <p> Contoh ini akan memberikan output 0123456789 pada layar.</p>\r\n                     \r\n                     <image  src="images/lesson/looping_1.jpg" >'),
('m12', 'm12s003', 'For Loop', '  <h2 style="text-align: center ">for loop</h2>\r\n                    <p> \r\n                        Pernyataan <i>for loop</i> memiliki kondisi hampir mirip seperti struktur pengulangan \r\n                        sebelumnya yaitu melakukan pengulangan untuk mengeksekusi kode yang sama sebanyak jumlah yang telah ditentukan.\r\n                    </p>     \r\n                    <p>Bentuk dari for loop, </p>\r\n                  \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;   for (InitializationExpression; LoopCondition; StepExpression){    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement1;       <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>\r\n                    </div>\r\n                    \r\n                    <p>dimana, <br>\r\n                        <b>InitializationExpression</b> – inisialisasi dari variabel loop. <br>\r\n                        <b>LoopCondition</b>  - membandingkan variabel loop pada nilai batas tertentu <br>\r\n                        <b>StepExpression</b>  - melakukan update pada variabel loop. \r\n                    </p>\r\n                    \r\n                    <p> Berikut ini adalah contoh dari for loop, </p>\r\n                    \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n                        int i;    <br>\r\n                        &nbsp; &nbsp; &nbsp;  for( i = 0; i < 10; i++ ){ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   System.out.print(i);   <br>\r\n                        &nbsp; &nbsp; &nbsp;   } while (x<10); <br>\r\n                        }\r\n                    </div>\r\n                    <p> Pada  contoh  ini,  pernyataan  i=0  merupakan  inisialisasi  dari  variabel.  Selanjutnya, \r\n                        kondisi i<10    diperiksa.    Jika    kondisi    bernilai    true,    pernyataan  di   dalam    for    loop  \r\n                        dieksekusi.  Kemudian,    ekspresi  i++    dieksekusi,  lalu  akan  kembali  pada  bagian \r\n                        pemeriksaan  terhadap  kondisi  i<10  lagi.    Kondisi    ini  akan  dilakukan  berulang-ulang \r\n                        sampai mencapai nilai yang salah (false). \r\n                    </p>'),
('m13', 'm13s001', 'Statement IF', '<h2 style="text-align: center ">  Statement if   </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Pernyataan <i>if</i> akan menentukan sebuah pernyataan (atau blok kode) yang akan eksekusi \r\n                        jika dan hanya jika persyaratan bernilai benar (<i>true</i>). \r\n                    </p>\r\n                    \r\n                    <p>Bentuk dari pernyataan if, </p>\r\n                                       \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;   if( boolean_expression ) {  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement;    <br>\r\n                    </div>\r\n                    <p>atau</p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;  if( boolean_expression ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement1;    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br><br>\r\n                    </div>    \r\n                    \r\n                    <p>dimana, <br><i>boolean_expression</i> adalah sebuah penyataan logika (<i>true/false</i>) atau variabel \r\n                        bertipe <i>boolean</i>. \r\n                    </p>\r\n                    \r\n                    <image style="margin-left: 30px;" src="images/lesson/if_1.jpg">\r\n                    <p> Berikut ini adalah potongan kode dari pernyataan if: </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; int grade = 68;  <br><br>\r\n                        &nbsp; &nbsp; &nbsp; if( grade > 60 ) System.out.println("Congratulations!");  \r\n                    </div>    \r\n                    <p>atau</p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; int grade = 68;   <br><br>\r\n                         &nbsp; &nbsp; &nbsp;  if( grade > 60 ){   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("Congratulations!");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  System.out.println("You passed!"); <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>  <br>\r\n                    </div>  \r\n                    \r\n                     <image src="images/lesson/if_2.jpg">'),
('m13', 'm13s002', 'Statement IF - Else', ' <h2 style="text-align: center "> Statement If - Else   </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Pernyataan  <i>if-else</i> digunakan  apabila  kita  ingin  mengeksekusi  beberapa  pernyataan \r\n                        dengan kondisi true dan pernyataan yang lain dengan kondisi <i>false</i>. \r\n                    </p>\r\n\r\n                    <p>Bentuk statement if-else,  </p>\r\n\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;  if( boolean_expression ) <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement;    <br>\r\n                        &nbsp; &nbsp; &nbsp;  else <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement;    <br>\r\n                    </div>\r\n                    <p>dapat juga ditulis seperti, </p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;  if( boolean_expression ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement1;    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }else { <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement1;    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    statement2; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;    . . . <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br><br>\r\n                    </div>    \r\n\r\n                    <p>  Berikut ini contoh code statement if-else, </p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; int grade = 68;  <br><br>\r\n                        &nbsp; &nbsp; &nbsp; if( grade > 60 ) System.out.println("Congratulations!");  <br>\r\n                        &nbsp; &nbsp; &nbsp; else  System.out.println("Sorry you failed"); \r\n                    </div>    \r\n                    <p>atau</p>\r\n                    <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; int grade = 68;   <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  if( grade > 60 )  {    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("Congratulations!");   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("You passed!");    <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>  \r\n                        &nbsp; &nbsp; &nbsp;  else  {    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("Sorry you failed");    <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br><br><br>\r\n                    </div>  \r\n\r\n                    <image style="margin-left: 20px;" src="images/lesson/if_3.jpg">'),
('m13', 'm13s003', 'Statement If-Else-If', '<h2 style="text-align: center ">Statement if-else-if   </h2>\r\n                    <p >&nbsp; &nbsp; &nbsp; \r\n                        Pernyataan  pada  bagian  kondisi <i>else</i> dari blok <i>if-else</i> dapat menjadi struktur <i>if-else</i>  \r\n                        yang lain. Kondisi struktur seperti ini mengijinkan kita untuk membuat seleksi  \r\n                        persyaratan yang lebih kompleks. \r\n                    </p>\r\n                    \r\n                    <p>Bentuk statement if-else if,  </p>\r\n                                       \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;  if( boolean_expression ) <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement1;    <br>\r\n                        &nbsp; &nbsp; &nbsp;  else if( boolean_expression2 )<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement2;    <br>\r\n                        &nbsp; &nbsp; &nbsp;  else <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;   statement3;    <br>\r\n                    </div>\r\n                    <p>Sebagai catatan : anda dapat memiliki banyak blok <i>else-if</i> sesudah pernyataan <i>if</i>. Blok <i>else</i> \r\n                        bersifat opsional dan dapat dihilangkan. Pada contoh yang ditampilkan di atas, jika \r\n                        <i>boolean_expression1</i> bernilai <i>true</i>, maka  program  akan  mengeksekusi <i>statement1</i> dan \r\n                        melewati pernyataan yang lain. Jika <i>boolean_expression2</i> bernilai <i>true</i>, maka  \r\n                        program akan mengeksekusi <i>statement2</i> dan melewati <i>statement3</i>. \r\n                    </p>\r\n                    <image style="margin-left: 50px;" src="images/lesson/if_4.jpg">\r\n                        \r\n                    <p>Berikut ini contoh <i>code statement if-else-if</i> </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; int grade = 68;   <br><br>\r\n                        &nbsp; &nbsp; &nbsp;  if( grade > 90 )  {    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("Very good!");   <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>  \r\n                        &nbsp; &nbsp; &nbsp;  else if( grade > 60 )  {    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("Very good!");   <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br>  \r\n                        &nbsp; &nbsp; &nbsp;  else  {    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; System.out.println("Sorry you failed");    <br>\r\n                        &nbsp; &nbsp; &nbsp;   }<br><br><br>\r\n                    </div>  '),
('m14', 'm14s001', 'Statement Switch Case', '<h2 style="text-align: center "> Statement switch </h2>\r\n                    <p class="p" id ="p1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Cara lain untuk membuat cabang adalah dengan  menggunakan kata kunci <b>switch</b>. \r\n                        <i>Switch</i>  mengkonstruksikan cabang untuk beberapa kondisi dari nilai. \r\n                    </p>\r\n                    \r\n                    <p>Bentuk statement switch,  </p>\r\n                                       \r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp;  switch( switch_expression ){  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  case case_selector1:     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement1;  //    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement2;  //block 1     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  . . .        //<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  break;     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  case case_selector2:     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement1;  //    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement2;  //block 2     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  . . .        //<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  break;     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  ... <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  default  <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement1;  //    <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  statement2;  //block n     <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  . . .        //<br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;  break;     <br>\r\n                        &nbsp; &nbsp; &nbsp;}\r\n                    </div>\r\n                    <p><i>switch_expression</i> adalah ekspresi <b>integer</b> atau <b>karakter</b> dan  <i>case_selector1, \r\n                        case_selector2</i> dan  seterusnya adalah konstanta unik dari nilai integer atau karakter. \r\n                    </p>\r\n                    \r\n                    <P>\r\n                        Ketika pernyataan <i>switch</i> ditemukan pada potongan kode program, java pertama kali akan \r\n                        memeriksa <i>switch_expression</i>, dan menuju ke <i>case</i> yang akan menyamakan nilai yang \r\n                        dimiliki oleh <i>switch_expression</i>. Selanjutnya program akan mengeksekusi pernyataan \r\n                        pada dari kode setelah <i>case</i> yang ditemukan sampai menemui pernyataan <i>break</i>, \r\n                        selanjutnya akan mengabaikan pernyataan yang lainnya hingga akhir dari struktur dari \r\n                        pernyataan <i>switch</i>. \r\n                    </P>\r\n                    \r\n                    <P>\r\n                        Jika  tidak  ditemui <i>case</i> yang  cocok,  maka  program  akan  mengeksekusi  blok <i>default</i>. \r\n                        Sebagai catatan, bahwa  bagian blok default adalah opsional.  Sebuah  pernyataan <i>switch</i>  \r\n                        bisa jadi tidak memiliki blok kode <i>default</i>. \r\n \r\n                    </P>\r\n                        \r\n                    <p>Contoh statement switch </p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px"> \r\n                        public class Grade { <br>\r\n                        &nbsp; &nbsp; &nbsp; public static void main( String[] args ){   <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; int grade = 92; <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; switch(grade){ <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; case 100: <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println( "Excellent!" ); <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break; <br> <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; case 90: <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Good job!" );  <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;  <br> <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; case 80: <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Study harder!" );  <br> <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break; <br> \r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; default: <br>\r\n                        &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Sorry, you failed.");   <br>  \r\n                        &nbsp; &nbsp; &nbsp;}   <br>  \r\n                        }    \r\n                    </div>  \r\n                    \r\n                    <p><b>CATATAN:</b></p>\r\n                    <ul>\r\n                        <li>Tidak   seperti  pada pernyataan <b>if</b>, beberapa pernyataan pada struktur pernyataan <i>switch</i> \r\n                            akan dieksekusi tanpa memerlukan tanda kurung kurawal (<b>{}</b>). \r\n                        </li>\r\n                        <li>Ketika  sebuah  <i>case</i>  pada  pernyataan <i>switch</i> menemui kecocokan, semua pernyataan \r\n                            pada case tersebut akan dieksekusi. Tidak hanya demikian, pernyataan lain yang berada pada case yang sesuai juga akan dieksekusi. \r\n                        </li>\r\n                        <li> Untuk menghindari program mengeksekusi pernyataan pada <i>case</i> berikutnya,  \r\n                            kita menggunakan pernyataan <b>break</b> sebagai pernyataan akhir pada setiap blok <i>case</i>. \r\n                        </li>\r\n                    </ul>');
INSERT INTO `lesson_sub` (`idlesson`, `idsublesson`, `sublesson`, `lesson`) VALUES
('m15', 'm15s001', 'Alur Pembuatan Program ', '<h2 style="text-align: center "> Alur Pembuatan Program </h2>\r\n                    <p >&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        Seorang  programmer  tidak  melakukan  pembuatan  dan  pengkodean  program  secara \r\n                        begitu  saja,  namun  mengikuti  perencanaan  dan  metodologi  yang  terstruktur  yang \r\n                        memisahkan proses suatu aplikasi menjadi beberapa bagian. \r\n                    </p>\r\n                    \r\n                    <p>Berikut  ini  langkah  –  langkah  sistematis  dasar  dalam  menyelesaikan  permasalahan pemrograman : </p>\r\n                    <ol>\r\n                        <li> Mendefinisikan masalah</li>\r\n                        <li> Menganalisa dan membuat rumusan pemecahan masalah </li>\r\n                        <li> Desain Algoritma dan Representasi </li>\r\n                        <li> Pengkodean, Uji Coba dan pembuatan dokumentasi </li>\r\n                    </ol>\r\n                    \r\n                    <p>\r\n                        Untuk memahami  langkah  dasar  dalam  pemecahan masalah  dalam  sebuah  komputer \r\n                        mari  kita  mendefinisikan  sebuah  permasalahan  yang  akan  diselesaikan  langkah  demi \r\n                        langkah  sebagaimana metodologi pemecahan masalah yang  akan dibahas  selanjutnya. \r\n                        Masalah yang akan kita selesaikan akan didefinisikan pada bagian selanjutnya. \r\n                    </p>\r\n                      \r\n                    <b>1. Definisi Permasalahan </b>\r\n                    <p>Seorang programmer umumnya mendapatkan tugas berdasarkan sebuah permasalahan. \r\n                        Sebelum  sebuah program dapat  terdesain dengan baik untuk menyelesaikan beberapa \r\n                        permasalahan,  masalah–masalah  yang  terjadi  harus  dapat  diketahui  dan  terdefinisi \r\n                        dengan baik untuk   apatkan detail persyaratan input dan output. </p>\r\n                    \r\n                    <p>Sebuah  pendefinisan  yang  jelas  adalah  sebagian  dari  penyelesaian  masalah. \r\n                        Pemrograman  komputer  mempersyaratkan  untuk  mendefiniskan  program  terlebih \r\n                        dahulu sebelum membuat suatu penyelesaian masalah. </p>\r\n                    \r\n                    <p>Mari kita definisikan sebuah contoh permasalahan : </p>\r\n                    <p style="margin-left: 30px;"><b><i>”Buatlah  sebuah  program  yang  akan  menampilkan  berapa  kali  sebuah  nama   \r\n                            tampil pada sebuah daftar”</i></b></p>\r\n                    \r\n                     <p><b>2. Analisa Permasalahan </b></p>\r\n                     <p>Setelah  sebuah  permasalahan  terdefinisi  secara memadai,  langkah  paling  ringkas  dan \r\n                        efisien dalam penyelesaian harus dirumuskan.\r\n                     </p>\r\n                     <p>Umumnya,  langkah  berikutnya  meliputi  memecahkan  masalah  tersebut  menjadi \r\n                        beberapa bagian kecil dan ringkas.\r\n                     </p>\r\n                     \r\n                     <p><b>Contoh masalah : </b><br> &nbsp; &nbsp; &nbsp; contoh masalah : <i>Menampilkan jumlah kemunculan sebuah nama pada daftar</i> </p>\r\n                     <p><b>Input Terhadap Program :  </b><br> &nbsp; &nbsp; &nbsp; <i>Daftar Nama, Nama yang akan dicari</i> </p>\r\n                     <p><b>Output Dari Program :  </b><br> &nbsp; &nbsp; &nbsp; <i>Jumlah kemunculan nama yang dicari</i>  </p>\r\n                                \r\n                     <b>3. Desain Algoritma dan Representasi</b>\r\n                     <p>\r\n                         Setelah  kita  mengetahui  dengan  baik  dan  jelas  mengenai  permasalahan  yang  ingin\r\n                        diselesaikan,  langkah  selanjutnya  yaitu  membuat  rumusan  algoritma  untuk\r\n                        menyelesaikan  permasalahan.  Dalam  pemrograman  komputer  penyelesaian  masalah\r\n                        didefinisikan dalam langkah demi langkah. \r\n                     </p>\r\n                     <p>\r\n                         Algoritma  adalah  urutan  langkah  –  langkah  logis  penyelesaian masalah  yang  disusun \r\n                        secara  sistematis  dan  logis.  Logis  merupakan  kunci  dari  sebuah  algoritma.  Langkah-\r\n                        langkah dalam algoritma harus logis dan bernilai benar atau salah. \r\n                     </p>\r\n                     <p>\r\n                         Algoritma  dapat  diekpresikan  dalam  bahasa manusia, menggunakan  presentasi  grafik \r\n                         melalui  sebuah <i>FlowChart</i> (diagram  alir)  ataupun  melalui <i>PseudoCode</i> yang \r\n                        menjembatani antara bahasa manusia dengan bahasa pemrograman. \r\n                     </p>\r\n                     \r\n                     <p>\r\n                         Berdasarkan  permasalahan  yang  terjadi  pada  bagian  sebelumnya,  bagaimanakah  kita \r\n                        dapat  memberikan  solusi  penyelesaian  secara  umum  dalam  sebuah  alur  yang  dapat \r\n                        dengan mudah dimengerti? \r\n                     </p>\r\n                     \r\n                     <p><b>Mengekspresikan cara penyelesaian melalui bahasa manusia : </b></p>\r\n                     <ol>\r\n                        <li>Tentukan daftar nama</li>\r\n                        <li>Tentukan nama yang akan dicari, anggaplah ini merupakan sebuah kata kunci </li>\r\n                        <li>Bandingkan kata kunci terhadap setiap nama yang terdapat pada daftar </li>\r\n                        <li>Jika  kata  kunci  tersebut  sama  dengan  nama  yang  terdapat  pada  daftar, tambahkan nilai 1 pada hasil perhitungan </li>\r\n                        <li>Jika seluruh nama telah dibandingkan, tampilkan hasil perhitungan (output)  </li>\r\n                    </ol>\r\n                     <p><b>Mengekspresikan cara penyelesaian melalui FlowChart : </b></p>\r\n                     \r\n                     <image style="margin-left: 30px;" src="images/lesson/flowchat_1.jpg">\r\n                     \r\n                     <p><b>Mengekspresikan solusi melalui Pseudocode : </b></p>\r\n                     <div style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">         \r\n                        &nbsp; &nbsp; &nbsp; listnama = Daftar Nama <br>\r\n                        &nbsp; &nbsp; &nbsp; KeyNama = nama yang dicari <br>\r\n                        &nbsp; &nbsp; &nbsp; Hitung = 0 <br><br>\r\n                        &nbsp; &nbsp; &nbsp; Untuk setiap nama pada daftar Nama melakukan :    <br>\r\n                        &nbsp; &nbsp; &nbsp; Jika nama == KeyNama <br>\r\n                        &nbsp; &nbsp; &nbsp; Hitung = Hitung + 1<br>\r\n                        &nbsp; &nbsp; &nbsp; Tampilkan hitung <br>\r\n                    </div>'),
('m15', 'm15s002', 'Simbol Flowchart dan Artinya ', ' <h2 style="text-align: center ">  Simbol Flowchart dan Artinya  </h2>\r\n                    <p>\r\n                        <i>Flowchart</i> adalah  representasi  grafis  dari  langkah  –  langkah  yang  harus  diikuti  dalam \r\n                        menyelesaikan  suatu  permasalahan  yang  terdiri  atas  sekumpulan  simbol,  dimana \r\n                        masing – masing simbol merepresentasikan kegiatan tertentu. <i>Flowchart</i> diawali dengan \r\n                        penerimaan input dan diakhiri dengan penampilan <i>output</i>. \r\n                    </p>\r\n                    \r\n                    <p>\r\n                        Sebuah <i>flowchart</i> pada  umumnya  tidak  menampilkan  instruksi  bahasa  pemrograman, \r\n                        namun menetapkan konsep solusi dalam bahasa manusia ataupun notasi matematis. \r\n                    </p>\r\n                        \r\n                    <p>\r\n                        Berikut  ini  akan  dibahas  tentang  simbol–simbol  yang  digunakan  dalam  menyusun \r\n                        <i>flowchart</i>,  kegiatan  yang  diwakili  serta  aturan  yang  diterapkan  dalam  penggunaan \r\n                        simbol tersebut : \r\n                    </p>\r\n                    \r\n                    <table border="1" style=" border-color: black; border-style: double; "   >\r\n                        <tr>\r\n                            <th width="100" style="text-align: center">Simbol</th>\r\n                            <th width="200" style="text-align: center">Nama</th>\r\n                            <th width="500" style="text-align: center">Pengertian</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s1.jpg"></td>\r\n                            <td><b>simbol proses</b></td>\r\n                            <td>Simbol  ini  digunakan  untuk  melambangkan \r\n                                kegiatan pemprosesan input. Dalam simbol ini, kita \r\n                                dapat menuliskan  operasi-operasi  yang  dikenakan \r\n                                pada  input, maupun operasi  lainnya. Sama seperti \r\n                                aturan  pada  simbol  input,  penulisan  dapat \r\n                                dilakukan  secara  satu  per  satu  maupun  secara \r\n                                keseluruhan. </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s2.jpg"></td>\r\n                            <td><b>Simbol Input Output (IO)</b></td>\r\n                            <td>Merepresentasikan  fungsi  I/O  yang  membuat \r\n                                sebuah  data  dapat  diproses  (input)  atau \r\n                                ditampilkan  (output)  setelah  mengalami  eksekusi \r\n                                informasi.  \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s3.jpg"></td>\r\n                            <td><b>Simbol Garis Alir </b></td>\r\n                            <td>Simbol ini digunakan untuk menghubungkan setiap \r\n                                langkah dalam flowchart dan menunjukkan kemana \r\n                                arah  aliran  diagram.  Anak  panah  ini  harus \r\n                                mempunyai  arah dari kiri  ke  kanan atau dari  atas \r\n                                ke bawah. Anak panah  ini  juga dapat diberi  label, \r\n                                khususnya jika keluar dari symbol percabangan. \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s4.jpg"></td>\r\n                            <td><b>Simbol Anotasi </b></td>\r\n                            <td>Merepresentasikan  informasi  deskriptif  tambahan, \r\n                                komentar  atau  catatan  penjelasan.  Dalam  simbol \r\n                                ini,  kita  dapat  menuliskan  komentar  apapun  dan \r\n                                sebanyak  apapun,  hal  ini  berguna  untuk \r\n                                memperjelas  langkah-langkah  dalam  flowchart. \r\n                                Garis  vertical  dan  garis  putus–putus  dapat \r\n                                ditempatkan pada sisi kanan maupun kiri. \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s5.jpg"></td>\r\n                            <td><b>Simbol Percabangan </b></td>\r\n                            <td>Simbol  ini  digunakan  untuk  melambangkan \r\n                                percabangan,  yaitu  pemeriksaan  terhadap  suatu \r\n                                kondisi. Dalam simbol ini, kita menuliskan keadaan \r\n                                yang harus dipenuhi. Hasil dari pemeriksaan dalam \r\n                                simbol  ini  adalah  YES  atau NO.  Jika  pemeriksaan \r\n                                menghasilkan  keadaan  benar,  maka  jalur  yang \r\n                                harus  dipilih  adalah  jalur  yang  berlabel  Yes, \r\n                                sedangkan  jika  pemeriksaan  menghasilkan \r\n                                keadaan  salah,  maka  jalur  yang  harus  dipilih \r\n                                adalah jalur yang berlabel No. \r\n \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s6.jpg"></td>\r\n                            <td><b>Simbol Terminator </b></td>\r\n                            <td>Terminator  berfungsi  untuk  menandai  awal  dan \r\n                                akhir  dari  suatu  flowchart.  Simbol  ini  biasanya \r\n                                diberi  label  START  untuk  menandai  awal  dari \r\n                                flowchart,  dan  label  STOP  untuk  menandai  akhir \r\n                                dari  flowchart.  Jadi  dalam  sebuah  flowchart  pasti \r\n                                terdapat  sepasang  terminator  yaitu  terminator \r\n                                start dan stop. \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s7.jpg"></td>\r\n                            <td><b>Simbol Konektor</b></td>\r\n                            <td>Simbol  konektor  digunakan  pada  waktu \r\n                                menghubungkan  suatu  langkah  dengan  langkah \r\n                                lain  dalam  sebuah  flowchart  dengan  keadaan  on \r\n                                page  atau  off  page.  Konektor  on  page  digunakan \r\n                                untuk  menghubungkan  suatu  langkah  dengan \r\n                                langkah  lain  dari  flowchart  dalam  satu  halaman, \r\n                                sedangkan  konektor  off  page  digunakan  untuk \r\n                                menghubungkan  suatu  langkah  dengan  langkah \r\n                                lain dari flowchart dalam halaman yang berbeda. \r\n                                Konektor ini biasanya dipakai saat media yang kita \r\n                                gunakan untuk menggambar flowchart tidak cukup \r\n                                luas untuk memuat gambar secara utuh, jadi perlu \r\n                                dipisah-pisahkan.  Dalam  sepasang  konektor \r\n                                biasanya diberi label tertentu yang sama agar lebih \r\n                                mudah diketahui pasangannya. \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><image src="images/lesson/flowchat_s8.jpg"></td>\r\n                            <td><b>Simbol Prosedur </b></td>\r\n                            <td>Simbol  ini  berperan  sebagai  blok  pembangun  dari \r\n                                suatu  program.  Prosedur memiliki  suatu  flowchart \r\n                                yang  berdiri  sendiri  diluar  flowchart  utama.  Jadi \r\n                                dalam  simbol  ini,  kita  cukup  menuliskan  nama \r\n                                prosedurnya  saja,  jadi  sama  seperti  jika  kita \r\n                                melakukan  pemanggilan  suatu  prosedur  pada \r\n                                program  utama  (main  program).  Sama  dengan \r\n                                aturan  pada  simbol  percabangan,  penulisan  nama \r\n                                prosedur dilakukan secara satu per satu. \r\n                            </td>\r\n                        </tr>          \r\n                    </table>'),
('m15', 'm15s003', 'Macam Struktur Dasar Algoritma', '                        <h2 style="text-align: center ">Macam Struktur Dasar Algoritma</h2>\r\n                    <p> \r\n                      Pada dasarnya terdapat tiga buah struktur dasar yang menyusun suatu algoritma. Ketiga\r\n                      struktur dasar itu adalah :\r\n                    </p>                  \r\n                    <ul>\r\n                        <li>Sekuensial (runtunan)</li>\r\n                        <li>Selseksi</li>\r\n                        <li>Perulangan</li>\r\n                    </ul>\r\n                    \r\n                    <p>Algoritma yang kompleks umumnya tersusun atas struktur-struktur dasar tersebut.</p>\r\n                    \r\n                    <b>Struktur Sekuensial.</b>\r\n                    <p>Pada struktur sekuensial, langkah-langkah yang dilakukan dalam algoritma diproses \r\n                    secara berurutan, sebagaimana diperhatikan pada gambar berikut :</p>\r\n                    \r\n                    <image style="margin-left: 200px; " src="images/lesson/flowchat_2.jpg">\r\n                    <p>Dimana, langkah 1 akan dijalankan pertama kali, langkah 2 dan diikuti langkah 3. </p>\r\n                    <p>Contoh flowchart untuk menghitung sisi miring sebuah segitiga siku-siku</p>\r\n                    <image style="margin-left: 50px; " src="images/lesson/flowchat_3.jpg">\r\n                     \r\n                    <br><br><b>Struktur Seleksi.</b>\r\n                    <p>Struktur seleksi menyatakan pemilihan langkah yang didasarkan oleh suatu kondisi(pengambilan keputusan).\r\n                    Gambar dibawah ini memperihatkan diagram alir struktur seleksi melibatkan dua alternatif. Dalam hal ini\r\n                    simbol belah kerupat digunakan untuk mewakili lankah pengambilan keputusan.</p>\r\n                     <image style="margin-left: 0px; " src="images/lesson/flowchat_4.jpg">\r\n                    <p>Contoh flowchart untuk mencari bilangan terbesar dari dua buah bilangan x dan y</p>\r\n                    <image style="margin-left: 150px; " src="images/lesson/flowchat_5.jpg">\r\n                    \r\n                    <br><br><b>Struktur Perulangan.</b>\r\n                    <p>Perulangan menyatkan suatu tindakan atau langkah yang dijalankan beberapa kali. \r\n                    Sebagai contoh anda ingin menampilkan 10 tulisan "selamat belajar", anda bisa menuliskannya \r\n                    dengan menggunakan struktur sekuensial. itu berarti memberikan 10 instruksi untuk menuliskan kesepuluh \r\n                    tulisan tersebut. Cara seperti itu memang praktis untuk jumlah perulangan yang sedikit (misal 2 atau 3 buah perulangan),\r\n                    tetapi tidak cocok untuk perulangan yang besar. Supaya lebih praktis, anda bisa menggunakan struktur perulangan.</p>\r\n                    \r\n                    <br><b>Struktur Perulangan Pertama</b><br>\r\n                    <image style="margin-left: 0px; " src="images/lesson/flowchat_6.jpg">\r\n                    <p>Pada contoh perulangan diatas <i>proses</i> dapat berupa 1 atau beberapa langkah.\r\n                    Pada bentuk ini, ada kemungkinan <i>proses</i> tidak dijalankan sama sekali sekiranya diawal kondisi bernilai salah.</p>\r\n                    <p>Gambar diatas menunjukkan bahwa sebelum <i>proses</i> dijalankan pertama kali, <i>kondisi</i>\r\n                        diuji terlebih dahulu. Sekiranya <i>kondisi</i> bernilai benar maka <i>Prosedur</i> akan dijalankan\r\n                        dan kemudian kondisi diuji lagi. Sepanjang kondisi benar, prosedur akan tetap dijalankan, namun begitu <i>kondisi</i>\r\n                        bernilai salah maka perulangan berakhir. </p>\r\n                    \r\n                    <br><b>Struktur Perulangan Kedua</b><br>\r\n                    <image style="margin-left: 0px; " src="images/lesson/flowchat_7.jpg">\r\n                    <p>Pada bentuk kedua, <i>proses</i> paling tidak dijalakan sekali. </p>\r\n                    \r\n                     <p>Contoh flowchart untuk menampilkan kalimat "selamat belajar" sebanyak 4 kali</p>\r\n                    <image style="margin-left: 50px; " src="images/lesson/flowchat_8.jpg">');

-- --------------------------------------------------------

--
-- Table structure for table `loglogin`
--

CREATE TABLE IF NOT EXISTS `loglogin` (
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `iduser` varchar(15) NOT NULL,
  PRIMARY KEY (`date`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `loglogin`
--

INSERT INTO `loglogin` (`date`, `iduser`) VALUES
('2013-08-27 13:10:02', 'tes'),
('2013-09-03 03:57:49', 'tes'),
('2013-09-03 03:58:22', 'tes'),
('2013-09-03 04:01:03', 'tes'),
('2013-09-03 04:04:41', 'tes'),
('2013-09-03 04:09:45', 'tes'),
('2013-09-03 04:24:05', 'tes'),
('2013-09-03 04:25:29', 'tes'),
('2013-09-03 04:43:12', 'tes'),
('2013-09-03 06:08:55', 'tes'),
('2013-09-03 07:16:11', 'tes'),
('2013-09-03 07:20:51', 'tes'),
('2013-09-03 12:17:40', 'tes'),
('2013-09-04 03:28:50', 'tes'),
('2013-09-04 03:40:38', 'numu'),
('2013-09-04 03:40:50', 'tes'),
('2013-09-04 03:43:04', 'numu'),
('2013-09-04 03:44:08', 'numu'),
('2013-09-04 06:26:28', 'tes'),
('2013-09-04 07:10:51', 'tes'),
('2013-09-04 07:11:52', 'tes'),
('2013-09-04 07:12:38', 'tes'),
('2013-09-04 07:13:46', 'tes'),
('2013-09-04 07:18:21', 'tes'),
('2013-09-04 07:20:45', 'tes'),
('2013-09-04 07:25:31', 'tes'),
('2013-09-04 07:26:29', 'tes'),
('2013-09-04 07:33:18', 'tes'),
('2013-09-04 07:35:01', 'tes'),
('2013-09-04 07:36:36', 'tes'),
('2013-09-04 07:38:11', 'tes'),
('2013-09-04 07:39:23', 'tes'),
('2013-09-04 07:41:08', 'tes'),
('2013-09-04 07:45:15', 'tes'),
('2013-09-04 07:46:58', 'tes'),
('2013-09-04 07:50:45', 'tes'),
('2013-09-05 05:55:09', 'tes'),
('2013-09-05 05:56:14', 'tes'),
('2013-09-05 06:17:09', 'tes'),
('2013-09-05 06:18:55', 'tes'),
('2013-09-05 06:25:30', 'tes'),
('2013-09-05 06:28:30', 'tes'),
('2013-09-05 06:29:09', 'tes'),
('2013-09-05 06:31:08', 'tes'),
('2013-09-05 09:31:46', 'tes'),
('2013-09-05 09:34:33', 'tes'),
('2013-09-12 04:06:10', 'tes'),
('2013-09-12 04:09:16', 'tes'),
('2013-09-12 04:13:40', 'tes'),
('2013-09-12 04:54:52', 'tes'),
('2013-09-12 07:59:36', 'tes'),
('2013-09-12 08:00:51', 'tes'),
('2013-09-16 11:38:55', 'tes'),
('2013-09-16 13:37:15', 'tes'),
('2013-09-16 13:44:52', 'tes'),
('2013-09-16 13:54:35', 'tes'),
('2013-09-16 13:55:14', 'tes'),
('2013-09-16 13:58:36', 'tes'),
('2013-09-16 13:59:28', 'tes'),
('2013-09-16 14:07:09', 'tes'),
('2013-09-16 14:17:00', 'tes'),
('2013-09-16 14:18:02', 'tes'),
('2013-09-17 07:58:42', 'tes'),
('2013-09-17 08:02:05', 'tes'),
('2013-09-17 08:08:54', 'tes'),
('2013-09-17 08:12:01', 'tes'),
('2013-09-17 08:16:01', 'tes'),
('2013-09-17 08:47:57', 'tes'),
('2013-09-17 10:49:30', 'tes'),
('2013-09-17 11:08:48', 'tes'),
('2013-09-17 11:11:56', 'tes'),
('2013-09-17 11:14:12', 'tes'),
('2013-09-17 11:15:22', 'henca'),
('2013-09-17 11:17:23', 'henca'),
('2013-09-17 11:19:28', 'henca'),
('2013-09-21 04:44:28', 'baru');

-- --------------------------------------------------------

--
-- Table structure for table `material_obervation`
--

CREATE TABLE IF NOT EXISTS `material_obervation` (
  `iduser` varchar(15) NOT NULL,
  `lesson_name` varchar(30) NOT NULL,
  `observation` tinyint(1) NOT NULL,
  `flag` varchar(10) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `material_obervation`
--

INSERT INTO `material_obervation` (`iduser`, `lesson_name`, `observation`, `flag`) VALUES
('F1B008083', 'opLogic', 1, 'weak'),
('F1B008083', 'classNmethod', 1, 'weak'),
('F1B008083', 'opRelation', 1, 'weak'),
('F1B009037', 'switchCase', 0, 'weak'),
('F1B009037', 'looping', 0, 'weak'),
('F1B009037', 'classNmethod', 0, 'weak'),
('F1B008083', 'opPredence', 0, 'weak'),
('F1B008083', 'looping', 0, 'weak'),
('F1D012052', 'classNmethod', 0, 'weak'),
('F1D012052', 'pdt', 0, 'weak'),
('F1D012052', 'opIncNdec', 0, 'weak'),
('F1D012052', 'opRelation', 0, 'weak'),
('F1D012052', 'switchCase', 0, 'weak'),
('f1b009069', 'opRelation', 1, 'weak'),
('f1b009069', 'opPredence', 0, 'weak'),
('f1b008085', 'pdt', 1, 'weak'),
('f1b008085', 'opIncNdec', 1, 'weak'),
('f1b008085', 'opLogic', 0, 'weak'),
('f1b008085', 'looping', 0, 'weak'),
('f1b008085', 'switchCase', 0, 'weak'),
('F1B006028', 'pdt', 1, 'weak'),
('F1B006028', 'opArithmetic', 1, 'weak'),
('F1B006028', 'opIncNdec', 0, 'weak'),
('F1B006028', 'opRelation', 0, 'weak'),
('F1B006028', 'opLogic', 0, 'weak'),
('F1B006028', 'opPredence', 0, 'weak'),
('F1B006028', 'looping', 0, 'weak'),
('F1B006028', 'switchCase', 0, 'weak'),
('F1B009027', 'opRelation', 1, 'weak'),
('F1B009027', 'looping', 0, 'weak'),
('sariIsmi', 'pdt', 0, 'weak'),
('sariIsmi', 'opIncNdec', 0, 'weak'),
('sariIsmi', 'opRelation', 0, 'weak'),
('sariIsmi', 'opLogic', 0, 'weak'),
('sariIsmi', 'opPredence', 0, 'weak'),
('sariIsmi', 'looping', 0, 'weak'),
('sariIsmi', 'switchCase', 0, 'weak'),
('F1D012066', 'opRelation', 1, 'weak'),
('f1b009021', 'classNmethod', 1, 'weak'),
('f1b009021', 'opRelation', 1, 'weak'),
('f1b009021', 'opLogic', 1, 'weak'),
('f1b009021', 'opPredence', 1, 'weak'),
('f1b009021', 'switchCase', 0, 'weak'),
('dbudy', 'opRelation', 0, 'weak'),
('dbudy', 'looping', 0, 'weak'),
('ranin', 'pdt', 0, 'weak'),
('ranin', 'opArithmetic', 0, 'weak'),
('ranin', 'opRelation', 0, 'weak'),
('ranin', 'opLogic', 0, 'weak'),
('ranin', 'opPredence', 0, 'weak'),
('ranin', 'looping', 0, 'weak'),
('ranin', 'switchCase', 0, 'weak'),
('daniel', 'classNmethod', 0, 'weak'),
('daniel', 'opRelation', 0, 'weak'),
('daniel', 'opPredence', 0, 'weak'),
('daniel', 'looping', 0, 'weak'),
('daniel', 'switchCase', 0, 'weak'),
('F1B008011', 'opRelation', 0, 'weak'),
('F1B008011', 'opLogic', 0, 'weak'),
('F1B008011', 'opPredence', 0, 'weak'),
('F1B008011', 'looping', 0, 'weak'),
('F1B008011', 'switchCase', 0, 'weak'),
('F1D013029', 'opArithmetic', 1, 'weak'),
('F1D013029', 'pdt', 1, 'weak'),
('F1D013089', 'opIncNdec', 0, 'weak'),
('F1D013073', 'opIncNdec', 1, 'weak'),
('F1D013073', 'opRelation', 1, 'weak'),
('F1D013073', 'looping', 0, 'weak'),
('f1d013001', 'opArithmetic', 0, 'weak'),
('f1d013001', 'opIncNdec', 0, 'weak'),
('f1d013001', 'opRelation', 0, 'weak'),
('f1d013001', 'opPredence', 0, 'weak'),
('f1d013001', 'looping', 0, 'weak'),
('f1d013001', 'switchCase', 0, 'weak'),
('F1D013029', 'opIncNdec', 0, 'weak'),
('F1D013029', 'opRelation', 0, 'weak'),
('F1D013029', 'opPredence', 0, 'weak'),
('F1D013079', 'pdt', 0, 'weak'),
('F1D013079', 'opIncNdec', 0, 'weak'),
('F1D013079', 'opLogic', 0, 'weak'),
('F1D013079', 'looping', 0, 'weak'),
('F1D013079', 'switchCase', 0, 'weak'),
('F1D013009', 'classNmethod', 0, 'weak'),
('F1D013009', 'pdt', 0, 'weak'),
('F1D013009', 'opIncNdec', 0, 'weak'),
('F1D013009', 'opRelation', 0, 'weak'),
('F1D013009', 'opLogic', 0, 'weak'),
('F1D013009', 'opPredence', 0, 'weak'),
('F1D013095', 'classNmethod', 0, 'weak'),
('F1D013095', 'pdt', 0, 'weak'),
('F1D013095', 'opIncNdec', 0, 'weak'),
('F1D013095', 'opRelation', 0, 'weak'),
('F1D013095', 'opLogic', 0, 'weak'),
('F1D013095', 'opPredence', 0, 'weak'),
('F1D013095', 'looping', 0, 'weak'),
('F1D013095', 'switchCase', 0, 'weak'),
('F1D013097', 'opRelation', 0, 'weak'),
('F1D013097', 'looping', 0, 'weak'),
('F1D013057', 'classNmethod', 0, 'weak'),
('F1D013057', 'pdt', 1, 'weak'),
('F1D013057', 'opRelation', 0, 'weak'),
('F1D013057', 'opLogic', 0, 'weak'),
('F1D013057', 'opPredence', 0, 'weak'),
('F1D013057', 'switchCase', 0, 'weak'),
('F1D013077', 'classNmethod', 0, 'weak'),
('F1D013077', 'pdt', 0, 'weak'),
('F1D013077', 'opIncNdec', 0, 'weak'),
('F1D013077', 'opRelation', 0, 'weak'),
('F1D013077', 'looping', 0, 'weak'),
('F1D013077', 'switchCase', 0, 'weak'),
('F1D013029', 'looping', 0, 'weak'),
('F1D013041', 'opIncNdec', 1, 'weak'),
('F1D013041', 'pdt', 1, 'weak'),
('F1D013041', 'classNmethod', 1, 'weak'),
('F1D013093', 'classNmethod', 0, 'weak'),
('F1D013093', 'pdt', 0, 'weak'),
('F1D013093', 'opIncNdec', 0, 'weak'),
('F1D013093', 'opRelation', 0, 'weak'),
('F1D013093', 'opLogic', 0, 'weak'),
('F1D013093', 'opPredence', 0, 'weak'),
('F1D013093', 'looping', 0, 'weak'),
('F1D013093', 'switchCase', 0, 'weak'),
('F1D013047', 'pdt', 0, 'weak'),
('F1D013047', 'opArithmetic', 0, 'weak'),
('F1D013047', 'opIncNdec', 0, 'weak'),
('F1D013047', 'opRelation', 0, 'weak'),
('F1D013047', 'opPredence', 0, 'weak'),
('F1D013047', 'looping', 0, 'weak'),
('F1D013047', 'switchCase', 0, 'weak'),
('F1D013015', 'pdt', 0, 'weak'),
('F1D013015', 'opArithmetic', 0, 'weak'),
('F1D013015', 'opIncNdec', 0, 'weak'),
('F1D013015', 'opRelation', 0, 'weak'),
('F1D013015', 'opLogic', 0, 'weak'),
('F1D013015', 'opPredence', 0, 'weak'),
('F1D013015', 'looping', 0, 'weak'),
('f1d013061', 'pdt', 1, 'weak'),
('f1d013061', 'opRelation', 1, 'weak'),
('f1d013061', 'looping', 1, 'weak'),
('F1D013003', 'pdt', 0, 'weak'),
('F1D013003', 'opArithmetic', 0, 'weak'),
('F1D013003', 'opIncNdec', 0, 'weak'),
('F1D013003', 'opRelation', 0, 'weak'),
('F1D013003', 'opPredence', 0, 'weak'),
('F1D013003', 'looping', 0, 'weak'),
('jeki378', 'pdt', 1, 'weak'),
('jeki378', 'opArithmetic', 1, 'weak'),
('jeki378', 'opIncNdec', 1, 'weak'),
('jeki378', 'opRelation', 1, 'weak'),
('jeki378', 'opPredence', 0, 'weak'),
('F1D013049', 'pdt', 1, 'weak'),
('F1D013049', 'opIncNdec', 1, 'weak'),
('F1D013049', 'opRelation', 1, 'weak'),
('F1D013049', 'opPredence', 1, 'weak'),
('F1D013049', 'looping', 1, 'weak'),
('F1D013059', 'pdt', 1, 'weak'),
('F1D013059', 'opArithmetic', 1, 'weak'),
('F1D013059', 'opRelation', 0, 'weak'),
('F1D013059', 'opLogic', 0, 'weak'),
('F1D013059', 'opPredence', 0, 'weak'),
('F1D013059', 'looping', 0, 'weak'),
('F1D013059', 'switchCase', 0, 'weak'),
('f1d013099', 'pdt', 1, 'weak'),
('f1d013099', 'opArithmetic', 0, 'weak'),
('f1d013099', 'opRelation', 0, 'weak'),
('f1d013099', 'opLogic', 0, 'weak'),
('f1d013099', 'opPredence', 0, 'weak'),
('f1d013099', 'looping', 0, 'weak'),
('f1d013099', 'switchCase', 0, 'weak'),
('F1D013087', 'opRelation', 1, 'weak'),
('F1D013087', 'looping', 0, 'weak'),
('F1D013075', 'pdt', 1, 'weak'),
('F1D013075', 'opArithmetic', 1, 'weak'),
('F1D013075', 'opIncNdec', 0, 'weak'),
('F1D013075', 'opRelation', 0, 'weak'),
('F1D013075', 'opLogic', 0, 'weak'),
('F1D013075', 'opPredence', 0, 'weak'),
('F1D013067', 'pdt', 1, 'weak'),
('F1D013067', 'opRelation', 1, 'weak'),
('F1D013067', 'looping', 0, 'weak'),
('F1D013067', 'switchCase', 0, 'weak'),
('f1d013043', 'pdt', 0, 'weak'),
('f1d013043', 'opIncNdec', 0, 'weak'),
('f1d013043', 'opRelation', 0, 'weak'),
('f1d013043', 'opLogic', 0, 'weak'),
('f1d013043', 'looping', 0, 'weak'),
('f1d013043', 'switchCase', 0, 'weak'),
('F1D013033', 'pdt', 0, 'weak'),
('F1D013033', 'opRelation', 0, 'weak'),
('F1D013033', 'opLogic', 0, 'weak'),
('F1D013033', 'looping', 0, 'weak'),
('f1d013069', 'pdt', 0, 'weak'),
('f1d013069', 'opLogic', 0, 'weak'),
('f1d013069', 'opPredence', 0, 'weak'),
('f1d013069', 'looping', 0, 'weak'),
('F1D013031', 'pdt', 0, 'weak'),
('F1D013031', 'opRelation', 0, 'weak'),
('F1D013031', 'looping', 0, 'weak'),
('F1D013031', 'switchCase', 0, 'weak'),
('F1D013041', 'opPredence', 1, 'weak'),
('F1D013041', 'looping', 1, 'weak'),
('F1D013041', 'switchCase', 1, 'weak'),
('f1d013091', 'pdt', 1, 'weak'),
('f1d013091', 'opArithmetic', 1, 'weak'),
('f1d013091', 'opRelation', 1, 'weak'),
('f1d013091', 'opLogic', 0, 'weak'),
('f1d013091', 'opPredence', 0, 'weak'),
('f1d013091', 'looping', 0, 'weak'),
('F1D013005', 'pdt', 0, 'weak'),
('F1D013005', 'opIncNdec', 0, 'weak'),
('F1D013005', 'opRelation', 0, 'weak'),
('F1D013005', 'switchCase', 0, 'weak'),
('f1d013045', 'classNmethod', 0, 'weak'),
('f1d013045', 'opIncNdec', 0, 'weak'),
('f1d013045', 'opRelation', 0, 'weak'),
('f1d013045', 'opLogic', 0, 'weak'),
('f1d013045', 'opPredence', 0, 'weak'),
('f1d013045', 'switchCase', 0, 'weak'),
('f1d013025', 'pdt', 0, 'weak'),
('f1d013025', 'opArithmetic', 0, 'weak'),
('f1d013025', 'opIncNdec', 0, 'weak'),
('f1d013025', 'opRelation', 0, 'weak'),
('f1d013025', 'opLogic', 0, 'weak'),
('f1d013025', 'opPredence', 0, 'weak'),
('f1d013025', 'switchCase', 0, 'weak'),
('f1d013021', 'pdt', 0, 'weak'),
('f1d013021', 'opArithmetic', 0, 'weak'),
('f1d013021', 'opIncNdec', 0, 'weak'),
('f1d013021', 'opRelation', 0, 'weak'),
('f1d013021', 'opLogic', 0, 'weak'),
('f1d013021', 'opPredence', 0, 'weak'),
('f1d013021', 'switchCase', 0, 'weak'),
('f1d013085', 'pdt', 0, 'weak'),
('f1d013085', 'opIncNdec', 0, 'weak'),
('f1d013085', 'looping', 0, 'weak'),
('F1D0130300', 'pdt', 0, 'weak'),
('F1D0130300', 'opArithmetic', 0, 'weak'),
('F1D0130300', 'opRelation', 0, 'weak'),
('F1D0130300', 'opPredence', 0, 'weak'),
('F1D0130300', 'looping', 0, 'weak'),
('F1D013027', 'pdt', 0, 'weak'),
('F1D013027', 'opRelation', 0, 'weak'),
('F1D013027', 'opLogic', 0, 'weak'),
('F1D013027', 'opPredence', 0, 'weak'),
('F1D013027', 'looping', 0, 'weak'),
('F1D013023', 'opArithmetic', 0, 'weak'),
('F1D013023', 'opRelation', 0, 'weak'),
('F1D013023', 'opPredence', 0, 'weak'),
('F1D013023', 'looping', 0, 'weak'),
('f1d013007', 'pdt', 0, 'weak'),
('f1d013007', 'opArithmetic', 0, 'weak'),
('f1d013007', 'opIncNdec', 0, 'weak'),
('f1d013007', 'opRelation', 0, 'weak'),
('f1d013007', 'opPredence', 0, 'weak'),
('F1D013017', 'pdt', 0, 'weak'),
('F1D013017', 'opIncNdec', 0, 'weak'),
('F1D013017', 'looping', 0, 'weak'),
('F1D013017', 'switchCase', 0, 'weak'),
('f1d013071', 'classNmethod', 0, 'weak'),
('f1d013071', 'pdt', 0, 'weak'),
('f1d013071', 'opIncNdec', 0, 'weak'),
('f1d013071', 'opRelation', 0, 'weak'),
('f1d013071', 'opPredence', 0, 'weak'),
('F1D013055', 'pdt', 0, 'weak'),
('F1D013055', 'opArithmetic', 0, 'weak'),
('F1D013055', 'opIncNdec', 0, 'weak'),
('F1D013055', 'opRelation', 0, 'weak'),
('F1D013055', 'opLogic', 0, 'weak'),
('F1D013055', 'opPredence', 0, 'weak'),
('F1D013055', 'looping', 0, 'weak'),
('F1D013042', 'classNmethod', 0, 'weak'),
('F1D013042', 'pdt', 0, 'weak'),
('F1D013042', 'opRelation', 0, 'weak'),
('F1D013042', 'looping', 0, 'weak'),
('F1D013042', 'switchCase', 0, 'weak'),
('F1D013012', 'classNmethod', 0, 'weak'),
('F1D013012', 'pdt', 1, 'weak'),
('F1D013012', 'opIncNdec', 0, 'weak'),
('F1D013012', 'opRelation', 0, 'weak');

-- --------------------------------------------------------

--
-- Table structure for table `posttest_question`
--

CREATE TABLE IF NOT EXISTS `posttest_question` (
  `idlesson` varchar(10) NOT NULL,
  `idpostquestion` varchar(50) NOT NULL,
  `postquestion` text NOT NULL,
  `postansA` text NOT NULL,
  `postansB` text NOT NULL,
  `postansC` text NOT NULL,
  `postansD` text NOT NULL,
  `postcorectAns` enum('a','b','c','d') NOT NULL,
  PRIMARY KEY (`idpostquestion`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `posttest_question`
--

INSERT INTO `posttest_question` (`idlesson`, `idpostquestion`, `postquestion`, `postansA`, `postansB`, `postansC`, `postansD`, `postcorectAns`) VALUES
('m00', 'm00q01', 'Disebut apakah prinsip pemrograman dimana seorang programmer yang mengembangkan software menggunakan pendekatan linear (step-by-step)? ', 'pemrograman berbasis event', 'pemrograman procedural', 'pemrograman beroriented objek', 'pemrograman fungsional', 'b'),
('m00', 'm00q02', 'Extensi apa yang digunakan pada file bytecode Java?', '.class', '.cls', '.java', '.txt', 'a'),
('m00', 'm00q03', 'Manakah statement yang benar mengenai Gerbage collector ?', 'Gerbage collector merupakan pengosongan memory pada pemogrman c dan java', 'Pengosongan memori terjadi otomatis pada pemogrman java', 'Gerbage collector tidak dapat digunakan dalam java', 'Gerbage collector merupakan pengosongan memory pada pemogrman c', 'b'),
('m00', 'm00q04', 'Manakah yang termasuk dalam teknologi java (development environment) :', 'compiler ', 'Interpreter/penerjemah ', 'class file packaging tool ', 'semua benar', 'd'),
('m00', 'm00q05', 'Apa yang menyebabkan java bisa berjalan di setiap platform perangkat keras?', 'Karena memiliki JRE (Java run time Environment)', 'Karena memiliki JVM (Java virtual machine)', 'Karena memiliki documentation generator', 'Karena memiliki class file packaging tool ', 'c'),
('m01', 'm01q01', 'Ketika kelas public Java disimpan dalam file source code Java, hal-hal apakah yang harus benar mengenai penamaan source file sehubungan dengan penamaan kelas?\r\n', 'Penamaan harus berbeda\r\n', 'Penamaan harus dimulai dengan huruf yang sama\r\n', 'Penamaan harus serupa, tanpa memperhatikan ukuran huruf\r\n', 'Penamaan harus benar-benar serupa, termasuk ukuran besar kecil huruf\r\n', 'd'),
('m01', 'm01q02', 'Dari pernyataan berikut-berikut ini, manakah pernyataan yang benar dari <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">method main() </font>?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public static void main()</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public static void main(String arg[ ])</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public static main (String args[])</font\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public static int main (String [ ] arg)</font', 'b'),
('m01', 'm01q03', 'images/postquestions/m01q03.jpg', 'Penulisan nama kelas <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">“Mahasiswa”.</font>\r\n', 'Penulisan keyword <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">“Class”.</font>\r\n', 'Penulisan keyword <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">“public”.</font>\r\n\r\n', 'Tidak ada yang salah.', 'b'),
('m01', 'm01q04', 'Manakah pernyataan yang benar mengenai sebuah kelas?\r\n\r\n', 'Kelas hanya boleh berisi 1 method yaitu main method', 'Seluruh program hanya boleh mempunyai 1 kelas', 'Setiap kelas harus berisi method main', 'Kelas bisa berisi beberapa variabel dan method', 'd'),
('m01', 'm01q05', 'Manakah pernyataan yang salah mengenai sebuah method ?\r\n', 'Sebuah method bisa memiliki parameter, ataupun tidak.\r\n', 'Sebuah method bisa memiliki return value, ataupun tidak.\r\n', 'Method yang memiliki return value boleh bertipe apa saja.\r\n\r\n', 'Pemanggilan method menggunakan syntax (<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">NamaMethod(parameter)</font>).', 'c'),
('m02', 'm02q01', 'Manakah batasan variabel local dalam sebuah method dikenal dalam sebuah program.\r\n', 'Dalam seluruh method yang ada dikelas tempat dideklarasikan. \r\n', 'Hanya dalam method yang mendeklarasikannya saja.\r\n\r\n', 'Seluruh kelas yang ada.\r\n', 'Tidak ada yang mengenalinya.', 'b'),
('m02', 'm02q02', 'Manakah yang tidak termasuk dalam aturan penulisan variabel ?\r\n', 'Nama tidak boleh mengandung spasi.\r\n', 'Nama variabel tidak boleh menggunakan kata kunci yang sudah didefinisikan dalam java.\r\n', 'Dalam satu blok program, nama variabel harus berbesifat unik atau berbeda satu sama lain.\r\n\r\n', 'Nama variabel tidak boleh panjang. ', 'd'),
('m02', 'm02q03', 'Manakah yang benar mengenai deklarasi variabel dibawah ini :\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">short phi=3.14;</font>', 'b'),
('m02', 'm02q04', 'Diantara pernyataan-pernyataan berikut ini, manakah pernyataan assignment yang benar?\r\n\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = "c";</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String huruf = ‘c’;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = c;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = ‘c’;</font>', 'd'),
('m02', 'm02q05', 'Diantara pernyataan-pernyataan berikut ini, manakah pernyataan assignment yang benar?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char kegiatan = "workshop";</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String kegiatan = ‘workshop’;</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char kegiatan = workshop;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String kegiatan = “workshop”;</font>', 'd'),
('m03', 'm03q01', 'Manakah yang merupakan cara penulisan tipe data primitif?\r\n', 'Ditulis dengan huruf kecil.\r\n', 'Diawali dengan huruf besar.\r\n', 'Ditulis dengan huruf Besarkecil.\r\n', 'Ditulis dengan huruf besar seluruhnya.\r\n', 'a'),
('m03', 'm03q02', 'Manakah yang bukan termasuk dalam tipe data primitif?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String </font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font>', 'b'),
('m03', 'm03q03', 'images/postquestions/m03q03.jpg', 'Deklarasi variabel phi pada baris 1 salah\r\n', 'Pada baris 2 yang diberi tanda kurung seharusnya berada pada tipe data bukan variablenya \r\n\r\n', 'Pada baris 2 Kedua variable dan  tipe integer harus diberi tanda kurung \r\n', 'Tidak bisa dilakukan casting dari tipe data double ke integer.', 'b'),
('m03', 'm03q04', 'Manakah yang merupakan penggunaan tipe data yang benar pada variabel dibawah ini?\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char pilihan=”a”;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int pilihan=”a”;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double pilihan=’a’;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char pilihan=’a’;</font>', 'd'),
('m03', 'm03q05', 'Manakah yang merupakan penggunaan tipe data yang benar pada variabel dibawah ini?', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char a=”5”;</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int a=5;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double a=’5’;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char a=5;</font>', 'b'),
('m04', 'm04q01', 'Manakah pernyataan yang salah mengenai tipe data String?\r\n', 'Tipe data String merupakan tipe data object\r\n', 'Tipe data String merupakan tipe data primitif \r\n', 'Tipe data String memiliki method-method yang bisa diakses\r\n', 'Pengaksesan method-method pada kelas String menggunakan sintax (.) titik\r\n', 'b'),
('m04', 'm04q02', 'Manakah bukan anggota kelas wrapper?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Boolean</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Char</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Character</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Integer</font>', 'b'),
('m04', 'm04q03', 'Manakah yang termasuk method bawaan kelas String?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public int length()</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">length</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public char charAt(int index)</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">public String replace (char oldChar, char newChar)</font>\r\n', 'b'),
('m04', 'm04q04', 'images/postquestions/m04q04.jpg', 'Deklarasi variabel bilangan pada baris 1 salah\r\n', 'Pemanggilan variabel String pada baris kedua seharusnya menggunakan tanda petik. \r\n', 'Pengaksesan method parseInt seharusnya menggunakan tanda titik (.)\r\n', 'Tidak bisa dilakukan casting dari String ke integer.\r\n', 'c'),
('m04', 'm04q05', 'images/postquestions/m04q05.jpg', 'Bebek', 'Goreng', 'makanan', 'BebekGoreng', 'd'),
('m05', 'm05q01', 'images/postquestions/m05q01.jpg', '‘3’\r\n', '‘5’\r\n\r\n', '‘A’\r\n', '‘0’', 'b'),
('m05', 'm05q02', 'Manakah tentang deklarasi Array berikut yang salah ?\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Array a = new Array(5); </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int [] a = {23, 22, 21, 20, 19}; </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int [] array; </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int array [] = new int[5]; </font>', 'd'),
('m05', 'm05q03', 'Statement mana yang akan menciptakan array bertipe double yang terdiri dari angka 5.2, 7.0, dan -2.5?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list[ ] = { 5.2, 7.0, -2.5 };</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list[3] = { 5.2, 7.0, -2.5 };</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list = [ 5.2, 7.0, -2.5 ];</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">list double[3] = [ 5.2, 7.0, -2.5 ];,</font>', 'a'),
('m05', 'm05q04', 'images/postquestions/m05q04.jpg', 'x[24] adalah 0\r\n\r\n', 'x[24] tidak didefinisikan\r\n', 'x[25] adalah 0\r\n', 'x[0] adalah null', 'a'),
('m05', 'm05q05', 'Mana diantara pilihan berikut ini yang merupakan tipe data index yang valid untuk mengakses anggota dari array?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">boolean</font>', 'a'),
('m06', 'm06q01', 'Carilah bentuk yang paling sederhana dari pertanyaan logika A B̅ C+A B̅  C̅\r\n', 'A B̅\r\n', ' B̅ (A + C̅ )\r\n', 'A\r\n', '1', 'a'),
('m06', 'm06q02', 'Carilah bentuk yang paling sederhana dari pertanyaan logika ( A̅ + B ) ( A + B ) ', 'A', 'B', '1', '0', 'b'),
('m06', 'm06q03', 'Carilah bentuk yang paling sederhana dari pertanyaan logika ( A̅ B̅ C̅  +  A̅ B  C̅  + A B̅ C̅ +  A B C̅  ) ', 'A̅ B̅ C̅ ', 'A̅\r\n', 'C̅ ', 'B̅', 'c'),
('m06', 'm06s04', 'Carilah bentuk yang paling sederhana dari pertanyaan logika ( A + B ) ( A + C ) ', 'A', 'B', 'A + BC', 'A + B', 'c'),
('m06', 'm06q05', 'Carilah bentuk yang paling sederhana dari pertanyaan logika (A̅ B C̅) + (A̅ B C) + (A B C)', 'B (A̅ + C̅)', 'B', '(A̅ + C̅)', ' C̅', 'a'),
('m07', 'm07q01', 'images/postquestions/m07q01.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">237</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">100237</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Tidak ada, class tidak dapat dikompilasi</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Kelas dapat dikompilasi, namun menghasilkan error ketika dijalankan</font> ', 'b'),
('m07', 'm07q02', 'images/postquestions/m07q02.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=10, y=10, z=22</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=11, y=11, z=22<font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=10, y=10, z=20</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=11, y=11, z=20</font>', 'b'),
('m07', 'm07q03', 'images/postquestions/m07q03.jpg', '11', '13', '25', '9', 'b'),
('m07', 'm07q04', 'images/postquestions/m07q04.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">anak</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Ayam</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">anakAyam</font>\r\n', 'String tidak bisa dijumlahkan', 'c'),
('m07', 'm07q05', 'images/postquestions/m07q05.jpg', '11\r\n', '13', '25', '9', 'c'),
('m08', 'm08q01', 'images/postquestions/m08q01.jpg', '27', '28', '29', '30', 'b'),
('m08', 'm08q02', 'images/postquestions/m08q02.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 15, a = 7, b = 8</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 15, a = 6, b = 7</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x= 13, a = 7, b = 8</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 13, a = 6, b = 7</font>', 'c'),
('m08', 'm08q03', 'images/postquestions/m08q03.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 11, a = 5, b = 6</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 11, a = 6, b = 7</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 13, a = 5, b = 6</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 13, a = 6, b = 7</font>', 'c'),
('m08', 'm08q04', 'images/postquestions/m08q04.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 15, a = 7, b = 8</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 15, a = 6, b = 7</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 13, a = 7, b = 8</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x = 13, a = 6, b = 7</font>', 'a'),
('m08', 'm08q05', 'images/postquestions/m08q05.jpg', 'Nomor unicode dari a yaitu 97.\r\n', 'Nomor unicode dari b yaitu 98.\r\n', 'Nomor unicode dari x yaitu 120.\r\n\r\n', 'Char tidak bisa di-increment.', 'b'),
('m09', 'm09q01', 'images/postquestions/m09q01.jpg', 'truetruetruetrue\r\n', 'truetruetruefalse\r\n', 'truetruefalsetrue\r\n\r\n', 'falsefalsefalsefalse', 'b'),
('m09', 'm09q02', 'images/postquestions/m09q02.jpg', 'true\r\n', 'false', 'test', '11\r\n', 'd'),
('m09', 'm09q03', 'images/postquestions/m09q03.jpg', 'Baris ke-7\r\n\r\n', 'Baris ke-8\r\n', 'Baris ke-9\r\n\r\n', 'Baris ke-10', 'd'),
('m09', 'm09q04', 'images/postquestions/m09q04.jpg', 'Baris ke-7', 'Baris ke-8', 'Baris ke-9\r\n\r\n\r\n', 'Baris ke-10', 'c'),
('m09', 'm09q05', 'images/postquestions/m09q05.jpg', 'Baris ke-7\r\n', 'Baris ke-8\r\n\r\n\r\n', 'Baris ke-9\r\n', 'Baris ke-10', 'a'),
('m10', 'm10q01', 'images/postquestions/m10q01.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Lulus</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Gagal</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">status</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">80</font>', 'a'),
('m10', 'm10q02', 'images/postquestions/m10q02.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truefalse</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">falsetrue</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truetrue</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">falsefalse</font>', 'b'),
('m10', 'm10q03', 'images/postquestions/m10q03.jpg', '0', '1', '2', '3', 'b'),
('m10', 'm10q04', 'images/postquestions/m10q04.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 false</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 false</font>', 'c'),
('m10', 'm10q05', 'images/postquestions/m10q05.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 false</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 false</font>', 'a'),
('m11', 'm11q01', 'Manakah diantara operator berikut ini yang memiliki prioritas operasi yang paling tinggi?', '+', '%', '/\r\n', '( )', 'd'),
('m11', 'm11q02', 'images/postquestions/m11q02.jpg', '6\r\n', '10\r\n\r\n', '2\r\n', '-2\r\n', 'a'),
('m11', 'm11q03', 'images/postquestions/m11q03.jpg', '11\r\n\r\n', '13\r\n', '25\r\n', '9', 'b'),
('m11', 'm11q04', 'images/postquestions/m11q04.jpg', '11\r\n', '13\r\n', '25\r\n\r\n', '9', 'c'),
('m11', 'm11q05', 'images/postquestions/m11q05.jpg', '5', '8\r\n', '4\r\n', '9\r\n', 'a'),
('m12', 'm12q01', 'images/postquestions/m12q01.jpg', 'Menampilkan kalimat "<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font> "sekali', 'Menampilkan kalimat ”<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font>” sebanyak 10 kali', 'Menampilkan kalimat ”<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font>” sebanyak 9 kali ', 'Menampilkan kalimat ”<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font>” sebanyak 11 kali', 'b'),
('m12', 'm12q02', 'images/postquestions/m12q02.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,10,20,</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,01,02</font>', 'Kelas tidak dapat dikompilasi.', 'b'),
('m12', 'm12q03', 'images/postquestions/m12q03.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java</font> sebanyak 9 kali', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java</font> sebanyak 1 kali', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java</font> sebanyak 10 kali\r\n', 'Tidak ada jawaban yang benar', 'c'),
('m12', 'm12q04', 'images/postquestions/m12q04.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1,  i = 2, i = 3, i = 4, i = 5,  i = 6, i = 7,  i = 8, i = 9,</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1, i = 3, i = 4, i = 6, i = 7,  i = 8, i = 9,</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2, i = 5,</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2,</font>', 'c'),
('m12', 'm12q05', 'images/postquestions/m12q05.jpg', '0\r\n', '1', '2', 'Program tidak bisa di-compile karena ada pernyataan "i=++i;"\r\n', 'c'),
('m13', 'm13q01', 'images/postquestions/m13q01.jpg', '2', 'merah', 'kuning', 'hijau', 'c'),
('m13', 'm13q02', 'images/postquestions/m13q02.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Benar^_^</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Salah!</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">jawaban</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">kunciJawaban</font>', 'b'),
('m13', 'm13q03', 'images/postquestions/m13q03.jpg', 'Kode diatas tidak akan dicompile\r\n', '"<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Ada sesuatu yang benar di dunia ini?</font>" akan dicetak\r\n', '"<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Tidak akan dicompile</font>" akan dicetak', 'Tidak ada pilihan diatas yang benar', 'b'),
('m13', 'm13q04', 'images/postquestions/m13q04.jpg', 'Baris 3\r\n\r\n', 'Baris 4\r\n', 'Baris 5\r\n', 'Baris 6\r\n', 'b'),
('m13', 'm13q05', 'images/postquestions/m13q05.jpg', '1 2 5\r\n', '1 4 5\r\n\r\n', '2 3 4 5\r\n', '1 2 3 4\r\n', 'c'),
('m14', 'm14q01', 'images/postquestions/m14q01.jpg', '0\r\n\r\n', '1\r\n', '2\r\n', '1   2', 'd'),
('m14', 'm14q02', 'images/postquestions/m14q02.jpg', 'Variabel j yang dapat diterima sebagai argument dari switch () haruslah byte, short, int , atau long\r\n', 'Output dari kode diatas adalah "<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">nilai j adalah 2</font>"\r\n', 'Output dari kode diatas adalah "<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">nilai j adalah 2" diikuti dengan "nilai j adalah 3</font>"', 'Output dari kode diatas adalah "<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">nilai j adalah 2", diikuti dengan "nilai j adalah 3", dan diikuti dengan "nilai j adalah 2</font>"', 'c'),
('m14', 'm14q03', 'images/postquestions/m14q03.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">3</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Merah</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Kuning</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Hijau<?font>', 'd'),
('m14', 'm14q04', 'images/postquestions/m14q04.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">A</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">MerahKuning</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">KuningHijau</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Merah</font>', 'd'),
('m14', 'm14q05', 'images/postquestions/m14q05.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">A</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">MerahKuning</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">KuningHijau</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Merah</font>\r\n', 'b'),
('m15', 'm15q01', 'images/postquestions/m15q01.jpg', '5 4 3 2 1', '5 4 3 2 1 0', '4 3 2 1 0', '4 3 2 1', 'a'),
('m15', 'm15q02', 'images/postquestions/m15q02.jpg', 'Nilai bil 0 \r\n', 'Nilai bil 5\r\n', 'Nilai bil 6', 'Perulangan tidak akan selesai (nilai bil dari 0 sampai tak hingga)', 'd'),
('m15', 'm15q03', 'images/postquestions/m15q03.jpg', '0', '4', '8', '12', 'c'),
('m15', 'm15q04', 'images/postquestions/m15q04.jpg', 'Posisi masukan bil salah ', 'proses menghitung nilai jumlah salah', 'n belum diberikan nilai ', 'posisi akhir program salah', 'c'),
('m15', 'm15q05', 'images/postquestions/m15q05.jpg', 'Kalimat “Selamat Belajar” sekali saja\r\n', 'Kalimat “Selamat Belajar” sebanyak 4 kali\r\n', 'Kalimat “Selamat Belajar” sebanyak 5 kali\r\n\r\n', 'Kalimat “Selesai”', 'b');

-- --------------------------------------------------------

--
-- Table structure for table `pretestlog`
--

CREATE TABLE IF NOT EXISTS `pretestlog` (
  `iduser` varchar(15) NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`iduser`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `pretestlog`
--

INSERT INTO `pretestlog` (`iduser`, `date`) VALUES
('herer', '2013-10-08 05:31:36'),
('ggggg', '2013-10-08 06:00:57'),
('henca', '2013-10-12 06:08:06'),
('angel', '2013-10-08 09:01:03'),
('tes', '2013-10-11 16:48:28'),
('', '2013-10-11 17:17:14'),
('baru', '2013-10-12 06:13:33'),
('fampir', '2013-10-12 06:17:56'),
('asd', '2013-10-19 12:33:06'),
('ramads', '2013-10-30 03:39:15'),
('zzzzz', '2013-10-30 05:31:24'),
('cobani', '2013-10-30 06:15:46'),
('snsd', '2013-11-04 04:49:34'),
('ramaditia', '2013-11-04 08:02:00'),
('yellow', '2013-11-04 08:57:28'),
('black', '2013-11-04 10:04:22'),
('F1B009037', '2013-11-17 05:05:22'),
('F1B008083', '2013-11-18 07:20:55'),
('F1D012052', '2013-11-18 07:25:00'),
('f1b009069', '2013-11-18 07:25:52'),
('f1b008085', '2013-11-18 07:30:59'),
('F1B006028', '2013-11-18 07:32:07'),
('F1B009027', '2013-11-18 07:35:18'),
('sariIsmi', '2013-11-18 07:50:12'),
('F1D012066', '2013-11-18 08:58:12'),
('f1b009003', '2013-11-18 09:03:23'),
('f1b009021', '2013-11-18 09:13:39'),
('dbudy', '2013-11-18 09:25:36'),
('ranin', '2013-11-21 03:09:15'),
('daniel', '2013-12-05 05:38:15'),
('F1B008011', '2013-12-07 04:51:56'),
('F1D013089', '2013-12-09 23:49:06'),
('F1D013073', '2013-12-07 07:58:19'),
('f1d013001', '2013-12-07 08:00:06'),
('F1B008055', '2013-12-09 18:45:46'),
('F1D013079', '2013-12-07 08:02:24'),
('F1D013009', '2013-12-07 08:03:33'),
('F1D013095', '2013-12-07 08:05:51'),
('F1D013097', '2013-12-07 08:13:17'),
('F1D013057', '2013-12-07 08:13:26'),
('F1D013077', '2013-12-07 08:15:05'),
('F1D013029', '2013-12-09 23:52:44'),
('F1D013041', '2013-12-09 23:50:12'),
('F1D013093', '2013-12-07 08:17:57'),
('F1D013047', '2013-12-10 06:45:37'),
('F1D013015', '2013-12-10 06:50:38'),
('f1d013061', '2013-12-10 06:51:12'),
('F1D013003', '2013-12-10 06:54:06'),
('jeki378', '2013-12-10 06:54:09'),
('F1D013049', '2013-12-10 06:54:45'),
('F1D013059', '2013-12-10 07:02:21'),
('f1d013099', '2013-12-10 07:03:01'),
('F1D013087', '2013-12-10 07:03:02'),
('F1D013075', '2013-12-10 07:05:23'),
('F1D013067', '2013-12-10 07:07:56'),
('f1d013043', '2013-12-10 07:08:12'),
('F1D013033', '2013-12-10 07:14:33'),
('f1d013069', '2013-12-10 07:16:47'),
('F1D013031', '2013-12-10 07:45:15'),
('f1d013091', '2013-12-09 23:53:54'),
('F1D013005', '2013-12-09 23:59:39'),
('f1d013045', '2013-12-10 00:01:19'),
('f1d013025', '2013-12-10 00:06:40'),
('f1d013021', '2013-12-10 00:13:29'),
('f1d013085', '2013-12-10 00:19:17'),
('f1d013035', '2013-12-09 23:57:36'),
('F1D0130300', '2013-12-09 23:58:19'),
('F1D013027', '2013-12-09 23:58:39'),
('F1D013023', '2013-12-09 23:58:47'),
('F1D013037', '2013-12-10 00:05:29'),
('f1d013007', '2013-12-10 00:10:16'),
('F1D013017', '2013-12-10 00:10:33'),
('f1d013071', '2013-12-10 00:17:11'),
('anonanon', '2013-12-10 00:17:12'),
('F1D013055', '2013-12-10 00:18:44'),
('F1D013042', '2013-12-10 00:21:26'),
('F1D013012', '2013-12-10 00:28:38');

-- --------------------------------------------------------

--
-- Table structure for table `pretestquestion`
--

CREATE TABLE IF NOT EXISTS `pretestquestion` (
  `idtype` int(11) NOT NULL,
  `idquest` int(11) NOT NULL AUTO_INCREMENT,
  `question` text NOT NULL,
  `ansA` text NOT NULL,
  `ansB` text NOT NULL,
  `ansC` text NOT NULL,
  `ansD` text NOT NULL,
  `corectAns` enum('a','b','c','d') NOT NULL,
  PRIMARY KEY (`idquest`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=49 ;

--
-- Dumping data for table `pretestquestion`
--

INSERT INTO `pretestquestion` (`idtype`, `idquest`, `question`, `ansA`, `ansB`, `ansC`, `ansD`, `corectAns`) VALUES
(1, 1, 'Diantara pilihan berikut ini, manakah program utility JDK yang digunakan untuk melakukan compile file source code Java ke dalam bentuk bytecode?\r\n', 'Jar\r\n', 'Java\r\n', ' Javac\r\n', 'Javadoc\r\n', 'c'),
(1, 2, 'Kode yang telah dieksekusi dan diterjemahkan oleh Java Virtual Machine (JVM) akan disimpan dalam jenis tipe file apa?\r\n', '.class files\r\n', '.javac files', '.code files', '.java files', 'a'),
(1, 3, 'Ketika kelas public Java disimpan dalam <i>file source code</i> Java, hal-hal apakah yang harus benar mengenai penamaan <i>source file</i> sehubungan dengan penamaan kelas?\r\n', 'Penamaan harus berbeda.\r\n', 'Penamaan harus dimulai dengan huruf yang sama.\r\n', 'Penamaan harus serupa, tanpa memperhatikan ukuran huruf.\r\n', 'Penamaan harus benar - benar serupa termasuk huruf besar- kecil\r\n', 'd'),
(2, 4, 'Manakah yang benar mengenai deklarasi variabel dibawah ini :\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char phi=3.14;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">short phi=3.14;</font>\r\n', 'b'),
(2, 5, 'Diantara pernyataan-pernyataan berikut ini, manakah pernyataan <i>assignment</i> yang benar?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = "c";</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String huruf = ‘c’;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = c;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char huruf = ‘c’;</font>\r\n', 'd'),
(2, 6, 'Manakah cara yang benar dari potongan program proses <i>casting</i> berikut?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double phi=3.14;  int phi= int (phi); </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int phi=3.14;  double phi= double(phi);</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double phi=3.14;  int phi= double(phi);</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double phi=3.14;  int phi= (int) phi;</font>\r\n', 'd'),
(3, 7, ' Diantara pernyataan-pernyataan berikut ini, manakah pernyataan <i>assignment</i> yang benar?\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char kegiatan = "workshop";</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String kegiatan = ‘workshop’;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">char kegiatan = workshop;</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String kegiatan = “workshop”;</font>\r\n', 'd'),
(3, 8, 'Manakah bukan anggota kelas <i>wrapper</i>?\r\n', 'Boolean\r\n', 'Char\r\n', 'Character', 'Integer', 'b'),
(3, 9, 'Manakah yang salah mengenai cara <i>casting</i> dari <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">string</font> ke <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">integer ?</font>	', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String bilangan ="5"; int bil=Integer,parseInt(bilangan);</font>	', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String bilangan ="5"; int bil=Integer.parseInt(bilangan);</font>	', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String bilangan ="5"; int (bilangan);</font>	', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">String bilangan ="5"; int bil=Integer’parseInt(bilangan);</font>\r\n', 'b'),
(4, 10, 'Carilah bentuk yang paling sederhana dari pertanyaan logika A B̅ C+A B̅  C̅\r\n', 'A B̅\r\n', ' B̅ (A + C̅ )\r\n', 'A\r\n', '1\r\n', 'a'),
(4, 11, 'Carilah bentuk yang paling sederhana dari pertanyaan logika ( A̅ + B ) ( A + B ) \r\n ', 'A', 'B', '1', '0', 'b'),
(4, 12, 'Carilah bentuk yang paling sederhana dari pertanyaan logika ( A̅ B̅ C̅  +  A̅ B  C̅  + A B̅ C̅ +  A B C̅  ) \r\n\r\n	', 'A̅ B̅ C̅ \r\n', 'A̅\r\n', 'C̅ \r\n	\r\n	\r\n	\r\n', 'B̅', 'c'),
(5, 13, 'images/questions/question-5-13.jpg', '5 4 3 2 1\r\n\r\n', '5 4 3 2 1 0\r\n', '4 3 2 1 0\r\n', '4 3 2 1', 'a'),
(5, 14, 'images/questions/question-5-14.jpg', 'Nilai bil 0 \r\n\r\n', 'Nilai bil 5\r\n', 'Nilai bil 6\r\n ', 'Perulangan tidak akan selesai (nilai bil dari 0 sampai tak hingga)', 'd'),
(5, 15, 'images/questions/question-5-15.jpg', '0 \r\n\r\n', '4\r\n', '8\r\n', '12', 'c'),
(6, 16, 'Manakah tentang deklarasi Array berikut yang salah ?', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Array a = new Array(5); </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int [] a = {23, 22, 21, 20, 19};</font> \r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int [] array;</font> \r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int array [] = new int[5];</font> ', 'a'),
(6, 17, '<i>Statement</i> mana yang akan menciptakan array bertipe <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double</font> yang terdiri dari angka <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">5.2, 7.0,</font> dan <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">-2.5 ?</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list[ ] = { 5.2, 7.0, -2.5 };</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list[3] = { 5.2, 7.0, -2.5 };</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">double list = [ 5.2, 7.0, -2.5 ];</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">list double[3] = [ 5.2, 7.0, -2.5 ];</font>', 'a'),
(6, 18, 'Setelah eksekusi, <i>statement</i> mana yang benar dari kode <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">int x = new int[25]  ?</font> \r\n', 'x[24] adalah 0\r\n\r\n', 'x[24] tidak didefinisikan\r\n', 'x[25] adalah 0\r\n', 'x[0] adalah null', 'a'),
(7, 19, 'images/questions/question-7-19.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">for(int i=0; i < ia.length() -1; i++)</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">for (int i=0; i< ia.length(); i++)</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">for(int i=1; i < 4; i++)</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">for(int i=0; i< ia.length;i++)</font>', 'd'),
(7, 20, 'images/questions/question-7-20.jpg\r\n', '1 2 3 4 5\r\n', '3 4 5\r\n\r\n', '4 5\r\n', '1 2', 'c'),
(7, 21, 'images/questions/question-7-21.jpg', '1 2 3 4 5\r\n\r\n', '3 4 5\r\n', '4 5\r\n', '1 2', 'a'),
(8, 22, 'images/questions/question-8-22.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Lulus</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Gagal</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">status</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">80</font>', 'a'),
(8, 23, 'images/questions/question-8-23.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 true</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 true</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 false</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 false</font>', 'c'),
(8, 24, 'images/questions/question-8-24.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 true</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 10 false</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">0 11 false</font>', 'a'),
(9, 25, 'Apa yang menjadi output dari pernyataan berikut ini?<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">\r\n System.out.println(3*10*2/15-2+4^2^2);</font>\r\n', '6\r\n', '10\r\n\r\n', '2\r\n', '-2', 'a'),
(9, 26, 'images/questions/question-9-26.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">237</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">100237</font>\r\n', 'Tidak ada, class tidak dapat dikompilasi\r\n', 'Kelas dapat dikompilasi, namun menghasilkan error ketika dijalankan ', 'b'),
(9, 27, 'images/questions/question-9-27.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=10, y=10, z=22</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=11, y=11, z=22</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=10, y=10, z=20</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">x=11, y=11, z=20</font>', 'b'),
(10, 28, 'images/questions/question-10-28.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">27</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">28</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">29</font>', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">30</font>', 'b'),
(10, 29, 'images/questions/question-10-29.jpg', 'x = 15, a = 7, b = 8\r\n\r\n', 'x = 15, a = 6, b = 7\r\n', 'x= 13, a = 7, b = 8\r\n', 'x = 13, a = 6, b = 7', 'c'),
(10, 30, 'images/questions/question-10-30.jpg', 'x = 11, a = 5, b = 6\r\n\r\n', 'x = 11, a = 6, b = 7\r\n', 'x = 13, a = 5, b = 6\r\n', 'x = 13, a = 6, b = 7', 'c'),
(11, 31, 'images/questions/question-11-31.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truetruetruetrue</font> \r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truetruetruefalse</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truetruefalsetrue</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">truefalsefalsefalse</font>', 'b'),
(11, 32, 'images/questions/question-11-32.jpg', 'Baris ke-7\r\n\r\n', 'Baris ke-8\r\n', 'Baris ke-9\r\n', 'Baris ke-10', 'd'),
(11, 33, 'images/questions/question-11-33.jpg', 'Baris ke-7\r\n\r\n', 'Baris ke-8\r\n', 'Baris ke-9\r\n', 'Baris ke-10', 'c'),
(12, 34, 'images/questions/question-12-34.jpg 	', 'Menampilkan kalimat <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font> sekali\r\n\r\n', 'Menampilkan kalimat <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font> sebanyak 10 kali\r\n\r\n', 'Menampilkan kalimat <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font> sebanyak 9 kali\r\n\r\n', 'Menampilkan kalimat <font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Belajar Java itu menyenangkan</font> sebanyak 11 kali\r\n', 'b'),
(12, 35, 'images/questions/question-12-35.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,10,20,</font>\r\n\r\n\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">00,01,02</font>\r\n\r\n', 'Kelas tidak dapat dikompilasi.', 'b'),
(12, 36, 'images/questions/question-12-36.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java sebanyak 9 kali</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java sebanyak 1 kali</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">I love java sebanyak 10 kali</font>\r\n', 'Tidak ada jawaban yang benar', 'c'),
(13, 37, 'images/questions/question-13-37.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">2</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Merah</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Kuning</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Hijau</font>', 'c'),
(13, 38, 'images/questions/question-13-38.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Benar^_^</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Salah!</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">jawaban</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">kunciJawaban</font>', 'b'),
(13, 39, 'images/questions/question-13-39.jpg', 'Kode diatas tidak akan dicompile\r\n\r\n', '"Ada sesuatu yang benar di dunia ini?" akan dicetak\r\n', '"Tidak akan dicompile" akan dicetak\r\n', 'Tidak ada pilihan diatas yang benar', 'b'),
(14, 40, 'images/questions/question-14-40.jpg', 'Variabel j yang dapat diterima sebagai argument dari switch () haruslah byte, short, int , atau long\r\n', 'Output dari kode diatas adalah "nilai j adalah 2"\r\n', 'Output dari kode diatas adalah "nilai j adalah 2" diikuti dengan "nilai j adalah 3"\r\n\r\n', 'Output dari kode diatas adalah "nilai j adalah 2", diikuti dengan "nilai j adalah 3", dan diikuti dengan "nilai j adalah 2"', 'c'),
(14, 41, 'images/questions/question-14-41.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">1</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Merah</font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Kuning</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">Hijau</font>', 'b'),
(14, 42, 'images/questions/question-14-42.jpg', 'A\r\n', 'MerahKuning\r\n\r\n', 'Kuning\r\n', 'Merah', 'c'),
(15, 43, 'images/questions/question-15-43.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1,  i = 2, i = 3, i = 4, i = 5,  i = 6, i = 7,  i = 8, i = 9, </font>\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1, i = 3, i = 4, i = 6, i = 7,  i = 8, i = 9, </font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2, i = 5,</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2,</font>', 'c'),
(15, 44, 'images/questions/question-15-44.jpg', 'i = 0 j = 1\r\n\r\n', 'i = 0 j = 2\r\n', 'i = 1 j = 2\r\n', 'Untuk setiap iterasi perulangan jawaban A, B, dan C benar.', 'd'),
(15, 45, 'images/questions/question-15-45.jpg', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1,  i = 2, i = 3, i = 4, i = 5,  i = 6, i = 7,  i = 8, i = 9,  i = 10,</font>\r\n\r\n\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 0, i = 1, i = 3, i = 4, i = 6, i = 7,  i = 8, i = 9,  i = 10,</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2, i = 5,</font>\r\n', '<font style="font-family: ''Courier New'',Courier,monospace; font-size: 14px">i = 2,</font>', 'b');

-- --------------------------------------------------------

--
-- Table structure for table `pretestresult`
--

CREATE TABLE IF NOT EXISTS `pretestresult` (
  `idpretest` varchar(50) NOT NULL,
  `iduser` varchar(15) NOT NULL,
  `flag` enum('pretest','posttest') NOT NULL,
  `idtype` int(11) NOT NULL,
  `idquest` int(11) NOT NULL,
  `userAns` enum('a','b','c','d','x') NOT NULL,
  `result` tinyint(1) NOT NULL,
  PRIMARY KEY (`idpretest`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `pretestresult`
--

INSERT INTO `pretestresult` (`idpretest`, `iduser`, `flag`, `idtype`, `idquest`, `userAns`, `result`) VALUES
('ranin1', 'ranin', 'pretest', 1, 3, 'x', 0),
('ranin2', 'ranin', 'pretest', 2, 4, 'x', 0),
('ranin3', 'ranin', 'pretest', 3, 8, 'x', 0),
('ranin4', 'ranin', 'pretest', 4, 12, 'x', 0),
('ranin5', 'ranin', 'pretest', 5, 13, 'x', 0),
('ranin6', 'ranin', 'pretest', 6, 17, 'x', 0),
('ranin7', 'ranin', 'pretest', 7, 21, 'x', 0),
('ranin8', 'ranin', 'pretest', 8, 22, 'x', 0),
('ranin9', 'ranin', 'pretest', 9, 27, 'x', 0),
('ranin10', 'ranin', 'pretest', 10, 30, 'x', 0),
('ranin11', 'ranin', 'pretest', 11, 32, 'x', 0),
('ranin12', 'ranin', 'pretest', 12, 35, 'x', 0),
('ranin13', 'ranin', 'pretest', 13, 39, 'x', 0),
('ranin14', 'ranin', 'pretest', 14, 42, 'x', 0),
('F1B0090371', 'F1B009037', 'pretest', 1, 3, 'c', 0),
('F1B0090372', 'F1B009037', 'pretest', 2, 6, 'd', 1),
('F1B0090373', 'F1B009037', 'pretest', 3, 7, 'd', 1),
('F1B0090374', 'F1B009037', 'pretest', 4, 10, 'b', 0),
('F1B0090375', 'F1B009037', 'pretest', 5, 13, 'a', 1),
('F1B0090376', 'F1B009037', 'pretest', 6, 16, 'd', 0),
('F1B0090377', 'F1B009037', 'pretest', 7, 19, 'b', 0),
('F1B0090378', 'F1B009037', 'pretest', 8, 22, 'a', 1),
('F1B0090379', 'F1B009037', 'pretest', 9, 27, 'b', 1),
('F1B00903710', 'F1B009037', 'pretest', 10, 29, 'c', 1),
('F1B00903711', 'F1B009037', 'pretest', 11, 33, 'd', 0),
('F1B00903712', 'F1B009037', 'pretest', 12, 35, 'b', 1),
('F1B00903713', 'F1B009037', 'pretest', 13, 39, 'b', 1),
('F1B00903714', 'F1B009037', 'pretest', 14, 40, 'b', 0),
('F1B00903715', 'F1B009037', 'pretest', 15, 44, 'd', 1),
('F1B0080831', 'F1B008083', 'pretest', 1, 3, 'a', 0),
('F1B0080832', 'F1B008083', 'pretest', 2, 4, 'b', 1),
('F1B0080833', 'F1B008083', 'pretest', 3, 8, 'd', 0),
('F1B0080834', 'F1B008083', 'pretest', 4, 11, 'd', 0),
('F1B0080835', 'F1B008083', 'pretest', 5, 13, 'a', 1),
('F1B0080836', 'F1B008083', 'pretest', 6, 16, 'a', 1),
('F1B0080837', 'F1B008083', 'pretest', 7, 19, 'b', 0),
('f1b0090691', 'f1b009069', 'pretest', 1, 2, 'a', 1),
('f1b0090692', 'f1b009069', 'pretest', 2, 5, 'd', 1),
('f1b0090693', 'f1b009069', 'pretest', 3, 8, 'c', 0),
('F1B0080838', 'F1B008083', 'pretest', 8, 23, 'd', 0),
('F1B0080839', 'F1B008083', 'pretest', 9, 25, 'a', 1),
('F1B00808310', 'F1B008083', 'pretest', 10, 30, 'a', 0),
('F1D0120521', 'F1D012052', 'pretest', 1, 2, 'd', 0),
('F1B00808311', 'F1B008083', 'pretest', 11, 32, 'd', 1),
('F1D0120522', 'F1D012052', 'pretest', 2, 5, 'a', 0),
('F1B00808312', 'F1B008083', 'pretest', 12, 34, 'b', 1),
('f1b0090694', 'f1b009069', 'pretest', 4, 10, 'a', 1),
('F1B00808313', 'F1B008083', 'pretest', 13, 37, 'c', 1),
('F1D0120523', 'F1D012052', 'pretest', 3, 9, 'b', 1),
('f1b0090695', 'f1b009069', 'pretest', 5, 15, 'c', 1),
('f1b0090696', 'f1b009069', 'pretest', 6, 16, 'a', 1),
('F1B00808314', 'F1B008083', 'pretest', 14, 40, 'c', 1),
('F1D0120524', 'F1D012052', 'pretest', 4, 11, 'b', 1),
('f1b0090697', 'f1b009069', 'pretest', 7, 21, 'a', 1),
('F1B00808315', 'F1B008083', 'pretest', 15, 45, 'b', 1),
('F1D0120525', 'F1D012052', 'pretest', 5, 13, 'd', 0),
('f1b0080851', 'f1b008085', 'pretest', 1, 1, 'd', 0),
('f1b0090698', 'f1b009069', 'pretest', 8, 24, 'b', 0),
('F1D0120526', 'F1D012052', 'pretest', 6, 18, 'b', 0),
('f1b0080852', 'f1b008085', 'pretest', 2, 6, 'b', 0),
('f1b0080853', 'f1b008085', 'pretest', 3, 7, 'a', 0),
('F1D0120527', 'F1D012052', 'pretest', 7, 20, 'd', 0),
('f1b0080854', 'f1b008085', 'pretest', 4, 12, 'a', 0),
('f1b0080855', 'f1b008085', 'pretest', 5, 13, 'a', 1),
('f1b0080856', 'f1b008085', 'pretest', 6, 16, 'a', 1),
('f1b0090699', 'f1b009069', 'pretest', 9, 27, 'b', 1),
('F1D0120528', 'F1D012052', 'pretest', 8, 23, 'c', 1),
('f1b00906910', 'f1b009069', 'pretest', 10, 30, 'd', 0),
('f1b0080857', 'f1b008085', 'pretest', 7, 20, 'c', 1),
('F1D0120529', 'F1D012052', 'pretest', 9, 25, 'a', 1),
('f1b0080858', 'f1b008085', 'pretest', 8, 24, 'b', 0),
('F1D01205210', 'F1D012052', 'pretest', 10, 28, 'b', 1),
('f1b00906911', 'f1b009069', 'pretest', 11, 32, 'd', 1),
('F1D01205211', 'F1D012052', 'pretest', 11, 31, 'c', 0),
('F1D01205212', 'F1D012052', 'pretest', 12, 34, 'c', 0),
('F1D01205213', 'F1D012052', 'pretest', 13, 37, 'a', 0),
('F1D01205214', 'F1D012052', 'pretest', 14, 42, 'b', 0),
('f1b00906912', 'f1b009069', 'pretest', 12, 36, 'c', 1),
('f1b0080859', 'f1b008085', 'pretest', 9, 26, 'd', 0),
('f1b00906913', 'f1b009069', 'pretest', 13, 37, 'c', 1),
('f1b00906914', 'f1b009069', 'pretest', 14, 42, 'c', 1),
('F1D01205215', 'F1D012052', 'pretest', 15, 43, 'b', 0),
('f1b00808510', 'f1b008085', 'pretest', 10, 28, 'd', 0),
('f1b00906915', 'f1b009069', 'pretest', 15, 43, 'c', 1),
('f1b00808511', 'f1b008085', 'pretest', 11, 32, 'd', 1),
('f1b00808512', 'f1b008085', 'pretest', 12, 34, 'd', 0),
('f1b00808513', 'f1b008085', 'pretest', 13, 38, 'b', 1),
('f1b00808514', 'f1b008085', 'pretest', 14, 40, 'a', 0),
('F1B0060281', 'F1B006028', 'pretest', 1, 3, 'a', 0),
('F1B0060282', 'F1B006028', 'pretest', 2, 4, 'b', 1),
('F1B0060283', 'F1B006028', 'pretest', 3, 7, 'b', 0),
('F1B0060284', 'F1B006028', 'pretest', 4, 10, 'b', 0),
('F1B0090271', 'F1B009027', 'pretest', 1, 1, 'c', 1),
('f1b00808515', 'f1b008085', 'pretest', 15, 45, 'c', 0),
('F1B0060285', 'F1B006028', 'pretest', 5, 14, 'b', 0),
('F1B0090272', 'F1B009027', 'pretest', 2, 5, 'd', 1),
('F1B0060286', 'F1B006028', 'pretest', 6, 18, 'b', 0),
('F1B0060287', 'F1B006028', 'pretest', 7, 21, 'b', 0),
('F1B0090273', 'F1B009027', 'pretest', 3, 7, 'd', 1),
('F1B0060288', 'F1B006028', 'pretest', 8, 22, 'b', 0),
('F1B0090274', 'F1B009027', 'pretest', 4, 11, 'b', 1),
('F1B0060289', 'F1B006028', 'pretest', 9, 25, 'b', 0),
('F1B00602810', 'F1B006028', 'pretest', 10, 29, 'b', 0),
('F1B0090275', 'F1B009027', 'pretest', 5, 13, 'a', 1),
('F1B00602811', 'F1B006028', 'pretest', 11, 32, 'b', 0),
('F1B00602812', 'F1B006028', 'pretest', 12, 36, 'c', 1),
('F1B00602813', 'F1B006028', 'pretest', 13, 39, 'b', 1),
('F1B00602814', 'F1B006028', 'pretest', 14, 42, 'b', 0),
('F1B00602815', 'F1B006028', 'pretest', 15, 44, 'b', 0),
('F1B0090276', 'F1B009027', 'pretest', 6, 16, 'd', 0),
('F1B0090277', 'F1B009027', 'pretest', 7, 20, 'b', 0),
('F1B0090278', 'F1B009027', 'pretest', 8, 22, 'a', 1),
('F1B0090279', 'F1B009027', 'pretest', 9, 26, 'b', 1),
('F1B00902710', 'F1B009027', 'pretest', 10, 28, 'b', 1),
('sariIsmi1', 'sariIsmi', 'pretest', 1, 3, 'd', 1),
('F1B00902711', 'F1B009027', 'pretest', 11, 33, 'b', 0),
('F1B00902712', 'F1B009027', 'pretest', 12, 35, 'b', 1),
('F1B00902713', 'F1B009027', 'pretest', 13, 38, 'b', 1),
('F1B00902714', 'F1B009027', 'pretest', 14, 42, 'c', 1),
('sariIsmi2', 'sariIsmi', 'pretest', 2, 5, 'c', 0),
('F1B00902715', 'F1B009027', 'pretest', 15, 45, 'c', 0),
('sariIsmi3', 'sariIsmi', 'pretest', 3, 8, 'b', 1),
('sariIsmi4', 'sariIsmi', 'pretest', 4, 11, 'd', 0),
('sariIsmi5', 'sariIsmi', 'pretest', 5, 15, 'a', 0),
('sariIsmi6', 'sariIsmi', 'pretest', 6, 18, 'c', 0),
('sariIsmi7', 'sariIsmi', 'pretest', 7, 19, 'c', 0),
('sariIsmi8', 'sariIsmi', 'pretest', 8, 23, 'd', 0),
('sariIsmi9', 'sariIsmi', 'pretest', 9, 25, 'a', 1),
('sariIsmi10', 'sariIsmi', 'pretest', 10, 28, 'b', 1),
('sariIsmi11', 'sariIsmi', 'pretest', 11, 33, 'c', 1),
('sariIsmi12', 'sariIsmi', 'pretest', 12, 35, 'c', 0),
('sariIsmi13', 'sariIsmi', 'pretest', 13, 39, 'd', 0),
('sariIsmi14', 'sariIsmi', 'pretest', 14, 40, 'x', 0),
('sariIsmi15', 'sariIsmi', 'pretest', 15, 45, 'b', 1),
('F1D0120661', 'F1D012066', 'pretest', 1, 1, 'b', 0),
('F1D0120662', 'F1D012066', 'pretest', 2, 5, 'a', 0),
('F1D0120663', 'F1D012066', 'pretest', 3, 8, 'a', 0),
('F1D0120664', 'F1D012066', 'pretest', 4, 11, 'b', 1),
('F1D0120665', 'F1D012066', 'pretest', 5, 15, 'c', 1),
('F1D0120666', 'F1D012066', 'pretest', 6, 16, 'c', 0),
('F1D0120667', 'F1D012066', 'pretest', 7, 19, 'd', 1),
('F1D0120668', 'F1D012066', 'pretest', 8, 22, 'c', 0),
('F1D0120669', 'F1D012066', 'pretest', 9, 25, 'c', 0),
('F1D01206610', 'F1D012066', 'pretest', 10, 30, 'a', 0),
('F1D01206611', 'F1D012066', 'pretest', 11, 31, 'b', 1),
('F1D01206612', 'F1D012066', 'pretest', 12, 34, 'b', 1),
('F1D01206613', 'F1D012066', 'pretest', 13, 38, 'b', 1),
('F1D01206614', 'F1D012066', 'pretest', 14, 41, 'b', 1),
('F1D01206615', 'F1D012066', 'pretest', 15, 45, 'b', 1),
('dbudy1', 'dbudy', 'pretest', 1, 3, 'd', 1),
('dbudy2', 'dbudy', 'pretest', 2, 6, 'c', 0),
('dbudy3', 'dbudy', 'pretest', 3, 8, 'd', 0),
('dbudy4', 'dbudy', 'pretest', 4, 12, 'c', 1),
('dbudy5', 'dbudy', 'pretest', 5, 14, 'c', 0),
('dbudy6', 'dbudy', 'pretest', 6, 16, 'd', 0),
('f1b0090211', 'f1b009021', 'pretest', 1, 1, 'a', 0),
('f1b0090212', 'f1b009021', 'pretest', 2, 4, 'b', 1),
('dbudy7', 'dbudy', 'pretest', 7, 20, 'd', 0),
('f1b0090213', 'f1b009021', 'pretest', 3, 9, 'b', 1),
('f1b0090214', 'f1b009021', 'pretest', 4, 10, 'b', 0),
('f1b0090215', 'f1b009021', 'pretest', 5, 13, 'a', 1),
('f1b0090216', 'f1b009021', 'pretest', 6, 16, 'd', 0),
('f1b0090217', 'f1b009021', 'pretest', 7, 21, 'a', 1),
('f1b0090218', 'f1b009021', 'pretest', 8, 23, 'd', 0),
('f1b0090219', 'f1b009021', 'pretest', 9, 25, 'a', 1),
('f1b00902110', 'f1b009021', 'pretest', 10, 28, 'd', 0),
('f1b00902111', 'f1b009021', 'pretest', 11, 31, 'b', 1),
('f1b00902112', 'f1b009021', 'pretest', 12, 36, 'c', 1),
('f1b00902113', 'f1b009021', 'pretest', 13, 39, 'c', 0),
('f1b00902114', 'f1b009021', 'pretest', 14, 41, 'c', 0),
('f1b00902115', 'f1b009021', 'pretest', 15, 43, 'c', 1),
('dbudy8', 'dbudy', 'pretest', 8, 23, 'd', 0),
('dbudy9', 'dbudy', 'pretest', 9, 26, 'a', 0),
('dbudy10', 'dbudy', 'pretest', 10, 28, 'b', 1),
('dbudy11', 'dbudy', 'pretest', 11, 31, 'b', 1),
('dbudy12', 'dbudy', 'pretest', 12, 36, 'c', 1),
('dbudy13', 'dbudy', 'pretest', 13, 37, 'c', 1),
('dbudy14', 'dbudy', 'pretest', 14, 41, 'b', 1),
('dbudy15', 'dbudy', 'pretest', 15, 45, 'b', 1),
('ranin15', 'ranin', 'pretest', 15, 43, 'c', 1),
('daniel1', 'daniel', 'pretest', 1, 3, 'a', 0),
('daniel2', 'daniel', 'pretest', 2, 5, 'd', 1),
('daniel3', 'daniel', 'pretest', 3, 9, 'b', 1),
('daniel4', 'daniel', 'pretest', 4, 12, 'c', 1),
('daniel5', 'daniel', 'pretest', 5, 15, 'c', 1),
('daniel6', 'daniel', 'pretest', 6, 18, 'a', 1),
('daniel7', 'daniel', 'pretest', 7, 20, 'a', 0),
('daniel8', 'daniel', 'pretest', 8, 24, 'd', 0),
('daniel9', 'daniel', 'pretest', 9, 25, 'a', 1),
('daniel10', 'daniel', 'pretest', 10, 28, 'b', 1),
('daniel11', 'daniel', 'pretest', 11, 32, 'c', 0),
('daniel12', 'daniel', 'pretest', 12, 35, 'b', 1),
('daniel13', 'daniel', 'pretest', 13, 37, 'b', 0),
('daniel14', 'daniel', 'pretest', 14, 40, 'd', 0),
('daniel15', 'daniel', 'pretest', 15, 45, 'c', 0),
('F1B0080111', 'F1B008011', 'pretest', 1, 1, 'c', 1),
('F1B0080112', 'F1B008011', 'pretest', 2, 4, 'b', 1),
('F1B0080113', 'F1B008011', 'pretest', 3, 8, 'a', 0),
('F1B0080114', 'F1B008011', 'pretest', 4, 10, 'c', 0),
('F1B0080115', 'F1B008011', 'pretest', 5, 13, 'a', 1),
('F1B0080116', 'F1B008011', 'pretest', 6, 17, 'a', 1),
('F1B0080117', 'F1B008011', 'pretest', 7, 21, 'a', 1),
('F1B0080118', 'F1B008011', 'pretest', 8, 24, 'b', 0),
('F1B0080119', 'F1B008011', 'pretest', 9, 25, 'a', 1),
('F1B00801110', 'F1B008011', 'pretest', 10, 29, 'c', 1),
('F1B00801111', 'F1B008011', 'pretest', 11, 31, 'd', 0),
('F1B00801112', 'F1B008011', 'pretest', 12, 34, 'b', 1),
('F1B00801113', 'F1B008011', 'pretest', 13, 38, 'b', 1),
('F1B00801114', 'F1B008011', 'pretest', 14, 40, 'b', 0),
('F1B00801115', 'F1B008011', 'pretest', 15, 45, 'd', 0),
('F1D0130971', 'F1D013097', 'pretest', 1, 1, 'b', 0),
('F1D0130972', 'F1D013097', 'pretest', 2, 4, 'b', 1),
('F1D0130973', 'F1D013097', 'pretest', 3, 7, 'a', 0),
('F1D0130791', 'F1D013079', 'pretest', 1, 1, 'c', 1),
('F1D0130091', 'F1D013009', 'pretest', 1, 1, 'b', 0),
('F1D0130731', 'F1D013073', 'pretest', 1, 3, 'd', 1),
('F1D0130092', 'F1D013009', 'pretest', 2, 4, 'a', 0),
('F1D0130974', 'F1D013097', 'pretest', 4, 12, 'c', 1),
('F1D0130732', 'F1D013073', 'pretest', 2, 4, 'a', 0),
('F1D0130733', 'F1D013073', 'pretest', 3, 8, 'b', 1),
('F1D0130292', 'F1D013029', 'pretest', 2, 6, 'c', 0),
('F1D0130093', 'F1D013009', 'pretest', 3, 9, 'c', 0),
('F1D0130975', 'F1D013097', 'pretest', 5, 13, 'a', 1),
('F1D0130291', 'F1D013029', 'pretest', 1, 1, 'c', 1),
('F1D0130792', 'F1D013079', 'pretest', 2, 6, 'b', 0),
('F1D0130734', 'F1D013073', 'pretest', 4, 10, 'a', 1),
('F1D0130793', 'F1D013079', 'pretest', 3, 8, 'a', 0),
('F1D01308914', 'F1D013089', 'pretest', 14, 41, 'b', 1),
('F1D0130976', 'F1D013097', 'pretest', 6, 16, 'd', 0),
('F1D0130735', 'F1D013073', 'pretest', 5, 14, 'c', 0),
('F1D0130094', 'F1D013009', 'pretest', 4, 11, 'c', 0),
('F1D0130736', 'F1D013073', 'pretest', 6, 16, 'x', 0),
('F1D0130794', 'F1D013079', 'pretest', 4, 12, 'd', 0),
('F1D0130977', 'F1D013097', 'pretest', 7, 20, 'b', 0),
('F1D01308913', 'F1D013089', 'pretest', 13, 37, 'c', 1),
('F1D0130095', 'F1D013009', 'pretest', 5, 15, 'd', 0),
('F1D0130795', 'F1D013079', 'pretest', 5, 13, 'a', 1),
('F1D0130951', 'F1D013095', 'pretest', 1, 1, 'b', 0),
('F1D0130737', 'F1D013073', 'pretest', 7, 21, 'a', 1),
('F1D0130096', 'F1D013009', 'pretest', 6, 17, 'a', 1),
('F1D0130952', 'F1D013095', 'pretest', 2, 5, 'a', 0),
('F1D01308912', 'F1D013089', 'pretest', 12, 34, 'd', 0),
('F1D0130097', 'F1D013009', 'pretest', 7, 19, 'a', 0),
('f1d0130011', 'f1d013001', 'pretest', 1, 3, 'b', 0),
('f1d0130012', 'f1d013001', 'pretest', 2, 6, 'x', 0),
('F1D0130796', 'F1D013079', 'pretest', 6, 17, 'b', 0),
('F1D0130098', 'F1D013009', 'pretest', 8, 24, 'd', 0),
('f1d0130013', 'f1d013001', 'pretest', 3, 9, 'a', 0),
('F1D0130953', 'F1D013095', 'pretest', 3, 9, 'c', 0),
('F1D0130738', 'F1D013073', 'pretest', 8, 23, 'c', 1),
('F1D0130954', 'F1D013095', 'pretest', 4, 11, 'c', 0),
('F1D01308911', 'F1D013089', 'pretest', 11, 33, 'c', 1),
('F1D0130978', 'F1D013097', 'pretest', 8, 24, 'b', 0),
('F1D0130955', 'F1D013095', 'pretest', 5, 15, 'c', 1),
('F1D0130099', 'F1D013009', 'pretest', 9, 27, 'b', 1),
('F1D01308910', 'F1D013089', 'pretest', 10, 30, 'a', 0),
('F1D0130739', 'F1D013073', 'pretest', 9, 27, 'b', 1),
('F1D0130956', 'F1D013095', 'pretest', 6, 18, 'c', 0),
('F1D0130797', 'F1D013079', 'pretest', 7, 20, 'd', 0),
('F1D01308915', 'F1D013089', 'pretest', 15, 44, 'a', 0),
('f1d0130014', 'f1d013001', 'pretest', 4, 10, 'd', 0),
('F1D01307310', 'F1D013073', 'pretest', 10, 30, 'b', 0),
('F1D01307311', 'F1D013073', 'pretest', 11, 31, 'd', 0),
('F1D01307312', 'F1D013073', 'pretest', 12, 35, 'd', 0),
('F1D01307313', 'F1D013073', 'pretest', 13, 37, 'c', 1),
('F1D01300910', 'F1D013009', 'pretest', 10, 30, 'a', 0),
('f1d0130015', 'f1d013001', 'pretest', 5, 13, 'a', 1),
('F1D0130798', 'F1D013079', 'pretest', 8, 23, 'a', 0),
('F1D0130957', 'F1D013095', 'pretest', 7, 20, 'b', 0),
('F1D0130899', 'F1D013089', 'pretest', 9, 26, 'x', 0),
('f1d0130016', 'f1d013001', 'pretest', 6, 18, 'c', 0),
('F1D01307314', 'F1D013073', 'pretest', 14, 42, 'c', 1),
('f1d0130017', 'f1d013001', 'pretest', 7, 20, 'x', 0),
('f1d0130018', 'f1d013001', 'pretest', 8, 23, 'c', 1),
('F1D01307315', 'F1D013073', 'pretest', 15, 45, 'c', 0),
('f1d0130019', 'f1d013001', 'pretest', 9, 26, 'x', 0),
('F1D0130898', 'F1D013089', 'pretest', 8, 23, 'd', 0),
('F1D0130799', 'F1D013079', 'pretest', 9, 25, 'c', 0),
('F1D01307910', 'F1D013079', 'pretest', 10, 30, 'b', 0),
('F1D0130897', 'F1D013089', 'pretest', 7, 19, 'b', 0),
('f1d01300110', 'f1d013001', 'pretest', 10, 30, 'c', 1),
('f1d01300111', 'f1d013001', 'pretest', 11, 31, 'x', 0),
('F1D01307911', 'F1D013079', 'pretest', 11, 31, 'b', 1),
('f1d01300112', 'f1d013001', 'pretest', 12, 34, 'x', 0),
('f1d01300113', 'f1d013001', 'pretest', 13, 38, 'b', 1),
('F1D0130896', 'F1D013089', 'pretest', 6, 16, 'c', 0),
('f1d01300114', 'f1d013001', 'pretest', 14, 40, 'x', 0),
('f1d01300115', 'f1d013001', 'pretest', 15, 43, 'x', 0),
('F1D01307912', 'F1D013079', 'pretest', 12, 35, 'c', 0),
('F1D0130895', 'F1D013089', 'pretest', 5, 15, 'd', 0),
('F1D0130894', 'F1D013089', 'pretest', 4, 12, 'c', 1),
('F1D01300911', 'F1D013009', 'pretest', 11, 32, 'b', 0),
('F1D01307913', 'F1D013079', 'pretest', 13, 39, 'b', 1),
('F1D0130893', 'F1D013089', 'pretest', 3, 9, 'b', 1),
('F1D0130892', 'F1D013089', 'pretest', 2, 4, 'b', 1),
('F1D01307914', 'F1D013079', 'pretest', 14, 40, 'b', 0),
('F1D0130891', 'F1D013089', 'pretest', 1, 2, 'b', 0),
('F1D01300912', 'F1D013009', 'pretest', 12, 35, 'd', 0),
('F1D01307915', 'F1D013079', 'pretest', 15, 45, 'c', 0),
('F1D01300913', 'F1D013009', 'pretest', 13, 39, 'd', 0),
('F1D01300914', 'F1D013009', 'pretest', 14, 41, 'b', 1),
('F1D01300915', 'F1D013009', 'pretest', 15, 45, 'c', 0),
('F1D0130958', 'F1D013095', 'pretest', 8, 24, 'c', 0),
('F1D0130959', 'F1D013095', 'pretest', 9, 26, 'b', 1),
('F1D01309510', 'F1D013095', 'pretest', 10, 30, 'a', 0),
('F1D0130979', 'F1D013097', 'pretest', 9, 25, 'x', 0),
('F1D01309511', 'F1D013095', 'pretest', 11, 33, 'a', 0),
('F1D0130571', 'F1D013057', 'pretest', 1, 2, 'd', 0),
('F1D01309512', 'F1D013095', 'pretest', 12, 35, 'b', 1),
('F1D01309513', 'F1D013095', 'pretest', 13, 38, 'c', 0),
('F1D01309514', 'F1D013095', 'pretest', 14, 41, 'x', 0),
('F1D0130572', 'F1D013057', 'pretest', 2, 6, 'd', 1),
('F1D0130573', 'F1D013057', 'pretest', 3, 8, 'x', 0),
('F1D01309515', 'F1D013095', 'pretest', 15, 44, 'c', 0),
('F1D0130574', 'F1D013057', 'pretest', 4, 11, 'c', 0),
('F1D0130575', 'F1D013057', 'pretest', 5, 13, 'a', 1),
('F1D01309710', 'F1D013097', 'pretest', 10, 29, 'a', 0),
('F1D0130576', 'F1D013057', 'pretest', 6, 18, 'c', 0),
('F1D0130577', 'F1D013057', 'pretest', 7, 21, 'a', 1),
('F1D01309711', 'F1D013097', 'pretest', 11, 32, 'd', 1),
('F1D0130578', 'F1D013057', 'pretest', 8, 23, 'a', 0),
('F1D01302915', 'F1D013029', 'pretest', 15, 45, 'b', 1),
('F1D0130579', 'F1D013057', 'pretest', 9, 26, 'b', 1),
('F1D01309712', 'F1D013097', 'pretest', 12, 35, 'c', 0),
('F1D0130771', 'F1D013077', 'pretest', 1, 1, 'd', 0),
('F1D01302914', 'F1D013029', 'pretest', 14, 40, 'c', 1),
('F1D01302913', 'F1D013029', 'pretest', 13, 38, 'a', 0),
('F1D0130772', 'F1D013077', 'pretest', 2, 5, 'a', 0),
('F1D01305710', 'F1D013057', 'pretest', 10, 28, 'b', 1),
('F1D0130773', 'F1D013077', 'pretest', 3, 7, 'a', 0),
('F1D01309713', 'F1D013097', 'pretest', 13, 38, 'b', 1),
('F1D0130774', 'F1D013077', 'pretest', 4, 10, 'a', 1),
('F1D01309714', 'F1D013097', 'pretest', 14, 41, 'b', 1),
('F1D01305711', 'F1D013057', 'pretest', 11, 33, 'c', 1),
('F1D0130931', 'F1D013093', 'pretest', 1, 2, 'd', 0),
('F1D01302912', 'F1D013029', 'pretest', 12, 36, 'a', 0),
('F1D0130775', 'F1D013077', 'pretest', 5, 14, 'c', 0),
('F1D0130776', 'F1D013077', 'pretest', 6, 17, 'b', 0),
('F1D01305712', 'F1D013057', 'pretest', 12, 35, 'b', 1),
('F1D0130777', 'F1D013077', 'pretest', 7, 20, 'c', 1),
('F1D0130778', 'F1D013077', 'pretest', 8, 22, 'a', 1),
('F1D01302911', 'F1D013029', 'pretest', 11, 33, 'b', 0),
('F1D0130932', 'F1D013093', 'pretest', 2, 4, 'a', 0),
('F1D0130933', 'F1D013093', 'pretest', 3, 8, 'a', 0),
('F1D01305713', 'F1D013057', 'pretest', 13, 39, 'c', 0),
('F1D0130934', 'F1D013093', 'pretest', 4, 10, 'd', 0),
('F1D01305714', 'F1D013057', 'pretest', 14, 40, 'a', 0),
('F1D0130935', 'F1D013093', 'pretest', 5, 13, 'c', 0),
('f1d0130914', 'f1d013091', 'pretest', 4, 12, 'b', 0),
('F1D0130779', 'F1D013077', 'pretest', 9, 25, 'a', 1),
('F1D0130936', 'F1D013093', 'pretest', 6, 16, 'a', 1),
('F1D01307710', 'F1D013077', 'pretest', 10, 30, 'c', 1),
('f1d0130851', 'f1d013085', 'pretest', 1, 1, 'b', 0),
('F1D01309715', 'F1D013097', 'pretest', 15, 45, 'b', 1),
('F1D01304110', 'F1D013041', 'pretest', 10, 28, 'a', 0),
('F1D01307711', 'F1D013077', 'pretest', 11, 31, 'a', 0),
('F1D01305715', 'F1D013057', 'pretest', 15, 43, 'c', 1),
('f1d0130913', 'f1d013091', 'pretest', 3, 8, 'a', 0),
('F1D01307712', 'F1D013077', 'pretest', 12, 34, 'a', 0),
('f1d0130912', 'f1d013091', 'pretest', 2, 5, 'c', 0),
('F1D01302910', 'F1D013029', 'pretest', 10, 28, 'b', 1),
('F1D0130419', 'F1D013041', 'pretest', 9, 26, 'b', 1),
('F1D0130937', 'F1D013093', 'pretest', 7, 20, 'a', 0),
('F1D0130299', 'F1D013029', 'pretest', 9, 26, 'c', 0),
('F1D01307713', 'F1D013077', 'pretest', 13, 37, 'a', 0),
('f1d0130911', 'f1d013091', 'pretest', 1, 2, 'd', 0),
('F1D0130938', 'F1D013093', 'pretest', 8, 23, 'b', 0),
('F1D01307714', 'F1D013077', 'pretest', 14, 42, 'b', 0),
('F1D0130418', 'F1D013041', 'pretest', 8, 23, 'a', 0),
('F1D0130939', 'F1D013093', 'pretest', 9, 26, 'b', 1),
('F1D01307715', 'F1D013077', 'pretest', 15, 44, 'c', 0),
('F1D0130417', 'F1D013041', 'pretest', 7, 20, 'c', 1),
('F1D01309310', 'F1D013093', 'pretest', 10, 29, 'a', 0),
('F1D0130298', 'F1D013029', 'pretest', 8, 24, 'c', 0),
('F1D0130416', 'F1D013041', 'pretest', 6, 18, 'c', 0),
('F1D01309311', 'F1D013093', 'pretest', 11, 33, 'a', 0),
('F1D0130297', 'F1D013029', 'pretest', 7, 21, 'c', 0),
('F1D0130296', 'F1D013029', 'pretest', 6, 17, 'b', 0),
('F1D0130295', 'F1D013029', 'pretest', 5, 13, 'a', 1),
('F1D0130415', 'F1D013041', 'pretest', 5, 13, 'a', 1),
('F1D01309312', 'F1D013093', 'pretest', 12, 36, 'c', 1),
('F1D0130294', 'F1D013029', 'pretest', 4, 10, 'a', 1),
('F1D0130414', 'F1D013041', 'pretest', 4, 12, 'c', 1),
('F1D0130413', 'F1D013041', 'pretest', 3, 8, 'a', 0),
('F1D0130293', 'F1D013029', 'pretest', 3, 9, 'c', 0),
('F1D0130412', 'F1D013041', 'pretest', 2, 4, 'a', 0),
('F1D0130411', 'F1D013041', 'pretest', 1, 1, 'd', 0),
('F1D0130751', 'F1D013075', 'pretest', 1, 1, 'c', 1),
('F1D0130752', 'F1D013075', 'pretest', 2, 5, 'a', 0),
('F1D01309313', 'F1D013093', 'pretest', 13, 39, 'd', 0),
('F1D01309314', 'F1D013093', 'pretest', 14, 40, 'a', 0),
('F1D0130753', 'F1D013075', 'pretest', 3, 7, 'd', 1),
('F1D01309315', 'F1D013093', 'pretest', 15, 45, 'a', 0),
('F1D0130754', 'F1D013075', 'pretest', 4, 11, 'c', 0),
('F1D0130471', 'F1D013047', 'pretest', 1, 1, 'd', 0),
('F1D0130472', 'F1D013047', 'pretest', 2, 6, 'b', 0),
('F1D0130473', 'F1D013047', 'pretest', 3, 7, 'c', 0),
('f1d0130611', 'f1d013061', 'pretest', 1, 1, 'a', 0),
('F1D0130474', 'F1D013047', 'pretest', 4, 12, 'c', 1),
('F1D0130475', 'F1D013047', 'pretest', 5, 15, 'b', 0),
('F1D0130476', 'F1D013047', 'pretest', 6, 17, 'x', 0),
('f1d0130612', 'f1d013061', 'pretest', 2, 6, 'b', 0),
('F1D0130477', 'F1D013047', 'pretest', 7, 19, 'c', 0),
('f1d0130613', 'f1d013061', 'pretest', 3, 7, 'b', 0),
('F1D0130151', 'F1D013015', 'pretest', 1, 2, 'd', 0),
('F1D0130478', 'F1D013047', 'pretest', 8, 23, 'b', 0),
('F1D0130479', 'F1D013047', 'pretest', 9, 27, 'c', 0),
('f1d0130614', 'f1d013061', 'pretest', 4, 11, 'b', 1),
('F1D0130152', 'F1D013015', 'pretest', 2, 5, 'a', 0),
('F1D01304710', 'F1D013047', 'pretest', 10, 29, 'a', 0),
('F1D0130491', 'F1D013049', 'pretest', 1, 3, 'd', 1),
('F1D01304711', 'F1D013047', 'pretest', 11, 33, 'd', 0),
('f1d0130615', 'f1d013061', 'pretest', 5, 13, 'd', 0),
('F1D01304712', 'F1D013047', 'pretest', 12, 34, 'b', 1),
('F1D0130153', 'F1D013015', 'pretest', 3, 9, 'c', 0),
('F1D0130492', 'F1D013049', 'pretest', 2, 4, 'a', 0),
('F1D0130493', 'F1D013049', 'pretest', 3, 8, 'a', 0),
('f1d0130616', 'f1d013061', 'pretest', 6, 16, 'c', 0),
('F1D01304713', 'F1D013047', 'pretest', 13, 38, 'b', 1),
('F1D0130154', 'F1D013015', 'pretest', 4, 10, 'b', 0),
('F1D0130031', 'F1D013003', 'pretest', 1, 3, 'd', 1),
('f1d0130617', 'f1d013061', 'pretest', 7, 20, 'd', 0),
('F1D01304714', 'F1D013047', 'pretest', 14, 40, 'b', 0),
('F1D0130032', 'F1D013003', 'pretest', 2, 6, 'a', 0),
('F1D0130494', 'F1D013049', 'pretest', 4, 12, 'c', 1),
('F1D0130155', 'F1D013015', 'pretest', 5, 15, 'c', 1),
('F1D01304715', 'F1D013047', 'pretest', 15, 45, 'c', 0),
('F1D0130033', 'F1D013003', 'pretest', 3, 8, 'd', 0),
('f1d0130618', 'f1d013061', 'pretest', 8, 23, 'c', 1),
('F1D0130156', 'F1D013015', 'pretest', 6, 17, 'd', 0),
('F1D0130495', 'F1D013049', 'pretest', 5, 14, 'd', 1),
('F1D0130157', 'F1D013015', 'pretest', 7, 21, 'c', 0),
('f1d0130619', 'f1d013061', 'pretest', 9, 25, 'd', 0),
('F1D0130034', 'F1D013003', 'pretest', 4, 11, 'b', 1),
('F1D0130496', 'F1D013049', 'pretest', 6, 18, 'c', 0),
('F1D0130158', 'F1D013015', 'pretest', 8, 23, 'd', 0),
('f1d0130991', 'f1d013099', 'pretest', 1, 1, 'b', 0),
('F1D0130159', 'F1D013015', 'pretest', 9, 26, 'd', 0),
('f1d01306110', 'f1d013061', 'pretest', 10, 30, 'd', 0),
('F1D0130497', 'F1D013049', 'pretest', 7, 21, 'a', 1),
('F1D01301510', 'F1D013015', 'pretest', 10, 29, 'd', 0),
('F1D0130035', 'F1D013003', 'pretest', 5, 14, 'b', 0),
('jeki3781', 'jeki378', 'pretest', 1, 3, 'a', 0),
('F1D01301511', 'F1D013015', 'pretest', 11, 33, 'b', 0),
('F1D0130591', 'F1D013059', 'pretest', 1, 2, 'd', 0),
('jeki3782', 'jeki378', 'pretest', 2, 5, 'a', 0),
('f1d01306111', 'f1d013061', 'pretest', 11, 33, 'c', 1),
('F1D0130036', 'F1D013003', 'pretest', 6, 17, 'b', 0),
('F1D01301512', 'F1D013015', 'pretest', 12, 35, 'c', 0),
('jeki3783', 'jeki378', 'pretest', 3, 7, 'd', 1),
('f1d01306112', 'f1d013061', 'pretest', 12, 36, 'a', 0),
('jeki3784', 'jeki378', 'pretest', 4, 11, 'b', 1),
('F1D0130498', 'F1D013049', 'pretest', 8, 23, 'd', 0),
('F1D01301513', 'F1D013015', 'pretest', 13, 39, 'a', 0),
('F1D0130037', 'F1D013003', 'pretest', 7, 21, 'a', 1),
('f1d01306113', 'f1d013061', 'pretest', 13, 38, 'd', 0),
('jeki3785', 'jeki378', 'pretest', 5, 14, 'x', 0),
('F1D0130499', 'F1D013049', 'pretest', 9, 26, 'b', 1),
('F1D0130038', 'F1D013003', 'pretest', 8, 24, 'b', 0),
('F1D0130871', 'F1D013087', 'pretest', 1, 3, 'd', 1),
('F1D0130671', 'F1D013067', 'pretest', 1, 1, 'a', 0),
('F1D0130592', 'F1D013059', 'pretest', 2, 6, 'x', 0),
('F1D01301514', 'F1D013015', 'pretest', 14, 41, 'b', 1),
('F1D0130039', 'F1D013003', 'pretest', 9, 26, 'c', 0),
('F1D01301515', 'F1D013015', 'pretest', 15, 45, 'c', 0),
('jeki3786', 'jeki378', 'pretest', 6, 16, 'd', 0),
('f1d01306114', 'f1d013061', 'pretest', 14, 40, 'c', 1),
('f1d01306115', 'f1d013061', 'pretest', 15, 45, 'b', 1),
('jeki3787', 'jeki378', 'pretest', 7, 19, 'b', 0),
('f1d0130431', 'f1d013043', 'pretest', 1, 2, 'd', 0),
('F1D01304910', 'F1D013049', 'pretest', 10, 28, 'c', 0),
('jeki3788', 'jeki378', 'pretest', 8, 23, 'b', 0),
('F1D0130872', 'F1D013087', 'pretest', 2, 5, 'a', 0),
('F1D0130672', 'F1D013067', 'pretest', 2, 6, 'b', 0),
('F1D01300310', 'F1D013003', 'pretest', 10, 29, 'c', 1),
('F1D0130673', 'F1D013067', 'pretest', 3, 8, 'a', 0),
('F1D01304911', 'F1D013049', 'pretest', 11, 32, 'd', 1),
('F1D0130873', 'F1D013087', 'pretest', 3, 7, 'a', 0),
('jeki3789', 'jeki378', 'pretest', 9, 27, 'd', 0),
('F1D01304912', 'F1D013049', 'pretest', 12, 36, 'c', 1),
('f1d0130992', 'f1d013099', 'pretest', 2, 6, 'b', 0),
('F1D0130874', 'F1D013087', 'pretest', 4, 10, 'a', 1),
('F1D0130674', 'F1D013067', 'pretest', 4, 10, 'a', 1),
('jeki37810', 'jeki378', 'pretest', 10, 28, 'a', 0),
('jeki37811', 'jeki378', 'pretest', 11, 31, 'a', 0),
('F1D01300311', 'F1D013003', 'pretest', 11, 33, 'b', 0),
('F1D0130593', 'F1D013059', 'pretest', 3, 7, 'd', 1),
('f1d0130993', 'f1d013099', 'pretest', 3, 8, 'a', 0),
('F1D01300312', 'F1D013003', 'pretest', 12, 35, 'd', 0),
('F1D01304913', 'F1D013049', 'pretest', 13, 39, 'd', 0),
('jeki37812', 'jeki378', 'pretest', 12, 36, 'a', 0),
('F1D01300313', 'F1D013003', 'pretest', 13, 38, 'd', 0),
('f1d0130432', 'f1d013043', 'pretest', 2, 4, 'a', 0),
('jeki37813', 'jeki378', 'pretest', 13, 39, 'a', 0),
('F1D01300314', 'F1D013003', 'pretest', 14, 40, 'c', 1),
('jeki37814', 'jeki378', 'pretest', 14, 40, 'c', 1),
('F1D01304914', 'F1D013049', 'pretest', 14, 42, 'c', 1),
('F1D0130755', 'F1D013075', 'pretest', 5, 14, 'c', 0),
('F1D01300315', 'F1D013003', 'pretest', 15, 43, 'a', 0),
('F1D0130594', 'F1D013059', 'pretest', 4, 11, 'c', 0),
('jeki37815', 'jeki378', 'pretest', 15, 43, 'd', 0),
('f1d0130994', 'f1d013099', 'pretest', 4, 11, 'c', 0),
('F1D0130875', 'F1D013087', 'pretest', 5, 13, 'a', 1),
('F1D0130756', 'F1D013075', 'pretest', 6, 16, 'c', 0),
('F1D0130595', 'F1D013059', 'pretest', 5, 13, 'a', 1),
('F1D01304915', 'F1D013049', 'pretest', 15, 43, 'b', 0),
('F1D0130675', 'F1D013067', 'pretest', 5, 14, 'a', 0),
('F1D0130876', 'F1D013087', 'pretest', 6, 18, 'c', 0),
('F1D0130757', 'F1D013075', 'pretest', 7, 20, 'd', 0),
('F1D0130596', 'F1D013059', 'pretest', 6, 18, 'b', 0),
('f1d0130995', 'f1d013099', 'pretest', 5, 15, 'a', 0),
('F1D0130758', 'F1D013075', 'pretest', 8, 22, 'c', 0),
('F1D0130597', 'F1D013059', 'pretest', 7, 21, 'a', 1),
('f1d0130433', 'f1d013043', 'pretest', 3, 9, 'c', 0),
('f1d0130434', 'f1d013043', 'pretest', 4, 11, 'x', 0),
('f1d0130996', 'f1d013099', 'pretest', 6, 16, 'b', 0),
('F1D0130598', 'F1D013059', 'pretest', 8, 22, 'b', 0),
('F1D0130676', 'F1D013067', 'pretest', 6, 16, 'c', 0),
('f1d0130997', 'f1d013099', 'pretest', 7, 20, 'a', 0),
('f1d0130998', 'f1d013099', 'pretest', 8, 23, 'a', 0),
('F1D0130877', 'F1D013087', 'pretest', 7, 20, 'a', 0),
('F1D0130759', 'F1D013075', 'pretest', 9, 27, 'd', 0),
('F1D0130599', 'F1D013059', 'pretest', 9, 26, 'c', 0),
('F1D0130878', 'F1D013087', 'pretest', 8, 23, 'b', 0),
('F1D0130677', 'F1D013067', 'pretest', 7, 19, 'c', 0),
('F1D01307510', 'F1D013075', 'pretest', 10, 30, 'd', 0),
('F1D01305910', 'F1D013059', 'pretest', 10, 29, 'd', 0),
('f1d0130999', 'f1d013099', 'pretest', 9, 27, 'a', 0),
('F1D0130879', 'F1D013087', 'pretest', 9, 27, 'c', 0),
('F1D01305911', 'F1D013059', 'pretest', 11, 31, 'a', 0),
('f1d01309910', 'f1d013099', 'pretest', 10, 30, 'd', 0),
('F1D01308710', 'F1D013087', 'pretest', 10, 28, 'b', 1),
('F1D01305912', 'F1D013059', 'pretest', 12, 35, 'd', 0),
('F1D01307511', 'F1D013075', 'pretest', 11, 33, 'b', 0),
('F1D01307512', 'F1D013075', 'pretest', 12, 36, 'a', 0),
('f1d01309911', 'f1d013099', 'pretest', 11, 33, 'd', 0),
('F1D01308711', 'F1D013087', 'pretest', 11, 33, 'c', 1),
('f1d01309912', 'f1d013099', 'pretest', 12, 36, 'c', 1),
('F1D01308712', 'F1D013087', 'pretest', 12, 34, 'b', 1),
('F1D0130678', 'F1D013067', 'pretest', 8, 23, 'a', 0),
('f1d0130435', 'f1d013043', 'pretest', 5, 14, 'c', 0),
('F1D01305913', 'F1D013059', 'pretest', 13, 38, 'd', 0),
('f1d0130436', 'f1d013043', 'pretest', 6, 18, 'c', 0),
('f1d01309913', 'f1d013099', 'pretest', 13, 38, 'd', 0),
('F1D01308713', 'F1D013087', 'pretest', 13, 37, 'c', 1),
('f1d0130437', 'f1d013043', 'pretest', 7, 19, 'd', 1),
('f1d01309914', 'f1d013099', 'pretest', 14, 41, 'a', 0),
('F1D01305914', 'F1D013059', 'pretest', 14, 40, 'd', 0),
('F1D01308714', 'F1D013087', 'pretest', 14, 41, 'b', 1),
('F1D01307513', 'F1D013075', 'pretest', 13, 39, 'c', 0),
('F1D01305915', 'F1D013059', 'pretest', 15, 43, 'c', 1),
('f1d01309915', 'f1d013099', 'pretest', 15, 43, 'c', 1),
('F1D01308715', 'F1D013087', 'pretest', 15, 43, 'c', 1),
('F1D0130679', 'F1D013067', 'pretest', 9, 25, 'd', 0),
('f1d0130438', 'f1d013043', 'pretest', 8, 22, 'c', 0),
('F1D01307514', 'F1D013075', 'pretest', 14, 42, 'c', 1),
('F1D01306710', 'F1D013067', 'pretest', 10, 28, 'a', 0),
('f1d0130439', 'f1d013043', 'pretest', 9, 26, 'd', 0),
('F1D01306711', 'F1D013067', 'pretest', 11, 33, 'c', 1),
('F1D01307515', 'F1D013075', 'pretest', 15, 44, 'c', 0),
('f1d01304310', 'f1d013043', 'pretest', 10, 28, 'a', 0),
('F1D01306712', 'F1D013067', 'pretest', 12, 35, 'c', 0),
('f1d01304311', 'f1d013043', 'pretest', 11, 33, 'c', 1),
('F1D01306713', 'F1D013067', 'pretest', 13, 38, 'd', 0),
('f1d01304312', 'f1d013043', 'pretest', 12, 35, 'c', 0),
('F1D01306714', 'F1D013067', 'pretest', 14, 41, 'a', 0),
('f1d01304313', 'f1d013043', 'pretest', 13, 38, 'a', 0),
('F1D01306715', 'F1D013067', 'pretest', 15, 43, 'c', 1),
('f1d01304314', 'f1d013043', 'pretest', 14, 42, 'd', 0),
('f1d01304315', 'f1d013043', 'pretest', 15, 44, 'c', 0),
('F1D0130331', 'F1D013033', 'pretest', 1, 3, 'c', 0),
('F1D0130332', 'F1D013033', 'pretest', 2, 4, 'a', 0),
('F1D0130333', 'F1D013033', 'pretest', 3, 8, 'b', 1),
('F1D0130334', 'F1D013033', 'pretest', 4, 10, 'b', 0),
('F1D0130335', 'F1D013033', 'pretest', 5, 15, 'd', 0),
('F1D0130336', 'F1D013033', 'pretest', 6, 16, 'c', 0),
('F1D0130337', 'F1D013033', 'pretest', 7, 20, 'a', 0),
('F1D0130338', 'F1D013033', 'pretest', 8, 23, 'a', 0),
('f1d0130691', 'f1d013069', 'pretest', 1, 2, 'a', 1),
('F1D0130339', 'F1D013033', 'pretest', 9, 25, 'b', 0),
('F1D01303310', 'F1D013033', 'pretest', 10, 30, 'd', 0),
('f1d0130692', 'f1d013069', 'pretest', 2, 5, 'a', 0),
('F1D01303311', 'F1D013033', 'pretest', 11, 33, 'c', 1),
('F1D01303312', 'F1D013033', 'pretest', 12, 34, 'b', 1),
('F1D01303313', 'F1D013033', 'pretest', 13, 38, 'a', 0),
('f1d0130693', 'f1d013069', 'pretest', 3, 8, 'a', 0),
('f1d0130694', 'f1d013069', 'pretest', 4, 10, 'd', 0),
('F1D01303314', 'F1D013033', 'pretest', 14, 42, 'c', 1),
('F1D01303315', 'F1D013033', 'pretest', 15, 44, 'd', 1),
('f1d0130695', 'f1d013069', 'pretest', 5, 13, 'c', 0),
('f1d0130696', 'f1d013069', 'pretest', 6, 18, 'a', 1),
('f1d0130697', 'f1d013069', 'pretest', 7, 20, 'c', 1),
('f1d0130698', 'f1d013069', 'pretest', 8, 23, 'd', 0),
('f1d0130699', 'f1d013069', 'pretest', 9, 27, 'b', 1),
('f1d01306910', 'f1d013069', 'pretest', 10, 30, 'a', 0),
('f1d01306911', 'f1d013069', 'pretest', 11, 33, 'd', 0),
('f1d01306912', 'f1d013069', 'pretest', 12, 34, 'b', 1),
('f1d01306913', 'f1d013069', 'pretest', 13, 39, 'b', 1),
('f1d01306914', 'f1d013069', 'pretest', 14, 41, 'b', 1),
('f1d01306915', 'f1d013069', 'pretest', 15, 43, 'c', 1),
('F1D0130311', 'F1D013031', 'pretest', 1, 1, 'b', 0),
('F1D0130312', 'F1D013031', 'pretest', 2, 6, 'b', 0),
('F1D0130313', 'F1D013031', 'pretest', 3, 8, 'a', 0),
('F1D0130314', 'F1D013031', 'pretest', 4, 12, 'c', 1),
('F1D0130315', 'F1D013031', 'pretest', 5, 13, 'b', 0),
('F1D0130316', 'F1D013031', 'pretest', 6, 16, 'a', 1),
('F1D0130317', 'F1D013031', 'pretest', 7, 19, 'c', 0),
('F1D0130318', 'F1D013031', 'pretest', 8, 22, 'c', 0),
('F1D0130319', 'F1D013031', 'pretest', 9, 25, 'b', 0),
('F1D01303110', 'F1D013031', 'pretest', 10, 28, 'c', 0),
('F1D01303111', 'F1D013031', 'pretest', 11, 33, 'c', 1),
('F1D01303112', 'F1D013031', 'pretest', 12, 36, 'c', 1),
('F1D01303113', 'F1D013031', 'pretest', 13, 39, 'd', 0),
('F1D01303114', 'F1D013031', 'pretest', 14, 40, 'a', 0),
('F1D01303115', 'F1D013031', 'pretest', 15, 44, 'd', 1),
('f1d0130915', 'f1d013091', 'pretest', 5, 15, 'a', 0),
('F1D01304111', 'F1D013041', 'pretest', 11, 33, 'c', 1),
('f1d0130916', 'f1d013091', 'pretest', 6, 17, 'c', 0),
('F1D01304112', 'F1D013041', 'pretest', 12, 34, 'c', 0),
('F1D01304113', 'F1D013041', 'pretest', 13, 37, 'c', 1),
('f1d0130917', 'f1d013091', 'pretest', 7, 20, 'b', 0),
('F1D01304114', 'F1D013041', 'pretest', 14, 40, 'd', 0),
('f1d0130918', 'f1d013091', 'pretest', 8, 24, 'd', 0),
('f1d0130919', 'f1d013091', 'pretest', 9, 27, 'c', 0),
('F1D01304115', 'F1D013041', 'pretest', 15, 45, 'c', 0),
('f1d01309110', 'f1d013091', 'pretest', 10, 30, 'a', 0),
('f1d01309111', 'f1d013091', 'pretest', 11, 32, 'a', 0),
('f1d01309112', 'f1d013091', 'pretest', 12, 34, 'b', 1),
('F1D0130051', 'F1D013005', 'pretest', 1, 3, 'a', 0),
('F1D0130052', 'F1D013005', 'pretest', 2, 5, 'c', 0),
('F1D0130053', 'F1D013005', 'pretest', 3, 7, 'c', 0),
('f1d01309113', 'f1d013091', 'pretest', 13, 39, 'c', 0),
('f1d01309114', 'f1d013091', 'pretest', 14, 42, 'c', 1),
('f1d0130451', 'f1d013045', 'pretest', 1, 2, 'd', 0),
('F1D0130054', 'F1D013005', 'pretest', 4, 12, 'c', 1),
('f1d01309115', 'f1d013091', 'pretest', 15, 43, 'c', 1),
('f1d0130852', 'f1d013085', 'pretest', 2, 4, 'a', 0),
('F1D0130055', 'F1D013005', 'pretest', 5, 15, 'a', 0),
('F1D0130056', 'F1D013005', 'pretest', 6, 18, 'c', 0),
('f1d0130452', 'f1d013045', 'pretest', 2, 5, 'd', 1),
('F1D0130057', 'F1D013005', 'pretest', 7, 19, 'c', 0),
('f1d0130853', 'f1d013085', 'pretest', 3, 9, 'c', 0),
('F1D0130058', 'F1D013005', 'pretest', 8, 24, 'b', 0),
('F1D0130059', 'F1D013005', 'pretest', 9, 26, 'd', 0),
('f1d0130854', 'f1d013085', 'pretest', 4, 10, 'a', 1),
('f1d0130453', 'f1d013045', 'pretest', 3, 8, 'a', 0),
('F1D01300510', 'F1D013005', 'pretest', 10, 29, 'b', 0),
('F1D01300511', 'F1D013005', 'pretest', 11, 33, 'c', 1),
('F1D01300512', 'F1D013005', 'pretest', 12, 36, 'a', 0),
('f1d0130251', 'f1d013025', 'pretest', 1, 2, 'a', 1),
('F1D01300513', 'F1D013005', 'pretest', 13, 38, 'a', 0),
('f1d0130252', 'f1d013025', 'pretest', 2, 6, 'b', 0),
('F1D01300514', 'F1D013005', 'pretest', 14, 40, 'b', 0),
('f1d0130253', 'f1d013025', 'pretest', 3, 8, 'a', 0),
('F1D01300515', 'F1D013005', 'pretest', 15, 44, 'b', 0),
('f1d0130454', 'f1d013045', 'pretest', 4, 12, 'a', 0),
('f1d0130455', 'f1d013045', 'pretest', 5, 13, 'c', 0),
('f1d0130456', 'f1d013045', 'pretest', 6, 17, 'd', 0),
('f1d0130254', 'f1d013025', 'pretest', 4, 11, 'c', 0),
('f1d0130457', 'f1d013045', 'pretest', 7, 20, 'b', 0),
('f1d0130458', 'f1d013045', 'pretest', 8, 22, 'b', 0),
('f1d0130459', 'f1d013045', 'pretest', 9, 26, 'b', 1),
('f1d01304510', 'f1d013045', 'pretest', 10, 28, 'a', 0),
('f1d01304511', 'f1d013045', 'pretest', 11, 31, 'c', 0),
('f1d0130255', 'f1d013025', 'pretest', 5, 14, 'a', 0),
('f1d01304512', 'f1d013045', 'pretest', 12, 36, 'a', 0),
('f1d0130256', 'f1d013025', 'pretest', 6, 18, 'd', 0),
('f1d01304513', 'f1d013045', 'pretest', 13, 38, 'c', 0),
('f1d01304514', 'f1d013045', 'pretest', 14, 40, 'd', 0),
('f1d01304515', 'f1d013045', 'pretest', 15, 43, 'b', 0),
('f1d0130855', 'f1d013085', 'pretest', 5, 15, 'd', 0),
('f1d0130257', 'f1d013025', 'pretest', 7, 19, 'c', 0),
('f1d0130258', 'f1d013025', 'pretest', 8, 23, 'a', 0),
('f1d0130856', 'f1d013085', 'pretest', 6, 16, 'a', 1),
('f1d0130259', 'f1d013025', 'pretest', 9, 25, 'c', 0),
('f1d01302510', 'f1d013025', 'pretest', 10, 30, 'a', 0),
('f1d0130211', 'f1d013021', 'pretest', 1, 1, 'b', 0),
('f1d01302511', 'f1d013025', 'pretest', 11, 32, 'c', 0),
('f1d01302512', 'f1d013025', 'pretest', 12, 34, 'c', 0),
('f1d0130857', 'f1d013085', 'pretest', 7, 20, 'b', 0),
('f1d01302513', 'f1d013025', 'pretest', 13, 37, 'c', 1),
('f1d01302514', 'f1d013025', 'pretest', 14, 40, 'd', 0),
('f1d01302515', 'f1d013025', 'pretest', 15, 43, 'b', 0),
('f1d0130212', 'f1d013021', 'pretest', 2, 5, 'a', 0),
('f1d0130213', 'f1d013021', 'pretest', 3, 7, 'd', 1),
('f1d0130214', 'f1d013021', 'pretest', 4, 10, 'c', 0),
('f1d0130215', 'f1d013021', 'pretest', 5, 14, 'b', 0),
('f1d0130216', 'f1d013021', 'pretest', 6, 17, 'b', 0),
('f1d0130858', 'f1d013085', 'pretest', 8, 24, 'a', 1),
('f1d0130217', 'f1d013021', 'pretest', 7, 19, 'c', 0),
('f1d0130218', 'f1d013021', 'pretest', 8, 24, 'b', 0),
('f1d0130219', 'f1d013021', 'pretest', 9, 25, 'b', 0),
('f1d01302110', 'f1d013021', 'pretest', 10, 29, 'd', 0),
('f1d01302111', 'f1d013021', 'pretest', 11, 32, 'a', 0),
('f1d01302112', 'f1d013021', 'pretest', 12, 35, 'd', 0),
('f1d0130859', 'f1d013085', 'pretest', 9, 25, 'b', 0),
('f1d01302113', 'f1d013021', 'pretest', 13, 37, 'a', 0),
('f1d01302114', 'f1d013021', 'pretest', 14, 42, 'd', 0),
('f1d01302115', 'f1d013021', 'pretest', 15, 44, 'c', 0),
('f1d01308510', 'f1d013085', 'pretest', 10, 30, 'd', 0),
('f1d01308511', 'f1d013085', 'pretest', 11, 32, 'd', 1),
('f1d01308512', 'f1d013085', 'pretest', 12, 34, 'b', 1),
('f1d01308513', 'f1d013085', 'pretest', 13, 37, 'c', 1),
('f1d01308514', 'f1d013085', 'pretest', 14, 40, 'c', 1),
('f1d01308515', 'f1d013085', 'pretest', 15, 45, 'c', 0),
('F1D01303001', 'F1D0130300', 'pretest', 1, 3, 'd', 1),
('F1D01303002', 'F1D0130300', 'pretest', 2, 6, 'b', 0),
('F1D01303003', 'F1D0130300', 'pretest', 3, 7, 'a', 0),
('F1D01303004', 'F1D0130300', 'pretest', 4, 12, 'c', 1),
('F1D01303005', 'F1D0130300', 'pretest', 5, 15, 'a', 0),
('F1D01303006', 'F1D0130300', 'pretest', 6, 16, 'a', 1),
('F1D01303007', 'F1D0130300', 'pretest', 7, 19, 'c', 0),
('F1D01303008', 'F1D0130300', 'pretest', 8, 23, 'a', 0),
('F1D01303009', 'F1D0130300', 'pretest', 9, 27, 'c', 0),
('F1D013030010', 'F1D0130300', 'pretest', 10, 30, 'd', 0),
('F1D013030011', 'F1D0130300', 'pretest', 11, 31, 'a', 0),
('F1D013030012', 'F1D0130300', 'pretest', 12, 35, 'a', 0),
('F1D013030013', 'F1D0130300', 'pretest', 13, 37, 'b', 0),
('F1D013030014', 'F1D0130300', 'pretest', 14, 40, 'c', 1),
('F1D013030015', 'F1D0130300', 'pretest', 15, 43, 'c', 1),
('F1D0130551', 'F1D013055', 'pretest', 1, 3, 'x', 0),
('F1D0130552', 'F1D013055', 'pretest', 2, 6, 'b', 0),
('F1D0130553', 'F1D013055', 'pretest', 3, 8, 'c', 0),
('F1D0130554', 'F1D013055', 'pretest', 4, 10, 'c', 0),
('F1D0130555', 'F1D013055', 'pretest', 5, 15, 'c', 1),
('F1D0130556', 'F1D013055', 'pretest', 6, 17, 'a', 1),
('F1D0130557', 'F1D013055', 'pretest', 7, 20, 'c', 1),
('F1D0130558', 'F1D013055', 'pretest', 8, 22, 'b', 0),
('F1D0130559', 'F1D013055', 'pretest', 9, 26, 'a', 0),
('F1D01305510', 'F1D013055', 'pretest', 10, 29, 'd', 0),
('F1D01305511', 'F1D013055', 'pretest', 11, 31, 'd', 0),
('F1D01305512', 'F1D013055', 'pretest', 12, 36, 'c', 1),
('F1D01305513', 'F1D013055', 'pretest', 13, 37, 'c', 1),
('F1D01305514', 'F1D013055', 'pretest', 14, 42, 'c', 1),
('F1D01305515', 'F1D013055', 'pretest', 15, 45, 'a', 0),
('F1D0130231', 'F1D013023', 'pretest', 1, 2, 'd', 0),
('F1D0130232', 'F1D013023', 'pretest', 2, 5, 'd', 1),
('F1D0130233', 'F1D013023', 'pretest', 3, 9, 'b', 1),
('F1D0130234', 'F1D013023', 'pretest', 4, 12, 'c', 1),
('F1D0130235', 'F1D013023', 'pretest', 5, 15, 'c', 1),
('F1D0130236', 'F1D013023', 'pretest', 6, 16, 'a', 1),
('F1D0130237', 'F1D013023', 'pretest', 7, 21, 'b', 0),
('F1D0130238', 'F1D013023', 'pretest', 8, 23, 'd', 0),
('F1D0130239', 'F1D013023', 'pretest', 9, 26, 'd', 0),
('F1D01302310', 'F1D013023', 'pretest', 10, 29, 'b', 0),
('F1D01302311', 'F1D013023', 'pretest', 11, 32, 'b', 0),
('F1D01302312', 'F1D013023', 'pretest', 12, 34, 'd', 0),
('F1D01302313', 'F1D013023', 'pretest', 13, 37, 'd', 0),
('F1D01302314', 'F1D013023', 'pretest', 14, 40, 'c', 1),
('F1D01302315', 'F1D013023', 'pretest', 15, 43, 'c', 1),
('F1D0130271', 'F1D013027', 'pretest', 1, 3, 'd', 1),
('F1D0130272', 'F1D013027', 'pretest', 2, 4, 'a', 0),
('F1D0130273', 'F1D013027', 'pretest', 3, 7, 'c', 0),
('F1D0130274', 'F1D013027', 'pretest', 4, 11, 'c', 0),
('F1D0130275', 'F1D013027', 'pretest', 5, 14, 'd', 1),
('F1D0130276', 'F1D013027', 'pretest', 6, 18, 'a', 1),
('F1D0130277', 'F1D013027', 'pretest', 7, 20, 'c', 1),
('F1D0130278', 'F1D013027', 'pretest', 8, 24, 'c', 0),
('F1D0130279', 'F1D013027', 'pretest', 9, 27, 'b', 1),
('F1D01302710', 'F1D013027', 'pretest', 10, 30, 'a', 0),
('F1D01302711', 'F1D013027', 'pretest', 11, 31, 'a', 0),
('F1D01302712', 'F1D013027', 'pretest', 12, 36, 'a', 0),
('F1D01302713', 'F1D013027', 'pretest', 13, 37, 'a', 0),
('F1D01302714', 'F1D013027', 'pretest', 14, 41, 'b', 1),
('F1D01302715', 'F1D013027', 'pretest', 15, 44, 'd', 1),
('F1D0130171', 'F1D013017', 'pretest', 1, 3, 'd', 1),
('F1D0130172', 'F1D013017', 'pretest', 2, 5, 'a', 0),
('F1D0130173', 'F1D013017', 'pretest', 3, 7, 'c', 0),
('F1D0130174', 'F1D013017', 'pretest', 4, 12, 'a', 0),
('F1D0130175', 'F1D013017', 'pretest', 5, 13, 'a', 1),
('F1D0130176', 'F1D013017', 'pretest', 6, 16, 'b', 0),
('F1D0130177', 'F1D013017', 'pretest', 7, 19, 'b', 0),
('F1D0130178', 'F1D013017', 'pretest', 8, 22, 'a', 1),
('F1D0130179', 'F1D013017', 'pretest', 9, 25, 'c', 0),
('F1D01301710', 'F1D013017', 'pretest', 10, 28, 'a', 0),
('F1D01301711', 'F1D013017', 'pretest', 11, 33, 'c', 1),
('F1D01301712', 'F1D013017', 'pretest', 12, 36, 'b', 0),
('F1D01301713', 'F1D013017', 'pretest', 13, 37, 'a', 0),
('F1D01301714', 'F1D013017', 'pretest', 14, 41, 'a', 0),
('F1D01301715', 'F1D013017', 'pretest', 15, 44, 'a', 0),
('F1D0130711', 'F1D013071', 'pretest', 1, 3, 'a', 0),
('F1D0130712', 'F1D013071', 'pretest', 2, 5, 'a', 0),
('F1D0130713', 'F1D013071', 'pretest', 3, 8, 'a', 0),
('F1D0130714', 'F1D013071', 'pretest', 4, 10, 'a', 1),
('F1D0130715', 'F1D013071', 'pretest', 5, 13, 'b', 0),
('F1D0130716', 'F1D013071', 'pretest', 6, 17, 'b', 0),
('F1D0130717', 'F1D013071', 'pretest', 7, 19, 'b', 0),
('F1D0130718', 'F1D013071', 'pretest', 8, 24, 'd', 0),
('F1D0130719', 'F1D013071', 'pretest', 9, 26, 'b', 1),
('F1D01307110', 'F1D013071', 'pretest', 10, 30, 'a', 0),
('F1D01307111', 'F1D013071', 'pretest', 11, 33, 'c', 1),
('F1D01307112', 'F1D013071', 'pretest', 12, 34, 'd', 0),
('f1d01307113', 'f1d013071', 'pretest', 13, 39, 'd', 0),
('f1d01307114', 'f1d013071', 'pretest', 14, 41, 'b', 1),
('f1d01307115', 'f1d013071', 'pretest', 15, 45, 'a', 0),
('f1d0130071', 'f1d013007', 'pretest', 1, 2, 'd', 0),
('f1d0130072', 'f1d013007', 'pretest', 2, 6, 'b', 0),
('f1d0130073', 'f1d013007', 'pretest', 3, 7, 'd', 1),
('f1d0130074', 'f1d013007', 'pretest', 4, 12, 'c', 1),
('f1d0130075', 'f1d013007', 'pretest', 5, 14, 'a', 0),
('f1d0130076', 'f1d013007', 'pretest', 6, 16, 'a', 1),
('f1d0130077', 'f1d013007', 'pretest', 7, 20, 'a', 0),
('f1d0130078', 'f1d013007', 'pretest', 8, 24, 'b', 0),
('f1d0130079', 'f1d013007', 'pretest', 9, 26, 'c', 0),
('f1d01300710', 'f1d013007', 'pretest', 10, 30, 'b', 0),
('f1d01300711', 'f1d013007', 'pretest', 11, 32, 'c', 0),
('f1d01300712', 'f1d013007', 'pretest', 12, 36, 'd', 0),
('f1d01300713', 'f1d013007', 'pretest', 13, 37, 'c', 1),
('f1d01300714', 'f1d013007', 'pretest', 14, 40, 'c', 1),
('f1d01300715', 'f1d013007', 'pretest', 15, 45, 'a', 0),
('F1D0130421', 'F1D013042', 'pretest', 1, 1, 'b', 0),
('F1D0130422', 'F1D013042', 'pretest', 2, 4, 'a', 0),
('F1D0130423', 'F1D013042', 'pretest', 3, 7, 'c', 0),
('F1D0130424', 'F1D013042', 'pretest', 4, 12, 'x', 0),
('F1D0130425', 'F1D013042', 'pretest', 5, 15, 'c', 1),
('F1D0130426', 'F1D013042', 'pretest', 6, 16, 'c', 0),
('F1D0130427', 'F1D013042', 'pretest', 7, 20, 'b', 0),
('F1D0130428', 'F1D013042', 'pretest', 8, 24, 'a', 1),
('F1D0130429', 'F1D013042', 'pretest', 9, 27, 'b', 1),
('F1D01304210', 'F1D013042', 'pretest', 10, 30, 'c', 1),
('F1D01304211', 'F1D013042', 'pretest', 11, 31, 'd', 0),
('F1D01304212', 'F1D013042', 'pretest', 12, 35, 'b', 1),
('F1D01304213', 'F1D013042', 'pretest', 13, 39, 'd', 0),
('F1D01304214', 'F1D013042', 'pretest', 14, 40, 'x', 0),
('F1D01304215', 'F1D013042', 'pretest', 15, 44, 'c', 0),
('F1D0130121', 'F1D013012', 'pretest', 1, 1, 'd', 0),
('F1D0130122', 'F1D013012', 'pretest', 2, 5, 'a', 0),
('F1D0130123', 'F1D013012', 'pretest', 3, 7, 'c', 0),
('F1D0130124', 'F1D013012', 'pretest', 4, 12, 'c', 1),
('F1D0130125', 'F1D013012', 'pretest', 5, 13, 'd', 0),
('F1D0130126', 'F1D013012', 'pretest', 6, 16, 'c', 0),
('F1D0130127', 'F1D013012', 'pretest', 7, 20, 'b', 0),
('F1D0130128', 'F1D013012', 'pretest', 8, 22, 'a', 1),
('F1D0130129', 'F1D013012', 'pretest', 9, 26, 'b', 1),
('F1D01301210', 'F1D013012', 'pretest', 10, 30, 'c', 1),
('F1D01301211', 'F1D013012', 'pretest', 11, 31, 'd', 0),
('F1D01301212', 'F1D013012', 'pretest', 12, 36, 'a', 0),
('F1D01301213', 'F1D013012', 'pretest', 13, 38, 'c', 0),
('F1D01301214', 'F1D013012', 'pretest', 14, 42, 'c', 1),
('F1D01301215', 'F1D013012', 'pretest', 15, 45, 'a', 0);

-- --------------------------------------------------------

--
-- Table structure for table `questionprob`
--

CREATE TABLE IF NOT EXISTS `questionprob` (
  `id` varchar(15) NOT NULL,
  `name` varchar(50) NOT NULL,
  `q1` tinyint(1) NOT NULL,
  `q2` tinyint(1) NOT NULL,
  `q3` tinyint(1) NOT NULL,
  `q4` tinyint(1) NOT NULL,
  `q5` tinyint(1) NOT NULL,
  `q6` tinyint(1) NOT NULL,
  `q7` tinyint(1) NOT NULL,
  `q8` tinyint(1) NOT NULL,
  `q9` tinyint(1) NOT NULL,
  `q10` tinyint(1) NOT NULL,
  `q11` tinyint(1) NOT NULL,
  `q12` tinyint(1) NOT NULL,
  `q13` tinyint(1) NOT NULL,
  `q14` tinyint(1) NOT NULL,
  `q15` tinyint(1) NOT NULL,
  `q16` tinyint(1) NOT NULL,
  `q17` tinyint(1) NOT NULL,
  `q18` tinyint(1) NOT NULL,
  `q19` tinyint(1) NOT NULL,
  `q20` tinyint(1) NOT NULL,
  `q21` tinyint(1) NOT NULL,
  `q22` tinyint(1) NOT NULL,
  `q23` tinyint(1) NOT NULL,
  `q24` tinyint(1) NOT NULL,
  `q25` tinyint(1) NOT NULL,
  `q26` tinyint(1) NOT NULL,
  `q27` tinyint(1) NOT NULL,
  `q28` tinyint(1) NOT NULL,
  `q29` tinyint(1) NOT NULL,
  `q30` tinyint(1) NOT NULL,
  `q31` tinyint(1) NOT NULL,
  `q32` tinyint(1) NOT NULL,
  `q33` tinyint(1) NOT NULL,
  `q34` tinyint(1) NOT NULL,
  `q35` tinyint(1) NOT NULL,
  `q36` tinyint(1) NOT NULL,
  `q37` tinyint(1) NOT NULL,
  `q38` tinyint(1) NOT NULL,
  `q39` tinyint(1) NOT NULL,
  `q40` tinyint(1) NOT NULL,
  `q41` tinyint(1) NOT NULL,
  `q42` tinyint(1) NOT NULL,
  `q43` tinyint(1) NOT NULL,
  `q44` tinyint(1) NOT NULL,
  `q45` tinyint(1) NOT NULL,
  `q46` tinyint(1) NOT NULL,
  `q47` tinyint(1) NOT NULL,
  `q48` tinyint(1) NOT NULL,
  `q49` tinyint(1) NOT NULL,
  `q50` tinyint(1) NOT NULL,
  `q51` tinyint(1) NOT NULL,
  `q52` tinyint(1) NOT NULL,
  `q53` tinyint(1) NOT NULL,
  `q54` tinyint(1) NOT NULL,
  `q55` tinyint(1) NOT NULL,
  `q56` tinyint(1) NOT NULL,
  `q57` tinyint(1) NOT NULL,
  `q58` tinyint(1) NOT NULL,
  `q59` tinyint(1) NOT NULL,
  `q60` tinyint(1) NOT NULL,
  `q61` tinyint(1) NOT NULL,
  `q62` tinyint(1) NOT NULL,
  `q63` tinyint(1) NOT NULL,
  `q64` tinyint(1) NOT NULL,
  `q65` tinyint(1) NOT NULL,
  `q66` tinyint(1) NOT NULL,
  `q67` tinyint(1) NOT NULL,
  `q68` tinyint(1) NOT NULL,
  `q69` tinyint(1) NOT NULL,
  `q70` tinyint(1) NOT NULL,
  `q71` tinyint(1) NOT NULL,
  `q72` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `questionprob`
--

INSERT INTO `questionprob` (`id`, `name`, `q1`, `q2`, `q3`, `q4`, `q5`, `q6`, `q7`, `q8`, `q9`, `q10`, `q11`, `q12`, `q13`, `q14`, `q15`, `q16`, `q17`, `q18`, `q19`, `q20`, `q21`, `q22`, `q23`, `q24`, `q25`, `q26`, `q27`, `q28`, `q29`, `q30`, `q31`, `q32`, `q33`, `q34`, `q35`, `q36`, `q37`, `q38`, `q39`, `q40`, `q41`, `q42`, `q43`, `q44`, `q45`, `q46`, `q47`, `q48`, `q49`, `q50`, `q51`, `q52`, `q53`, `q54`, `q55`, `q56`, `q57`, `q58`, `q59`, `q60`, `q61`, `q62`, `q63`, `q64`, `q65`, `q66`, `q67`, `q68`, `q69`, `q70`, `q71`, `q72`) VALUES
('F1D012003', 'Aranta ditoaji H ', 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1),
('F1D012005', 'Anggi Fitriani', 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0),
('F1D012007', 'Artikayumi Mardjun', 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1),
('F1D012010', 'Baiq Nia Rahmawati', 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0),
('F1D012011', 'BQ. Evavinola', 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0),
('F1D012012', 'Cahyani Intan Pratiwi', 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0),
('F1D012013', 'Catur Wulandari', 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1),
('F1D012014', 'Desenia Mulyani H.', 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1),
('F1D012015', 'Dewa Ayu Sriwidari', 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1),
('F1D012016', 'Didi Hadi Saputra', 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0),
('F1D012017', 'Dony Rifaldi', 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1),
('F1D012019', 'Dyah Ayu Susanti', 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0),
('F1D012020', 'Eet Widarini', 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0),
('F1D012021', 'Evi Ana Kusuma', 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
('F1D012022', 'Fadilah', 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1),
('F1D012023', 'Firmanda Rizky Arinanta ', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1),
('F1D012024', 'Gandi Rifansyah', 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0),
('F1D012025', 'Gigih Mathori Basil', 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0),
('F1D012027', 'Hendra Arie Budianto', 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1),
('F1D012028', 'Herman Muliadi', 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1),
('F1D012029', 'I Dewa Putu Dhira P', 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0),
('F1D012030', 'I Gede Adi S', 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0),
('F1D012034', 'Ilmiatul Hafazah', 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0),
('F1D012035', 'imam tantowi', 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0),
('F1D012036', 'Irwan Hadi', 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1),
('F1D012037', 'Julianto Eko P.', 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1),
('F1D012038', 'Karinda Irianti', 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
('F1D012039', 'Kautsar Vidi aprilians', 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0),
('F1D012040', 'Kurnia Ramadhan', 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1),
('F1D012041', 'L. M. Agung Hidayatullah', 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0),
('F1D012043', 'L.Rayzam Purwadi', 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0),
('F1D012045', 'L.Yusran Said', 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0),
('F1D012046', 'L. Zulfikar M.', 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1),
('F1D012047', 'Listya Ayuningsih SP', 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0),
('F1D012049', 'M. Romi Saefudin', 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0),
('F1D012052', 'Marlintika', 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1),
('F1D012053', 'Mohammad Zaenuddin H', 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1),
('F1D012057', 'Muhammad Haris', 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0),
('F1D012058', 'M. Heri Safwan', 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0),
('F1D012059', 'M.Irwan Rosadi', 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1),
('F1D012060', 'Muhammad Toni Z.', 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
('F1D012061', 'Muzayyad Hasani', 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1),
('F1D012062', 'Nella Rosa', 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1),
('F1D012063', 'Nur Sabrina Meutia', 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0),
('F1D012064', 'Nurhayati(B)', 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0),
('F1D012065', 'Nurhayati (A)', 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0),
('F1D012067', 'Nurul Hidayah', 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0),
('F1D012068', 'Nyoman Yoga Kristiawan', 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0),
('F1D012069', 'Putrianingsih', 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1),
('F1D012071', 'Rahma Dayani', 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1),
('F1D012073', 'Rifky Hariesugama', 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1),
('F1D012074', 'Riris Parahita', 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1),
('F1D012076', 'Rojiman Hadi Saputra', 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0),
('F1D012077', 'Suharwan', 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1),
('F1D012078', 'Sukandar Yudiastira', 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
('F1D012079', 'Sumiati', 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
('F1D012080', 'Suri Darmiantini', 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0),
('F1D012081', 'Syahrani Fitria L.', 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0),
('F1D012082', 'Syahroni Hidayat', 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0),
('F1D012083', 'Syaifullah', 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0),
('F1D012084', 'Syarlaili Humairah', 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0),
('F1D012085', 'Tri Erna S', 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1),
('F1D012086', 'Tri Yulianto', 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1),
('F1D012087', 'Trimukti Wibowo', 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1),
('F1D012088', 'Ulil Amri', 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1),
('F1D012090', 'Yogi Permana', 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0),
('F1D012091', 'Yunita Lestari', 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1);

-- --------------------------------------------------------

--
-- Table structure for table `sm_probabilities`
--

CREATE TABLE IF NOT EXISTS `sm_probabilities` (
  `node_name` varchar(100) NOT NULL,
  `probabilities` text NOT NULL,
  PRIMARY KEY (`node_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `sm_probabilities`
--

INSERT INTO `sm_probabilities` (`node_name`, `probabilities`) VALUES
('baseJava', '0.5517#0.6667#0.4483#0.3333'),
('classNmethod', '0.4706#0.5417#0.2857#0.5#0.5294#0.4583#0.7143#0.5'),
('variable', '0.9333#0.9091#0.7#0.7#0.875#0.8#0.75#0.75#0.0667#0.0909#0.3#0.3#0.125#0.2#0.25#0.25'),
('pdt', '0.7143#0.99#0.0011#0.5#0.4444#0.99#0.99#0.0011#0.99#0.99#0.75#0.0011#0.99#0.25#0.3333#0.5#0.7143#0.99#0.0011#0.0011#0.0011#0.0011#0.0011#0.0011#0.99#0.5#0.0011#0.0011#0.6667#0.0011#0.0011#0.0011#0.2857#0.01#0.9989#0.5#0.5556#0.01#0.01#0.9989#0.01#0.01#0.25#0.9989#0.01#0.75#0.6667#0.5#0.2857#0.01#0.9989#0.9989#0.9989#0.9989#0.9989#0.9989#0.01#0.5#0.9989#0.9989#0.3333#0.9989#0.9989#0.9989'),
('odt', '0.7436#0.5714#0.2564#0.4286'),
('array', '0.5714#0.3913#0.75#0.5#0.4286#0.6087#0.25#0.5'),
('logic', '0.6279#0.4167#0.3721#0.5833'),
('opArithmetic', '0.36#0.5#0.3077#0.0011#0.7273#0.3333#0.5#0.0011#0.64#0.5#0.6923#0.9989#0.2727#0.6667#0.5#0.9989'),
('opIncNdec', '0.5#0.6154#0.0011#0.1#0.5455#0.2857#0.3333#0.1429#0.5#0.3846#0.9989#0.9#0.4545#0.7143#0.6667#0.8571'),
('opRelation', '0.375#0.4286#0.0011#0.3333#0.99#0.0011#0.0011#0.0011#0.25#0.3077#0.0011#0.1667#0.5#0.0011#0.0011#0.0011#0.625#0.5714#0.9989#0.6667#0.01#0.9989#0.9989#0.9989#0.75#0.6923#0.9989#0.8333#0.5#0.9989#0.9989#0.9989'),
('opLogic', '0.3333#0.4091#0.5#0.2857#0.6667#0.5909#0.5#0.7143'),
('opPredence', '0.6#0.5#0.3333#0.0011#0.2381#0.0011#0.5714#0.0011#0.4#0.5#0.6667#0.9989#0.7619#0.9989#0.4286#0.9989'),
('looping', '0.3333#0.2#0.0011#0.0011#0.2#0.1818#0.0011#0.0011#0.0011#0.0011#0.0011#0.0011#0.1429#0.2727#0.25#0.5714#0.6667#0.8#0.9989#0.9989#0.8#0.8182#0.9989#0.9989#0.9989#0.9989#0.9989#0.9989#0.8571#0.7273#0.75#0.4286'),
('ifElse', '0.5789#0.3437#0.75#0.3333#0.4211#0.6563#0.25#0.6667'),
('switchCase', '0.38#0.2941#0.62#0.7059'),
('flowchart', '0.5#0.4242#0.5#0.5758'),
('QT1', '0.8657#0.1343'),
('QT2', '0.6866#0.3134'),
('QT3', '0.5821#0.4179'),
('QT4', '0.6418#0.3582'),
('QT5', '0.5075#0.4925'),
('QT6', '0.5522#0.4478'),
('QT7', '0.2687#0.7313'),
('QT8', '0.4627#0.5373'),
('QT9', '0.6119#0.3881'),
('QT10', '0.4776#0.5224'),
('QT11', '0.8209#0.1791'),
('QT12', '0.6567#0.3433'),
('QT13', '0.7612#0.2388'),
('QT14', '0.7463#0.2537'),
('QT15', '0.3433#0.6567');

-- --------------------------------------------------------

--
-- Table structure for table `studentmodel`
--

CREATE TABLE IF NOT EXISTS `studentmodel` (
  `id` varchar(15) NOT NULL,
  `name` varchar(50) NOT NULL,
  `qt1` tinyint(1) NOT NULL,
  `qt2` tinyint(1) NOT NULL,
  `qt3` tinyint(1) NOT NULL,
  `qt4` tinyint(1) NOT NULL,
  `qt5` tinyint(1) NOT NULL,
  `qt6` tinyint(1) NOT NULL,
  `qt7` tinyint(1) NOT NULL,
  `qt8` tinyint(1) NOT NULL,
  `qt9` tinyint(1) NOT NULL,
  `qt10` tinyint(1) NOT NULL,
  `qt11` tinyint(1) NOT NULL,
  `qt12` tinyint(1) NOT NULL,
  `qt13` tinyint(1) NOT NULL,
  `qt14` tinyint(1) NOT NULL,
  `qt15` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `studentmodel`
--

INSERT INTO `studentmodel` (`id`, `name`, `qt1`, `qt2`, `qt3`, `qt4`, `qt5`, `qt6`, `qt7`, `qt8`, `qt9`, `qt10`, `qt11`, `qt12`, `qt13`, `qt14`, `qt15`) VALUES
('F1D012003', 'Aranta ditoaji H ', 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0),
('F1D012005', 'Anggi Fitriani', 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1),
('F1D012007', 'Artikayumi Mardjun', 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0),
('F1D012010', 'Baiq Nia Rahmawati', 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1),
('F1D012011', 'BQ. Evavinola', 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0),
('F1D012012', 'Cahyani Intan Pratiwi', 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0),
('F1D012013', 'Catur Wulandari', 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1),
('F1D012014', 'Desenia Mulyani H.', 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1),
('F1D012015', 'Dewa Ayu Sriwidari', 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0),
('F1D012016', 'Didi Hadi Saputra', 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0),
('F1D012017', 'Dony Rifaldi', 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
('F1D012019', 'Dyah Ayu Susanti', 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0),
('F1D012020', 'Eet Widarini', 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0),
('F1D012021', 'Evi Ana Kusuma', 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1),
('F1D012022', 'Fadilah', 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0),
('F1D012023', 'Firmanda Rizky Arinanta ', 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1),
('F1D012024', 'Gandi Rifansyah', 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0),
('F1D012025', 'Gigih Mathori Basil', 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0),
('F1D012027', 'Hendra Arie Budianto', 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0),
('F1D012028', 'Herman Muliadi', 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0),
('F1D012029', 'I Dewa Putu Dhira P', 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0),
('F1D012030', 'I Gede Adi S', 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0),
('F1D012034', 'Ilmiatul Hafazah', 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0),
('F1D012035', 'imam tantowi', 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0),
('F1D012036', 'Irwan Hadi', 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1),
('F1D012037', 'Julianto Eko P.', 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1),
('F1D012038', 'Karinda Irianti', 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0),
('F1D012039', 'Kautsar Vidi aprilians', 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0),
('F1D012040', 'Kurnia Ramadhan', 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0),
('F1D012041', 'L. M. Agung Hidayatullah', 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1),
('F1D012043', 'L.Rayzam Purwadi', 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0),
('F1D012045', 'L.Yusran Said', 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1),
('F1D012046', 'L. Zulfikar M.', 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0),
('F1D012047', 'Listya Ayuningsih SP', 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0),
('F1D012049', 'M. Romi Saefudin', 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
('F1D012052', 'Marlintika', 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0),
('F1D012053', 'Mohammad Zaenuddin H', 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1),
('F1D012057', 'Muhammad Haris', 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
('F1D012058', 'M. Heri Safwan', 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0),
('F1D012059', 'M.Irwan Rosadi', 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0),
('F1D012060', 'Muhammad Toni Z.', 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
('F1D012061', 'Muzayyad Hasani', 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1),
('F1D012062', 'Nella Rosa', 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1),
('F1D012063', 'Nur Sabrina Meutia', 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0),
('F1D012064', 'Nurhayati(B)', 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0),
('F1D012065', 'Nurhayati (A)', 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1),
('F1D012067', 'Nurul Hidayah', 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0),
('F1D012068', 'Nyoman Yoga Kristiawan', 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0),
('F1D012069', 'Putrianingsih', 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1),
('F1D012071', 'Rahma Dayani', 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1),
('F1D012073', 'Rifky Hariesugama', 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1),
('F1D012074', 'Riris Parahita', 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1),
('F1D012076', 'Rojiman Hadi Saputra', 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0),
('F1D012077', 'Suharwan', 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0),
('F1D012078', 'Sukandar Yudiastira', 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1),
('F1D012079', 'Sumiati', 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1),
('F1D012080', 'Suri Darmiantini', 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0),
('F1D012081', 'Syahrani Fitria L.', 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1),
('F1D012082', 'Syahroni Hidayat', 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1),
('F1D012083', 'Syaifullah', 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0),
('F1D012084', 'Syarlaili Humairah', 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0),
('F1D012085', 'Tri Erna S', 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0),
('F1D012086', 'Tri Yulianto', 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0),
('F1D012087', 'Trimukti Wibowo', 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0),
('F1D012088', 'Ulil Amri', 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0),
('F1D012090', 'Yogi Permana', 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0),
('F1D012091', 'Yunita Lestari', 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
